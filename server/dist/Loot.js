"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const LootItem_1 = require("./LootItem");
const LootType_1 = require("./LootType");
const RoundObstacle_1 = require("./RoundObstacle");
const RectangleObstacle_1 = require("./RectangleObstacle");
class Loot {
    constructor(map) {
        this.lootId = 0;
        this.lootItems = [];
        this.randomPositionAttempts = 0;
        this.maxRandomPositionAttempts = 1000;
        this.map = map;
    }
    createLootItem(centerX, centerY, type, quantity = 1) {
        const loot = new LootItem_1.default(this.lootId++, centerX, centerY, type, quantity);
        if (centerX === 0 && centerY === 0)
            this.setRandomPosition(loot);
        this.lootItems.push(loot);
    }
    setRandomPosition(loot) {
        this.randomPositionAttempts++;
        const lootSize = loot.size * 3;
        const randomX = Math.floor(Math.random() * (this.map.getSize() - lootSize * 2)) + lootSize;
        const randomY = Math.floor(Math.random() * (this.map.getSize() - lootSize * 2)) + lootSize;
        loot.setX(randomX);
        loot.setY(randomY);
        //repeat
        if (this.randomPositionCollision(loot) && this.randomPositionAttempts < this.maxRandomPositionAttempts) {
            this.setRandomPosition(loot);
        }
        else {
            //done
            const lootItemGap = loot.size;
            if (loot.type === LootType_1.LootType.Pistol) {
                let directionX = 1;
                let directionY = 1;
                if (Math.random() > 0.5)
                    directionX = -1;
                if (Math.random() > 0.5)
                    directionY = -1;
                //+ammo
                this.lootItems.push(new LootItem_1.default(this.lootId++, loot.getCenterX() + lootItemGap * directionX, loot.getCenterY() + lootItemGap * directionY, LootType_1.LootType.OrangeAmmo, 30));
            }
            else if (loot.type === LootType_1.LootType.Rifle) {
                let directionX = 1;
                let directionY = 1;
                if (Math.random() > 0.5)
                    directionX = -1;
                if (Math.random() > 0.5)
                    directionY = -1;
                //+ammo
                this.lootItems.push(new LootItem_1.default(this.lootId++, loot.getCenterX() + lootItemGap * directionX, loot.getCenterY() + lootItemGap * directionY, LootType_1.LootType.GreenAmmo, 20));
            }
            else if (loot.type === LootType_1.LootType.Shotgun) {
                //+ammo
                let directionX = 1;
                let directionY = 1;
                if (Math.random() > 0.5)
                    directionX = -1;
                if (Math.random() > 0.5)
                    directionY = -1;
                this.lootItems.push(new LootItem_1.default(this.lootId++, loot.getCenterX() + lootItemGap * directionX, loot.getCenterY() + lootItemGap * directionY, LootType_1.LootType.RedAmmo, 10));
            }
            else if (loot.type === LootType_1.LootType.Machinegun) {
                //+ammo
                let directionX = 1;
                let directionY = 1;
                if (Math.random() > 0.5)
                    directionX = -1;
                if (Math.random() > 0.5)
                    directionY = -1;
                this.lootItems.push(new LootItem_1.default(this.lootId++, loot.getCenterX() + lootItemGap * directionX, loot.getCenterY() + lootItemGap * directionY, LootType_1.LootType.BlueAmmo, 30));
            }
        }
    }
    randomPositionCollision(loot) {
        for (const obstacle of this.map.rectangleObstacles) {
            if (this.lootInObstacle(loot, obstacle))
                return true;
        }
        for (const obstacle of this.map.impassableRoundObstacles) {
            if (this.lootInObstacle(loot, obstacle))
                return true;
        }
        for (const obstacle of this.map.bushes) {
            if (this.lootInObstacle(loot, obstacle))
                return true;
        }
        for (const obstacle of this.lootItems) {
            if (this.lootInObstacle(loot, obstacle))
                return true;
        }
        return false;
    }
    lootInObstacle(loot, obstacle) {
        let x = 0, y = 0, width = 0, height = 0;
        if (obstacle instanceof RectangleObstacle_1.default) {
            width = obstacle.width;
            height = obstacle.height;
            x = obstacle.x;
            y = obstacle.y;
        }
        if (obstacle instanceof RoundObstacle_1.default) {
            width = obstacle.size;
            height = obstacle.size;
            x = obstacle.x;
            y = obstacle.y;
        }
        if (obstacle instanceof LootItem_1.default) {
            width = obstacle.size;
            height = obstacle.size;
            x = obstacle.getX();
            y = obstacle.getY();
        }
        //bigger loot size
        const gap = 2 * loot.size;
        const lootSize = loot.size + gap;
        if (x + width >= loot.getX() - lootSize &&
            x <= loot.getX() + lootSize &&
            loot.getY() + lootSize >= y &&
            loot.getY() - lootSize <= y + height) {
            return true;
        }
        else {
            return false;
        }
    }
    //loot balancer
    createMainLootItems(players) {
        this.createLootItem(0, 0, LootType_1.LootType.Granade, 10);
        this.createLootItem(0, 0, LootType_1.LootType.Granade, 10);
        this.createLootItem(0, 0, LootType_1.LootType.Granade, 10);
        this.createLootItem(0, 0, LootType_1.LootType.Pistol, 10);
        this.createLootItem(0, 0, LootType_1.LootType.Pistol, 10);
        this.createLootItem(0, 0, LootType_1.LootType.Pistol, 10);
        this.createLootItem(0, 0, LootType_1.LootType.Pistol, 10);
        this.createLootItem(0, 0, LootType_1.LootType.Pistol, 10);
        this.createLootItem(0, 0, LootType_1.LootType.Pistol, 10);
        this.createLootItem(0, 0, LootType_1.LootType.Pistol, 10);
        this.createLootItem(0, 0, LootType_1.LootType.Pistol, 10);
        this.createLootItem(0, 0, LootType_1.LootType.Pistol, 10);
        this.createLootItem(0, 0, LootType_1.LootType.Pistol, 10);
        this.createLootItem(0, 0, LootType_1.LootType.Pistol, 10);
        this.createLootItem(0, 0, LootType_1.LootType.Pistol, 10);
        this.createLootItem(0, 0, LootType_1.LootType.Pistol, 10);
        this.createLootItem(0, 0, LootType_1.LootType.Pistol, 10);
        this.createLootItem(0, 0, LootType_1.LootType.Pistol, 10);
        this.createLootItem(0, 0, LootType_1.LootType.Pistol, 10);
        this.createLootItem(0, 0, LootType_1.LootType.Pistol, 10);
        this.createLootItem(0, 0, LootType_1.LootType.Pistol, 10);
        for (let i = 0; i < players; i++) {
            if (Math.random() > 0.5)
                this.createLootItem(0, 0, LootType_1.LootType.Pistol, 10);
            if (Math.random() > 0.5)
                this.createLootItem(0, 0, LootType_1.LootType.Rifle, 5);
            if (Math.random() > 0.5)
                this.createLootItem(0, 0, LootType_1.LootType.Shotgun, 2);
            if (Math.random() > 0.5)
                this.createLootItem(0, 0, LootType_1.LootType.Machinegun, 30);
            if (Math.random() > 0.5)
                this.createLootItem(0, 0, LootType_1.LootType.Hammer);
            if (Math.random() > 0.5)
                this.createLootItem(0, 0, LootType_1.LootType.Vest);
            if (Math.random() > 0.5)
                this.createLootItem(0, 0, LootType_1.LootType.Scope2);
            if (Math.random() > 0.5)
                this.createLootItem(0, 0, LootType_1.LootType.Scope4);
            if (Math.random() > 0.5)
                this.createLootItem(0, 0, LootType_1.LootType.Scope6);
            if (Math.random() > 0.5)
                this.createLootItem(0, 0, LootType_1.LootType.Granade, 3);
            if (Math.random() > 0.5)
                this.createLootItem(0, 0, LootType_1.LootType.Smoke, 3);
            if (Math.random() > 0.5)
                this.createLootItem(0, 0, LootType_1.LootType.Medkit);
            if (Math.random() > 0.5)
                this.createLootItem(0, 0, LootType_1.LootType.RedAmmo, 10);
            if (Math.random() > 0.5)
                this.createLootItem(0, 0, LootType_1.LootType.GreenAmmo, 20);
            if (Math.random() > 0.5)
                this.createLootItem(0, 0, LootType_1.LootType.BlueAmmo, 30);
            if (Math.random() > 0.5)
                this.createLootItem(0, 0, LootType_1.LootType.OrangeAmmo, 30);
        }
    }
}
exports.default = Loot;
//# sourceMappingURL=data:application/json;base64,