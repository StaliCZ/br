{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Terrain.ts","webpack:///./src/View.ts","webpack:///./src/Point.ts","webpack:///./src/Hand.ts","webpack:///./src/RoundObstacle.ts","webpack:///./src/Tree.ts","webpack:///./src/Player.ts","webpack:///./src/Bush.ts","webpack:///./src/Rock.ts","webpack:///./src/RectangleObstacle.ts","webpack:///./src/Wall.ts","webpack:///./src/Map.ts","webpack:///./src/WaterTerrainData.ts","webpack:///./src/Model.ts","webpack:///./src/Controller.ts","webpack:///./src/app.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TerrainType","Terrain","type","x","y","width","height","this","angle","WaterTriangle2","WaterTriangle3","WaterTriangle4","View","waterTerrainData","_this","resolutionAdjustment","canvas","document","getElementById","helperCanvas","ctx","getContext","playerSVG","Image","src","playerHandSVG","bushSVG","rockSVG","treeSVG","cursorSVG","waterTrianglePNG","onload","saveWaterPixels","screenResize","window","innerWidth","innerHeight","changeResolutionAdjustment","finalAdjustment","waterType","fillStyle","fillRect","middleImage","save","translate","rotate","Math","PI","drawImage","restore","Worker","worker","onmessage","e","setData","data","getImageData","postMessage","size","time","Date","getTime","console","log","draw","map","player","mouse","clearRect","playerCenterX","getX","playerCenterY","getY","screenCenterX","screenCenterY","gridSize","blocks","_i","_a","length","block","_b","_c","terrain","Water","WaterTriangle1","_d","_e","rocks","rock","globalAlpha","getOpacity","rockAnimateX","rockAnimateY","getAnimateTimer","getHitAnimateShiftX","getHitAnimateShiftY","rectangleObstacles","rectangleObstacle","hands","hand","j","collisionPoints","point","getCenterX","getCenterY","bushes","bush","trees","tree","Hand","playerSize","radius","shiftAngle","hitTimer","inAction","playerRadius","calculateCollisionsPoints","sin","cos","push","src_Point","ready","moveHand","playerAngle","direction","playerX","playerY","obstacle","isActive","obstacleAndHandRadius","x_1","y_1","sqrt","acceptHit","x_2","y_2","x_3","y_3","isPointIn","playerAngleForHand","hit","RoundObstacle","opacity","active","hitAnimateTimer","hitAnimateShiftX","hitAnimateShiftY","handCenter","setAnimateHit","hitAngle","abs","atan","round","_super","Tree","treeTrankRadius","__extends","src_RoundObstacle","Player","speed","slowAroundObstacle","denySlowAroundObstacle","src_Hand","getAngle","setAngle","random","playerMove","up","left","down","right","mouseX","mouseY","shift","myXPositionOnTerrain","floor","myYPositionOnTerrain","includeWater","shiftX","shiftY","shiftOnPosition","rotatePlayer","changeHandsPosition","countShifts","shiftDirection","canIshift","pointOnMyPosition","goAroundRectangleObstacle","impassableRoundObstacles","roundObstacle","obstacleRadius","src_Tree","obstacleAndPlayerRadius","goAroundRoundObstacle","maxObstacleOverlap","centerX","centerY","Bush","Bush_extends","Rock","Rock_extends","RectangleObstacle","Wall","Wall_extends","src_RectangleObstacle","yy","xx","src_Bush","src_Rock","rock2","rock3","src_Wall","WaterTerrainData","waterTriangle1","waterTriangle2","waterTriangle3","waterTriangle4","Error","waterData","state","Model","keys","src_WaterTerrainData","view","src_View","src_Map","src_Player","gameLoop","requestAnimationFrame","w","a","Controller","middle","getElementsByTagName","model","src_Model","addEventListener","event","Event","dispatchEvent","keysController","mouseController","run","instance","undefined","code"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,mCClFA,IAAYC,SAAZ,SAAYA,GACXA,IAAA,iBACAA,IAAA,mCACAA,IAAA,mCACAA,IAAA,mCACAA,IAAA,mCALD,CAAYA,MAAW,KAQvB,MAAAC,EAAA,WA2BA,OAnBC,SAAYC,EAAmBC,EAAWC,EAAWC,EAAeC,GAOnE,OATQC,KAAAC,MAAgB,EAGxBD,KAAKL,KAAOA,EACZK,KAAKJ,EAAIA,EACTI,KAAKH,EAAIA,EACTG,KAAKF,MAAQA,EACbE,KAAKD,OAASA,EAENJ,GACP,KAAKF,EAAYS,eAChBF,KAAKC,MAAQ,GACb,MACD,KAAKR,EAAYU,eAChBH,KAAKC,MAAQ,IACb,MACD,KAAKR,EAAYW,eAChBJ,KAAKC,MAAQ,MAvBjB,KCFA,WAcC,SAAAI,EAAYC,GAAZ,IAAAC,EAAAP,KAFQA,KAAAQ,qBAA+B,EAGtCR,KAAKS,OAA4BC,SAASC,eAAe,cACzDX,KAAKY,aAAkCF,SAASC,eAAe,UAC/DX,KAAKa,IAAMb,KAAKS,OAAOK,WAAW,MAElCd,KAAKe,UAAY,IAAIC,MACrBhB,KAAKe,UAAUE,IAAM,iBAErBjB,KAAKkB,cAAgB,IAAIF,MACzBhB,KAAKkB,cAAcD,IAAM,eAEzBjB,KAAKmB,QAAU,IAAIH,MACnBhB,KAAKmB,QAAQF,IAAM,eAEnBjB,KAAKoB,QAAU,IAAIJ,MACnBhB,KAAKoB,QAAQH,IAAM,eAEnBjB,KAAKqB,QAAU,IAAIL,MACnBhB,KAAKqB,QAAQJ,IAAM,eAEnBjB,KAAKsB,UAAY,IAAIN,MACrBhB,KAAKsB,UAAUL,IAAM,iBAErBjB,KAAKuB,iBAAmB,IAAIP,MAC5BhB,KAAKuB,iBAAiBN,IAAM,wBAE5BjB,KAAKM,iBAAmBA,EACxBN,KAAKuB,iBAAiBC,OAAS,WAC9BjB,EAAKkB,gBAAgB,kBACrBlB,EAAKkB,gBAAgB,kBACrBlB,EAAKkB,gBAAgB,kBACrBlB,EAAKkB,gBAAgB,mBAsUxB,OAjUCpB,EAAAhB,UAAAqC,aAAA,WACC1B,KAAKS,OAAOX,MAAQ6B,OAAOC,WAC3B5B,KAAKS,OAAOV,OAAS4B,OAAOE,YAG5B7B,KAAK8B,8BAGEzB,EAAAhB,UAAAyC,2BAAR,WACC,IAIMC,GAFQ/B,KAAKS,OAAOX,MAFL,KAGNE,KAAKS,OAAOV,OAFL,MAGqB,EAC3CC,KAAKQ,qBAAuBuB,GAIrB1B,EAAAhB,UAAAoC,gBAAR,SAAwBO,GAAxB,IAAAzB,EAAAP,KACOa,EAAMb,KAAKY,aAAaE,WAAW,MACzCd,KAAKY,aAAad,MAAQE,KAAKuB,iBAAiBzB,MAChDE,KAAKY,aAAab,OAASC,KAAKuB,iBAAiBxB,OAEjDc,EAAIoB,UAAY,UAChBpB,EAAIqB,SAAS,EAAG,EAAGlC,KAAKY,aAAad,MAAOE,KAAKY,aAAab,QAC9D,IAAIoC,EAAcnC,KAAKuB,iBAAiBzB,MAAQ,EAGhD,OAFAe,EAAIuB,OACJvB,EAAIwB,UAAUF,EAAaA,GACnBH,GACP,IAAK,iBACJnB,EAAIyB,OAAO,EAAIC,KAAKC,GAAK,KACzB,MACD,IAAK,iBACJ3B,EAAIyB,OAAO,GAAKC,KAAKC,GAAK,KAC1B,MACD,IAAK,iBACJ3B,EAAIyB,OAAO,IAAMC,KAAKC,GAAK,KAC3B,MACD,IAAK,iBACJ3B,EAAIyB,OAAO,IAAMC,KAAKC,GAAK,KAO7B,GAJA3B,EAAI4B,UAAUzC,KAAKuB,kBAAmBY,GAAcA,GACpDtB,EAAI6B,UAGkB,oBAAXC,OAAwB,CAClC,IAAMC,EAAS,IAAID,OAAO,sBAC1BC,EAAOC,UAAY,SAACC,GAEnBvC,EAAKD,iBAAiByC,QAAQD,EAAEE,KAAKrD,KAAMmD,EAAEE,KAAKA,OAEnD,IAAMA,EAAOnC,EAAIoC,aAAa,EAAG,EAAGjD,KAAKuB,iBAAiBzB,MAAOE,KAAKuB,iBAAiBxB,QAAQiD,KAC/FJ,EAAOM,YAAY,CAClBF,KAAIA,EACJG,KAAMnD,KAAKuB,iBAAiBzB,MAC5BH,KAAMqC,EACNoB,MAAM,IAAIC,MAAOC,iBAIlBC,QAAQC,IAAI,8CAyBdnD,EAAAhB,UAAAoE,KAAA,SAAKC,EAAUC,EAAgBC,GAC9B,IAAM/C,EAAMb,KAAKa,IAEjBA,EAAIgD,UAAU,EAAG,EAAG7D,KAAKS,OAAOX,MAAOE,KAAKS,OAAOV,QAGnD,IAAM+D,EAAgBH,EAAOI,OAASJ,EAAOR,KAAO,EAC9Ca,EAAgBL,EAAOM,OAASN,EAAOR,KAAO,EAG9Ce,EAAgBlE,KAAKS,OAAOX,MAAQ,EACpCqE,EAAgBnE,KAAKS,OAAOV,OAAS,EAG3Cc,EAAIoB,UAAY,UAChBpB,EAAIqB,SAAS,EAAG,EAAGlC,KAAKS,OAAOX,MAAOE,KAAKS,OAAOV,QAElD,IAAMqE,EAAWV,EAAIW,OAAO,GAAGzE,EAAII,KAAKQ,qBAExCK,EAAIoB,UAAY,UAChB,IAAoB,IAAAqC,EAAA,EAAAC,EAAAb,EAAIW,OAAJC,EAAAC,EAAAC,OAAAF,IAAY,CAA3B,IACE1E,EAAIsE,IADAO,EAAKF,EAAAD,IACkB1E,EAAIkE,GAAiB9D,KAAKQ,qBACrDX,EAAIsE,GAAiBM,EAAM5E,EAAImE,GAAiBhE,KAAKQ,qBAC3DK,EAAIqB,SAAStC,EAAGC,EAAGuE,EAAUA,GAI9BvD,EAAIoB,UAAY,UAChB,IAAsB,IAAAyC,EAAA,EAAAC,EAAAjB,EAAIkB,QAAJF,EAAAC,EAAAH,OAAAE,IAAa,CAA9B,IAAME,EAAOD,EAAAD,GAEX9E,EAAIsE,GAAiBU,EAAQhF,EAAIkE,GAAiB9D,KAAKQ,qBACvDX,EAAIsE,GAAiBS,EAAQ/E,EAAImE,GAAiBhE,KAAKQ,qBAkB7D,GAjBIoE,EAAQjF,OAASF,EAAYoF,OAChChE,EAAIqB,SACHtC,EACAC,EACA+E,EAAQ9E,MAAQE,KAAKQ,qBACrBoE,EAAQ7E,OAASC,KAAKQ,sBAGpBoE,EAAQjF,OAASF,EAAYqF,gBAChCjE,EAAI4B,UACHzC,KAAKuB,iBACL3B,EACAC,EACAG,KAAKuB,iBAAiBzB,MAAQE,KAAKQ,qBACnCR,KAAKuB,iBAAiBxB,OAASC,KAAKQ,sBAIrCoE,EAAQjF,OAASF,EAAYS,gBAC7B0E,EAAQjF,OAASF,EAAYU,gBAC7ByE,EAAQjF,OAASF,EAAYW,eAC5B,CACD,IAAI+B,EAAcyC,EAAQ9E,MAAQ,EAAIE,KAAKQ,qBAC3CR,KAAKa,IAAIuB,OACTpC,KAAKa,IAAIwB,UAAUzC,EAAIuC,EAAatC,EAAIsC,GACxCnC,KAAKa,IAAIyB,OAAOsC,EAAQ3E,MAAQsC,KAAKC,GAAK,KAC1CxC,KAAKa,IAAI4B,UACRzC,KAAKuB,kBACJY,GACAA,EACDnC,KAAKuB,iBAAiBzB,MAAQE,KAAKQ,qBACnCR,KAAKuB,iBAAiBxB,OAASC,KAAKQ,sBAErCR,KAAKa,IAAI6B,WAKX7B,EAAIoB,UAAY,OAChB,IAAoB,IAAA8C,EAAA,EAAAC,EAAAtB,EAAIW,OAAJU,EAAAC,EAAAR,OAAAO,IAAY,CAA3B,IAAMN,EACJ7E,EAAIsE,IADAO,EAAKO,EAAAD,IACkBnF,EAAIkE,GAAiB9D,KAAKQ,qBACrDX,EAAIsE,GAAiBM,EAAM5E,EAAImE,GAAiBhE,KAAKQ,qBAE3C,IAAZiE,EAAM5E,GAASgB,EAAIqB,SAAStC,EAAGC,EAAGuE,EAAU,GAEhDvD,EAAIqB,SAAStC,EAAGC,EAAIuE,EAAUA,EAAU,GAExB,IAAZK,EAAM7E,GAASiB,EAAIqB,SAAStC,EAAGC,EAAG,EAAGuE,GAEzCvD,EAAIqB,SAAStC,EAAIwE,EAAUvE,EAAG,EAAGuE,GAIlC,IAAK,IAAI3G,EAAI,EAAGA,EAAIiG,EAAIuB,MAAMT,OAAQ/G,IAAK,CAC1C,IAAMyH,EAAOxB,EAAIuB,MAAMxH,GACvBoD,EAAIuB,OACJvB,EAAIsE,YAAcD,EAAKE,aACvB,IAAIC,EAAe,EACfC,EAAe,EAEnB,OADqBJ,EAAKK,mBAEzB,KAAK,EACJF,EAAeH,EAAKM,sBACpBF,EAAeJ,EAAKO,sBACpB,MACD,KAAK,EACJJ,EAAe,EAAIH,EAAKM,sBACxBF,EAAe,EAAIJ,EAAKO,sBACxB,MACD,KAAK,EACJJ,EAAe,EAAIH,EAAKM,sBACxBF,EAAe,EAAIJ,EAAKO,sBACxB,MACD,KAAK,EACJJ,EAAe,EAAIH,EAAKM,sBACxBF,EAAe,EAAIJ,EAAKO,sBACxB,MACD,KAAK,EACJJ,EAAe,EAAIH,EAAKM,sBACxBF,EAAe,EAAIJ,EAAKO,sBACxB,MACD,KAAK,EACJJ,EAAe,EAAIH,EAAKM,sBACxBF,EAAe,EAAIJ,EAAKO,sBACxB,MACD,KAAK,EACJJ,EAAe,EAAIH,EAAKM,sBACxBF,EAAe,EAAIJ,EAAKO,sBACxB,MACD,KAAK,EACJJ,EAAe,EAAIH,EAAKM,sBACxBF,EAAe,EAAIJ,EAAKO,sBACxB,MACD,KAAK,EACJJ,EAAe,EAAIH,EAAKM,sBACxBF,EAAe,EAAIJ,EAAKO,sBAK1B5E,EAAI4B,UACHzC,KAAKoB,QACL8C,GAAiBgB,EAAKtF,EAAIyF,EAAevB,GAAiB9D,KAAKQ,qBAC/D2D,GAAiBe,EAAKrF,EAAIyF,EAAetB,GAAiBhE,KAAKQ,qBAC/D0E,EAAK/B,KAAOnD,KAAKQ,qBACjB0E,EAAK/B,KAAOnD,KAAKQ,sBAElBK,EAAI6B,UAIL7B,EAAIoB,UAAY,QAChB,IAASxE,EAAI,EAAGA,EAAIiG,EAAIgC,mBAAmBlB,OAAQ/G,IAAK,CACvD,IAAMkI,EAAoBjC,EAAIgC,mBAAmBjI,GAEjDoD,EAAIuB,OACJvB,EAAIsE,YAAcQ,EAAkBP,aACpCvE,EAAIqB,SACHgC,GAAiByB,EAAkB/F,EAAIkE,GAAiB9D,KAAKQ,qBAC7D2D,GAAiBwB,EAAkB9F,EAAImE,GAAiBhE,KAAKQ,qBAC7DmF,EAAkB7F,MAAQE,KAAKQ,qBAC/BmF,EAAkB5F,OAASC,KAAKQ,sBAEjCK,EAAI6B,UAIL,IAASjF,EAAI,EAAGA,EAAIkG,EAAOiC,MAAMpB,OAAQ/G,IAAK,CAC7C,IAAMoI,EAAOlC,EAAOiC,MAAMnI,GAC1BoD,EAAI4B,UACHzC,KAAKkB,cACLgD,GAAiB2B,EAAK9B,OAASD,GAAiB9D,KAAKQ,qBACrD2D,GAAiB0B,EAAK5B,OAASD,GAAiBhE,KAAKQ,qBACrDqF,EAAK1C,KAAOnD,KAAKQ,qBACjBqF,EAAK1C,KAAOnD,KAAKQ,sBAGlB,IAAK,IAAIsF,EAAI,EAAGA,EAAInC,EAAOiC,MAAMnI,GAAGsI,gBAAgBvB,OAAQsB,IAAK,CAChE,IAAME,EAAQrC,EAAOiC,MAAMnI,GAAGsI,gBAAgBD,GACxClG,EAAIsE,GAAiB2B,EAAKI,aAAeD,EAAMpG,EAAIkE,GAAiB9D,KAAKQ,qBACzEX,EAAIsE,GAAiB0B,EAAKK,aAAeF,EAAMnG,EAAImE,GAAiBhE,KAAKQ,qBAC/EK,EAAIqB,SAAStC,EAAGC,EAAG,EAAG,IAKxBgB,EAAI4B,UACHzC,KAAKe,UACLmD,EAAgBP,EAAOR,KAAOnD,KAAKQ,qBAAuB,EAC1D2D,EAAgBR,EAAOR,KAAOnD,KAAKQ,qBAAuB,EAC1DmD,EAAOR,KAAOnD,KAAKQ,qBACnBmD,EAAOR,KAAOnD,KAAKQ,sBAIpBK,EAAIoB,UAAY,OAChB,IAASxE,EAAI,EAAGA,EAAIkG,EAAOoC,gBAAgBvB,OAAQ/G,IAAK,CAEjDmC,EAAIsE,GADJ8B,EAAQrC,EAAOoC,gBAAgBtI,IACLmC,EAAII,KAAKQ,qBACnCX,EAAIsE,EAAgB6B,EAAMnG,EAAIG,KAAKQ,qBACzCK,EAAIqB,SAAStC,EAAGC,EAAG,EAAG,GAIvB,IAASpC,EAAI,EAAGA,EAAIiG,EAAIyC,OAAO3B,OAAQ/G,IAAK,CAC3C,IAAM2I,EAAO1C,EAAIyC,OAAO1I,GACxBoD,EAAIuB,OACJvB,EAAIsE,YAAciB,EAAKhB,aACvBvE,EAAI4B,UACHzC,KAAKmB,QACL+C,GAAiBkC,EAAKxG,EAAIkE,GAAiB9D,KAAKQ,qBAChD2D,GAAiBiC,EAAKvG,EAAImE,GAAiBhE,KAAKQ,qBAChD4F,EAAKjD,KAAOnD,KAAKQ,qBACjB4F,EAAKjD,KAAOnD,KAAKQ,sBAElBK,EAAI6B,UAIL,IAASjF,EAAI,EAAGA,EAAIiG,EAAI2C,MAAM7B,OAAQ/G,IAAK,CAC1C,IAAM6I,EAAO5C,EAAI2C,MAAM5I,GACvBoD,EAAIuB,OACJvB,EAAIsE,YAAcmB,EAAKlB,aACvBvE,EAAI4B,UACHzC,KAAKqB,QACL6C,GAAiBoC,EAAK1G,EAAIkE,GAAiB9D,KAAKQ,qBAChD2D,GAAiBmC,EAAKzG,EAAImE,GAAiBhE,KAAKQ,qBAChD8F,EAAKnD,KAAOnD,KAAKQ,qBACjB8F,EAAKnD,KAAOnD,KAAKQ,sBAElBK,EAAI6B,UAKL7B,EAAI4B,UACHzC,KAAKsB,UACLsC,EAAMhE,EAHW,GAGKI,KAAKQ,qBAAuB,EAClDoD,EAAM/D,EAJW,GAIKG,KAAKQ,qBAAuB,EAJjC,GAKLR,KAAKQ,qBALA,GAMLR,KAAKQ,uBAGpBH,EAnXA,KCNA,WAQA,OAJC,SAAYT,EAAWC,GACtBG,KAAKJ,EAAIA,EACTI,KAAKH,EAAIA,GANX,KCGA,WAWC,SAAA0G,EAAYC,GAVHxG,KAAAmD,KAAe,GAChBnD,KAAAJ,EAAY,EACZI,KAAAH,EAAY,EACZG,KAAAyG,OAAiBzG,KAAKmD,KAAO,EAE7BnD,KAAA0G,WAAqB,GACrB1G,KAAA2G,SAAmB,EACnB3G,KAAA4G,UAAoB,EACnB5G,KAAA+F,gBAA2B,GAGnC/F,KAAK6G,aAAeL,EAAa,EACjCxG,KAAK8G,4BAgOP,OA7NSP,EAAAlH,UAAAyH,0BAAR,WACC,IAAK,IAAIrJ,EAAI,EAAGA,EAAI,IAAKA,GAAK,GAAI,CAEjC,IAAMmC,EAAI2C,KAAKwE,IAAItJ,EAAI8E,KAAKC,GAAK,KAAOxC,KAAKyG,OACvC5G,EAAI0C,KAAKyE,IAAIvJ,EAAI8E,KAAKC,GAAK,KAAOxC,KAAKyG,OAC7CzG,KAAK+F,gBAAgBkB,KAAK,IAAIC,EAAMtH,EAAGC,MAIzC0G,EAAAlH,UAAA8H,MAAA,WACC,OAAyB,IAAlBnH,KAAK2G,UAGbJ,EAAAlH,UAAA4G,WAAA,WACC,OAAOjG,KAAKJ,EAAII,KAAKyG,QAGtBF,EAAAlH,UAAA6G,WAAA,WACC,OAAOlG,KAAKH,EAAIG,KAAKyG,QAGtBF,EAAAlH,UAAA0E,KAAA,WACC,OAAO/D,KAAKJ,GAGb2G,EAAAlH,UAAA4E,KAAA,WACC,OAAOjE,KAAKH,GAGb0G,EAAAlH,UAAA+H,SAAA,SACCC,EACAC,EACAd,EACAe,EACAC,EACA9D,GAEA,IAAIgD,EAAa1G,KAAK0G,WAClBG,EAAe7G,KAAK6G,aAExB,GAAI7G,KAAK2G,SAAW,EAAG,CACtB,OAAQ3G,KAAK2G,UACZ,KAAK,GACJD,GAAc,EACdG,GAAgB,EAChB,MACD,KAAK,GACJH,GAAc,EACdG,GAAgB,EAChB,MACD,KAAK,GACJH,GAAc,GACdG,GAAgB,EAChB,MACD,KAAK,GACJH,GAAc,GACdG,GAAgB,EAChB,MACD,KAAK,GACJH,GAAc,GACdG,GAAgB,GAChB,MACD,KAAK,GACJH,GAAc,GACdG,GAAgB,GAChB,MACD,KAAK,GACJH,GAAc,GACdG,GAAgB,GAChB,MACD,KAAK,GACJH,GAAc,GACdG,GAAgB,GAChB,MACD,KAAK,GACJH,GAAc,GACdG,GAAgB,GAChB,MACD,KAAK,GACJH,GAAc,GACdG,GAAgB,GAChB,MACD,KAAK,GACJH,GAAc,GACdG,GAAgB,GAChB,MACD,KAAK,EACJH,GAAc,GACdG,GAAgB,GAChB,MACD,KAAK,EACJH,GAAc,GACdG,GAAgB,GAChB,MACD,KAAK,EACJH,GAAc,GACdG,GAAgB,GAChB,MACD,KAAK,EACJH,GAAc,GACdG,GAAgB,GAChB,MACD,KAAK,EACJH,GAAc,GACdG,GAAgB,EAChB,MACD,KAAK,EACJH,GAAc,GACdG,GAAgB,EAChB,MACD,KAAK,EACJH,GAAc,EACdG,GAAgB,EAChB,MACD,KAAK,EACJH,GAAc,EACdG,GAAgB,EAChB,MACD,KAAK,EACJH,GAAc,EACdG,GAAgB,EAKlB,GAAI7G,KAAK4G,SACR,IAAK,IAAInJ,EAAI,EAAGA,EAAIiG,EAAIyC,OAAO3B,OAAQ/G,IAAK,CAE3C,IADMgK,EAAW/D,EAAIyC,OAAO1I,IACfiK,WAAY,CACxB,IAAMC,EAAwBF,EAAShB,OAASzG,KAAKyG,OAC/CmB,EAAI5H,KAAKiG,aAAewB,EAASxB,aACjC4B,EAAI7H,KAAKkG,aAAeuB,EAASvB,aAEvC,GADiB3D,KAAKuF,KAAKF,EAAIA,EAAIC,EAAIA,GACxBF,EAAuB,CACrCF,EAASM,UAAU,IAAIb,EAAMlH,KAAKiG,aAAcjG,KAAKkG,eACrDlG,KAAK4G,UAAW,EAChB,QAKJ,GAAI5G,KAAK4G,SACR,IAASnJ,EAAI,EAAGA,EAAIiG,EAAIuB,MAAMT,OAAQ/G,IAAK,CAE1C,IADMgK,EAAW/D,EAAIuB,MAAMxH,IACdiK,WAAY,CAClBC,EAAwBF,EAAShB,OAASzG,KAAKyG,OAArD,IACMuB,EAAIhI,KAAKiG,aAAewB,EAASxB,aACjCgC,EAAIjI,KAAKkG,aAAeuB,EAASvB,aAEvC,GADiB3D,KAAKuF,KAAKE,EAAIA,EAAIC,EAAIA,GACxBN,EAAuB,CACrCF,EAASM,UAAU,IAAIb,EAAMlH,KAAKiG,aAAcjG,KAAKkG,eACrDlG,KAAK4G,UAAW,EAChB,QAKJ,GAAI5G,KAAK4G,SACR,IAASnJ,EAAI,EAAGA,EAAIiG,EAAI2C,MAAM7B,OAAQ/G,IAAK,CAE1C,IADMgK,EAAW/D,EAAI2C,MAAM5I,IACdiK,WAAY,CAClBC,EAAwBF,EAAShB,OAASzG,KAAKyG,OAArD,IACMyB,EAAIlI,KAAKiG,aAAewB,EAASxB,aACjCkC,EAAInI,KAAKkG,aAAeuB,EAASvB,aAEvC,GADiB3D,KAAKuF,KAAKI,EAAIA,EAAIC,EAAIA,GACxBR,EAAuB,CACrCF,EAASM,UAAU,IAAIb,EAAMlH,KAAKiG,aAAcjG,KAAKkG,eACrDlG,KAAK4G,UAAW,EAChB,QAMJ,GAAI5G,KAAK4G,SACR,IAASnJ,EAAI,EAAGA,EAAIiG,EAAIgC,mBAAmBlB,OAAQ/G,IAAK,CACvD,IAAMgK,EACN,IADMA,EAAW/D,EAAIgC,mBAAmBjI,IAC3BiK,YAEX1H,KAAKJ,GAAK6H,EAAS7H,EAAI6H,EAAS3H,OAChCE,KAAKJ,EAAII,KAAKmD,MAAQsE,EAAS7H,GAC/BI,KAAKH,GAAK4H,EAAS5H,EAAI4H,EAAS1H,QAChCC,KAAKH,EAAIG,KAAKmD,MAAQsE,EAAS5H,EAE/B,IAAK,IAAIiG,EAAI,EAAGA,EAAI9F,KAAK+F,gBAAgBvB,OAAQsB,IAAK,CACrD,IAAME,EAAQhG,KAAK+F,gBAAgBD,GACnC,GACC2B,EAASW,UACR,IAAIlB,EAAMlH,KAAKiG,aAAeD,EAAMpG,EAAGI,KAAKkG,aAAeF,EAAMnG,IAEjE,CACD4H,EAASM,YACT/H,KAAK4G,UAAW,EAChBrD,QAAQC,IAAI,OACZ,QAQNxD,KAAK2G,WAGN,IAAI0B,EAAqBhB,EAAcX,EAAaY,EAEhDe,EAAqB,IAAGA,EAAqB,IAAMA,GACnDA,EAAqB,MAAKA,GAA0C,KAExE,IAAMzI,EAAI2C,KAAKwE,IAAIsB,EAAqB9F,KAAKC,GAAK,KAAOqE,EACnDhH,EAAI0C,KAAKyE,IAAIqB,EAAqB9F,KAAKC,GAAK,KAAOqE,EAEzD7G,KAAKJ,EAAI2H,EAAUf,EAAa,EAAI5G,EAAII,KAAKmD,KAAO,EACpDnD,KAAKH,EAAI2H,EAAUhB,EAAa,EAAI3G,EAAIG,KAAKmD,KAAO,GAGrDoD,EAAAlH,UAAAiJ,IAAA,WACCtI,KAAK2G,SAAW,GAChB3G,KAAK4G,UAAW,GAElBL,EA7OA,KCDA,WAWC,SAAAgC,EAAY3I,EAAWC,EAAWsD,GARxBnD,KAAAwI,QAAkB,EAGpBxI,KAAAyI,QAAkB,EAClBzI,KAAA0I,gBAA0B,EAKjC1I,KAAKJ,EAAIA,EACTI,KAAKH,EAAIA,EACTG,KAAKmD,KAAOA,EACZnD,KAAKyG,OAAStD,EAAO,EA+EvB,OA5ECoF,EAAAlJ,UAAAmG,oBAAA,WACC,OAAOxF,KAAK2I,kBAGbJ,EAAAlJ,UAAAoG,oBAAA,WACC,OAAOzF,KAAK4I,kBAGbL,EAAAlJ,UAAAkG,gBAAA,WAEC,OADIvF,KAAK0I,gBAAkB,GAAG1I,KAAK0I,kBAC5B1I,KAAK0I,iBAGbH,EAAAlJ,UAAA+I,UAAA,SAAUpC,GAET,IAAMpG,EAAII,KAAKJ,EAAII,KAAKyG,OAAST,EAAMpG,EACjCC,EAAIG,KAAKH,EAAIG,KAAKyG,OAAST,EAAMnG,EAEvC,OADe0C,KAAKuF,KAAKlI,EAAIA,EAAIC,EAAIA,IACvBG,KAAKyG,QAIpB8B,EAAAlJ,UAAA4G,WAAA,WACC,OAAOjG,KAAKJ,EAAII,KAAKmD,KAAO,GAG7BoF,EAAAlJ,UAAA6G,WAAA,WACC,OAAOlG,KAAKH,EAAIG,KAAKmD,KAAO,GAG7BoF,EAAAlJ,UAAA+F,WAAA,WACC,OAAOpF,KAAKwI,SAGbD,EAAAlJ,UAAAqI,SAAA,WACC,OAAO1H,KAAKyI,QAGbF,EAAAlJ,UAAA0I,UAAA,SAAUc,GACL7I,KAAKwI,QAAU,KAAKxI,KAAKwI,SAAW,IACxCxI,KAAK8I,cAAcD,GACf7I,KAAKwI,QAAU,KAClBxI,KAAKyI,QAAS,IAIhBF,EAAAlJ,UAAAyJ,cAAA,SAAcD,GACb,IAAMjJ,EAAIiJ,EAAWjJ,EAAII,KAAKiG,aACxBpG,EAAIgJ,EAAWhJ,EAAIG,KAAKkG,aAC1B6C,EAAWxG,KAAKyG,IAAIzG,KAAK0G,KAAKrJ,EAAIC,IAAM,IAAM0C,KAAKC,KAGnDqG,EAAWjJ,GAAKI,KAAKiG,cAAgB4C,EAAWhJ,EAAIG,KAAKkG,eAC5D6C,EAAWA,GAGRF,EAAWjJ,GAAKI,KAAKiG,cAAgB4C,EAAWhJ,GAAKG,KAAKkG,eAC7D6C,EAAW,IAAMA,GAGdF,EAAWjJ,EAAII,KAAKiG,cAAgB4C,EAAWhJ,GAAKG,KAAKkG,eAC5D6C,EAAW,IAAMA,GAGdF,EAAWjJ,EAAII,KAAKiG,cAAgB4C,EAAWhJ,EAAIG,KAAKkG,eAC3D6C,EAAW,IAAMA,GAGD,OADjBA,EAAWxG,KAAK2G,MAAMH,MACAA,EAAW,GAEjC/I,KAAK0I,gBAAkB,GAGvB1I,KAAK2I,iBADY,EACOpG,KAAKwE,IAAIgC,EAAWxG,KAAKC,GAAK,MAAmB,EACzExC,KAAK4I,iBAFY,EAEOrG,KAAKyE,IAAI+B,EAAWxG,KAAKC,GAAK,MAExD+F,EA9FA,yTCAA,SAAAY,GAGC,SAAAC,EAAYxJ,EAAWC,GAAvB,IAAAU,EAAAP,YAECO,EAAA4I,EAAAvL,KAAAoC,KAAMJ,EAAGC,EADI,MACIG,MACZqJ,gBAAkB,GACvB9I,EAAKiI,QAAU,KAEjB,OATkCc,EAAAF,EAAAD,GASlCC,EATA,CAAkCG,KCMlC,WAcC,SAAAC,EAAY9F,GAbH1D,KAAAmD,KAAe,GACfnD,KAAAyG,OAAiBzG,KAAKmD,KAAO,EAC7BnD,KAAAyJ,MAAgB,EAGjBzJ,KAAAC,MAAgB,EAExBD,KAAA4F,MAAgB,GAEP5F,KAAA+F,gBAA2B,GAC5B/F,KAAA0J,oBAA8B,EAC9B1J,KAAA2J,wBAAkC,EAGzC3J,KAAKJ,EAAI,IACTI,KAAKH,EAAI,IACTG,KAAKS,OAA4BC,SAASC,eAAe,cACzDX,KAAK4F,MAAMqB,KAAK,IAAI2C,EAAK5J,KAAKmD,OAC9BnD,KAAK4F,MAAMqB,KAAK,IAAI2C,EAAK5J,KAAKmD,OAC9BnD,KAAK0D,IAAMA,EACX1D,KAAK8G,4BA4YP,OAzYS0C,EAAAnK,UAAAyH,0BAAR,WACC,IAAK,IAAIrJ,EAAI,EAAGA,EAAI,IAAKA,GAAK,GAAI,CAEjC,IAAMmC,EAAI2C,KAAKwE,IAAItJ,EAAI8E,KAAKC,GAAK,KAAOxC,KAAKyG,OACvC5G,EAAI0C,KAAKyE,IAAIvJ,EAAI8E,KAAKC,GAAK,KAAOxC,KAAKyG,OAC7CzG,KAAK+F,gBAAgBkB,KAAK,IAAIC,EAAMtH,EAAGC,MAIjC2J,EAAAnK,UAAA4G,WAAR,WACC,OAAOjG,KAAKJ,EAAII,KAAKyG,QAGd+C,EAAAnK,UAAA6G,WAAR,WACC,OAAOlG,KAAKH,EAAIG,KAAKyG,QAGtB+C,EAAAnK,UAAA0E,KAAA,WACC,OAAO/D,KAAKJ,GAGb4J,EAAAnK,UAAA4E,KAAA,WACC,OAAOjE,KAAKH,GAGb2J,EAAAnK,UAAAwK,SAAA,WACC,OAAO7J,KAAKC,OAGbuJ,EAAAnK,UAAAyK,SAAA,SAAS7J,GACRD,KAAKC,MAAQA,GAGduJ,EAAAnK,UAAAiJ,IAAA,WACC,GAAItI,KAAK4F,MAAM,GAAGuB,SAAWnH,KAAK4F,MAAM,GAAGuB,QAAS,CACnD,IAAI4C,EAASxH,KAAK2G,MAAM3G,KAAKwH,UAC7B/J,KAAK4F,MAAMmE,GAAQzB,QAIrBkB,EAAAnK,UAAA2K,WAAA,SAAWC,EAAaC,EAAeC,EAAeC,EAAgBC,EAAgBC,GACrF,GAAIL,GAAME,GAAQD,GAAQE,EAAO,CAEhC,IAAIG,EAAQvK,KAAKyJ,OAGZQ,GAAMC,GAAUD,GAAMG,GAAWD,GAAQD,GAAUC,GAAQC,GAAUpK,KAAK0J,sBAC9Ea,GAAgBhI,KAAKuF,KAAK,GAC1B9H,KAAK0J,oBAAqB,GAI3B,IAAK,IAAIjM,EAAI,EAAGA,EAAIuC,KAAK0D,IAAIkB,QAAQJ,OAAQ/G,IAE5C,GACCuC,KAAKiG,aAAejG,KAAK0D,IAAIkB,QAAQnH,GAAGmC,EAAII,KAAK0D,IAAIkB,QAAQnH,GAAGqC,OAChEE,KAAKiG,cAAgBjG,KAAK0D,IAAIkB,QAAQnH,GAAGmC,GACzCI,KAAKkG,aAAelG,KAAK0D,IAAIkB,QAAQnH,GAAGoC,EAAIG,KAAK0D,IAAIkB,QAAQnH,GAAGsC,QAChEC,KAAKkG,cAAgBlG,KAAK0D,IAAIkB,QAAQnH,GAAGoC,IAErCG,KAAK0D,IAAIkB,QAAQnH,GAAGkC,OAASF,EAAYoF,QAC5C0F,GAAgB,GAGhBvK,KAAK0D,IAAIkB,QAAQnH,GAAGkC,OAASF,EAAYqF,gBACzC9E,KAAK0D,IAAIkB,QAAQnH,GAAGkC,OAASF,EAAYS,gBACzCF,KAAK0D,IAAIkB,QAAQnH,GAAGkC,OAASF,EAAYU,gBACzCH,KAAK0D,IAAIkB,QAAQnH,GAAGkC,OAASF,EAAYW,gBACxC,CAED,IAAMoK,EAAuBjI,KAAKkI,MAAMzK,KAAKiG,aAAejG,KAAK0D,IAAIkB,QAAQnH,GAAGmC,GAC1E8K,EAAuBnI,KAAKkI,MAAMzK,KAAKkG,aAAelG,KAAK0D,IAAIkB,QAAQnH,GAAGoC,GAE/EG,KAAK0D,IAAIpD,iBAAiBqK,aACzB3K,KAAK0D,IAAIkB,QAAQnH,GAAGkC,KACpB6K,EACAE,KAGDH,GAAgB,GAOpB,IAAIK,EAAS,EACTC,EAAS,EACTZ,IAAIY,IAAWN,GACfJ,IAAMU,GAAUN,GAChBL,IAAMU,IAAWL,GACjBH,IAAOQ,GAAUL,GAErBvK,KAAK8K,gBAAgBF,EAAQC,GAE9B7K,KAAK+K,aAAaV,EAAQC,GAC1BtK,KAAKgL,uBAGExB,EAAAnK,UAAA2L,oBAAR,WACChL,KAAK4F,MAAM,GAAGwB,SAASpH,KAAKC,OAAQ,EAAGD,KAAKmD,KAAMnD,KAAKJ,EAAGI,KAAKH,EAAGG,KAAK0D,KACvE1D,KAAK4F,MAAM,GAAGwB,SAASpH,KAAKC,MAAO,EAAGD,KAAKmD,KAAMnD,KAAKJ,EAAGI,KAAKH,EAAGG,KAAK0D,MAG/D8F,EAAAnK,UAAAyL,gBAAR,SAAwBF,EAAgBC,GAEvC,IAAII,EAAc,EACH,IAAXL,GAAcK,IACH,IAAXJ,GAAcI,IAGlB,IAAIC,EAAiB,EACjBL,EAAS,IAAGK,GAAkB,GAClC,IAAK,IAAIzN,EAAI,EAAGA,EAAI8E,KAAKyG,IAAI6B,GAASpN,IACrC,GAAIuC,KAAKmL,UAAU,EAAGN,EAASpN,EAAIyN,EAAgBD,GAAc,CAChEjL,KAAKH,GAAKgL,EAASpN,EAAIyN,EACvB,MAKFA,EAAiB,EACbN,EAAS,IAAGM,GAAkB,GAClC,IAASzN,EAAI,EAAGA,EAAI8E,KAAKyG,IAAI4B,GAASnN,IACrC,GAAIuC,KAAKmL,UAAUP,EAASnN,EAAIyN,EAAgB,EAAGD,GAAc,CAChEjL,KAAKJ,GAAKgL,EAASnN,EAAIyN,EACvB,MAKElL,KAAKJ,EAAII,KAAKmD,KAAOnD,KAAK0D,IAAI5D,QAAOE,KAAKJ,EAAII,KAAK0D,IAAI5D,MAAQE,KAAKmD,MACpEnD,KAAKJ,EAAI,IAAGI,KAAKJ,EAAI,GACrBI,KAAKH,EAAIG,KAAKmD,KAAOnD,KAAK0D,IAAI3D,SAAQC,KAAKH,EAAIG,KAAK0D,IAAI3D,OAASC,KAAKmD,MACtEnD,KAAKH,EAAI,IAAGG,KAAKH,EAAI,IAGlB2J,EAAAnK,UAAA8L,UAAR,SAAkBP,EAAgBC,EAAgBI,GAEjD,IAAK,IAAIxN,EAAI,EAAGA,EAAIuC,KAAK0D,IAAIgC,mBAAmBlB,OAAQ/G,IAAK,CAC5D,IAAMkI,EAAoB3F,KAAK0D,IAAIgC,mBAAmBjI,GACtD,GAAIkI,EAAkB+B,YAGpB1H,KAAKJ,EAAIgL,EAAS5K,KAAKmD,MAAQwC,EAAkB/F,GACjDI,KAAKJ,EAAIgL,GAAUjF,EAAkB/F,EAAI+F,EAAkB7F,OAC3DE,KAAKH,EAAIgL,GAAUlF,EAAkB9F,EAAI8F,EAAkB5F,QAC3DC,KAAKH,EAAIgL,EAAS7K,KAAKmD,MAAQwC,EAAkB9F,EAEjD,IAAK,IAAIiG,EAAI,EAAGA,EAAI9F,KAAK+F,gBAAgBvB,OAAQsB,IAAK,CACrD,IAAME,EAAQhG,KAAK+F,gBAAgBD,GAC7BsF,EAAoB,IAAIlE,EAC7BlH,KAAKiG,aAAe2E,EAAS5E,EAAMpG,EACnCI,KAAKkG,aAAe2E,EAAS7E,EAAMnG,GAGpC,GAAI8F,EAAkByC,UAAUgD,GAE/B,OADApL,KAAKqL,0BAA0BT,EAAQC,EAAQI,EAAatF,IACrD,GAQZ,IAASlI,EAAI,EAAGA,EAAIuC,KAAK0D,IAAI4H,yBAAyB9G,OAAQ/G,IAAK,CAClE,IAAM8N,EAAgBvL,KAAK0D,IAAI4H,yBAAyB7N,GACxD,GAAI8N,EAAc7D,WAAY,CAC7B,IAAI8D,EAAiBD,EAAc9E,OAC/B8E,aAAyBE,IAAMD,EAAiBD,EAAclC,iBAClE,IAAMqC,EAA0BF,EAAiBxL,KAAKyG,OAChD7G,EAAII,KAAKiG,aAAe2E,EAASW,EAActF,aAC/CpG,EAAIG,KAAKkG,aAAe2E,EAASU,EAAcrF,aAErD,GADiB3D,KAAKuF,KAAKlI,EAAIA,EAAIC,EAAIA,GACxB6L,EAEd,OADA1L,KAAK2L,sBAAsBf,EAAQC,EAAQI,EAAaM,IACjD,GAIV,OAAO,GAGA/B,EAAAnK,UAAAgM,0BAAR,SACCT,EACAC,EACAI,EACAtF,GAEA3F,KAAK0J,oBAAqB,EAC1B,IAAMkC,EAAiC,IAAZ5L,KAAKmD,KA2BhC,GA1BoB,IAAhB8H,IACY,IAAXL,IAGC5K,KAAKkG,cAAgBP,EAAkB9F,EAAI8F,EAAkB5F,OAAS,EACrEC,KAAKH,EAAIG,KAAKmD,KAAOwC,EAAkB9F,EAAI+L,GAAoB5L,KAAK8K,gBAAgB,GAAI,GAIxFnF,EAAkB9F,EAAI8F,EAAkB5F,OAASC,KAAKH,EAAI+L,GAC7D5L,KAAK8K,gBAAgB,EAAG,IAGZ,IAAXD,IAGC7K,KAAKiG,cAAgBN,EAAkB/F,EAAI+F,EAAkB7F,MAAQ,EACpEE,KAAKJ,EAAII,KAAKmD,KAAOwC,EAAkB/F,EAAIgM,GAAoB5L,KAAK8K,iBAAiB,EAAG,GAIxFnF,EAAkB/F,EAAI+F,EAAkB7F,MAAQE,KAAKJ,EAAIgM,GAC5D5L,KAAK8K,gBAAgB,EAAG,KAIR,IAAhBG,EAIH,GAHAjL,KAAK0J,oBAAqB,EAIzB1J,KAAKiG,aAAeN,EAAkB/F,EAAI+F,EAAkB7F,MAAQ,GACpEE,KAAKkG,aAAeP,EAAkB9F,EAAI8F,EAAkB5F,OAAS,EAEzCwC,KAAKyG,IAAIhJ,KAAKiG,aAAeN,EAAkB/F,IAC/C2C,KAAKyG,IAChChJ,KAAKkG,cAAgBP,EAAkB9F,EAAI8F,EAAkB5F,SAI7DC,KAAK8K,gBAAgB,GAAK,GAI1B9K,KAAK8K,gBAAgB,GAAI,SAGtB,GACJ9K,KAAKiG,aAAeN,EAAkB/F,EAAI+F,EAAkB7F,MAAQ,GACpEE,KAAKkG,aAAeP,EAAkB9F,EAAI8F,EAAkB5F,OAAS,EACpE,CAE2BwC,KAAKyG,IAChChJ,KAAKiG,cAAgBN,EAAkB/F,EAAI+F,EAAkB7F,SAElCyC,KAAKyG,IAChChJ,KAAKkG,cAAgBP,EAAkB9F,EAAI8F,EAAkB5F,SAI7DC,KAAK8K,iBAAiB,GAAK,GAI3B9K,KAAK8K,gBAAgB,GAAI,SAGtB,GACJ9K,KAAKiG,aAAeN,EAAkB/F,EAAI+F,EAAkB7F,MAAQ,GACpEE,KAAKkG,aAAeP,EAAkB9F,EAAI8F,EAAkB5F,OAAS,EACpE,CAE2BwC,KAAKyG,IAChChJ,KAAKiG,cAAgBN,EAAkB/F,EAAI+F,EAAkB7F,SAElCyC,KAAKyG,IAAIhJ,KAAKkG,aAAeP,EAAkB9F,GAG1EG,KAAK8K,iBAAiB,GAAK,GAI3B9K,KAAK8K,gBAAgB,EAAG,SAGrB,GACJ9K,KAAKiG,aAAeN,EAAkB/F,EAAI+F,EAAkB7F,MAAQ,GACpEE,KAAKkG,aAAeP,EAAkB9F,EAAI8F,EAAkB5F,OAAS,EACpE,CAE2BwC,KAAKyG,IAAIhJ,KAAKiG,aAAeN,EAAkB/F,IAC/C2C,KAAKyG,IAAIhJ,KAAKkG,aAAeP,EAAkB9F,GAG1EG,KAAK8K,gBAAgB,GAAK,GAI1B9K,KAAK8K,gBAAgB,EAAG,MAMpBtB,EAAAnK,UAAAsM,sBAAR,SACCf,EACAC,EACAI,EACAM,IAEAvL,KAAK0J,oBAAqB,EACN,IAAhBuB,IACY,IAAXL,IAEC5K,KAAKkG,cAAgBqF,EAAcrF,cAEtClG,KAAK8K,gBAAgB,EAAG,GAGrB9K,KAAKkG,aAAeqF,EAAcrF,cAErClG,KAAK8K,gBAAgB,GAAI,IAGZ,IAAXD,IAEC7K,KAAKiG,cAAgBsF,EAActF,cAEtCjG,KAAK8K,gBAAgB,EAAG,GAGrB9K,KAAKiG,aAAesF,EAActF,cAErCjG,KAAK8K,iBAAiB,EAAG,KAIR,IAAhBG,KAEe1I,KAAKyG,IAAIhJ,KAAKiG,aAAesF,EAActF,eAC3C1D,KAAKyG,IAAIhJ,KAAKkG,aAAeqF,EAAcrF,eAKxDlG,KAAKiG,cAAgBsF,EAActF,cAEtCjG,KAAK8K,gBAAgB,GAAK,GAGvB9K,KAAKiG,aAAesF,EAActF,cAErCjG,KAAK8K,iBAAiB,GAAK,KAMxB9K,KAAKkG,cAAgBqF,EAAcrF,cAEtClG,KAAK8K,gBAAgB,EAAG,IAGrB9K,KAAKkG,aAAeqF,EAAcrF,cAErClG,KAAK8K,gBAAgB,GAAI,OAMrBtB,EAAAnK,UAAA0L,aAAR,SAAqBV,EAAgBC,GAEpC,IAAMuB,EAAU7L,KAAKS,OAAOX,MAAQ,EAC9BgM,EAAU9L,KAAKS,OAAOV,OAAS,EACjCH,EAAIiM,EAAUxB,EACdxK,EAAIiM,EAAUxB,EAER,IAAN1K,IAASA,EAAI,IAEjB,IAAIK,EAAQsC,KAAKyG,IAAuB,IAAnBzG,KAAK0G,KAAKrJ,EAAIC,GAAW0C,KAAKC,IAG/C6H,GAAUwB,GAAWvB,EAASwB,IACjC9L,KAAKC,MAAQA,GAGVoK,GAAUwB,GAAWvB,GAAUwB,IAClC9L,KAAKC,MAAQ,IAAUA,GAGpBoK,EAASwB,GAAWvB,GAAUwB,IACjC9L,KAAKC,MAAQ,IAAMA,GAGhBoK,EAASwB,GAAWvB,EAASwB,IAChC9L,KAAKC,MAAQ,IAAWA,GAEzBD,KAAKC,MAAQsC,KAAK2G,MAAMlJ,KAAKC,OACV,MAAfD,KAAKC,QAAeD,KAAKC,MAAQ,IAEvCuJ,EAjaA,gVCNA,SAAAL,GACC,SAAA4C,EAAYnM,EAAWC,GAAvB,IAAAU,EAAAP,YAECO,EAAA4I,EAAAvL,KAAAoC,KAAMJ,EAAGC,EADI,MACIG,MACZwI,QAAU,KAEjB,OANkCwD,EAAAD,EAAA5C,GAMlC4C,EANA,CAAkCxC,gVCAlC,SAAAJ,GACC,SAAA8C,EAAYrM,EAAWC,GAAvB,IAAAU,EAAAP,YAECO,EAAA4I,EAAAvL,KAAAoC,KAAMJ,EAAGC,EADI,MACIG,MACZwI,QAAU,IAEjB,OANkC0D,EAAAD,EAAA9C,GAMlC8C,EANA,CAAkC1C,KCAlC,WAQC,SAAA4C,EAAYvM,EAAWC,EAAWC,EAAeC,GALvCC,KAAAwI,QAAkB,EAGpBxI,KAAAyI,QAAkB,EAGzBzI,KAAKJ,EAAIA,EACTI,KAAKH,EAAIA,EACTG,KAAKF,MAAQA,EACbE,KAAKD,OAASA,EAyBhB,OAtBCoM,EAAA9M,UAAA+I,UAAA,SAAUpC,GACD,IAAApG,EAAAoG,EAAApG,EAAGC,EAAAmG,EAAAnG,EACX,OAAID,EAAII,KAAKJ,EAAII,KAAKF,OAASF,GAAKI,KAAKJ,GAAKC,GAAKG,KAAKH,GAAKA,EAAIG,KAAKH,EAAIG,KAAKD,QAMhFoM,EAAA9M,UAAA+F,WAAA,WACC,OAAOpF,KAAKwI,SAGb2D,EAAA9M,UAAAqI,SAAA,WACC,OAAO1H,KAAKyI,QAGb0D,EAAA9M,UAAA0I,UAAA,WACK/H,KAAKwI,QAAU,KAAKxI,KAAKwI,SAAW,IACpCxI,KAAKwI,QAAU,KAClBxI,KAAKyI,QAAS,IAGjB0D,EArCA,gVCAA,SAAAhD,GACC,SAAAiD,EAAYxM,EAAWC,EAAWC,EAAeC,UAChDoJ,EAAAvL,KAAAoC,KAAMJ,EAAGC,EAAGC,EAAOC,IAAOC,KAE5B,OAJkCqM,EAAAD,EAAAjD,GAIlCiD,EAJA,CAAkCE,KCYlC,WAmEA,OAvDC,SAAYhM,GATHN,KAAAqE,OAAkB,GAClBrE,KAAA4E,QAAqB,GACrB5E,KAAAsL,yBAA4C,GAC5CtL,KAAAmG,OAAiB,GACjBnG,KAAAqG,MAAgB,GAChBrG,KAAAiF,MAAgB,GAChBjF,KAAA0F,mBAA0C,GAIlD1F,KAAKM,iBAAmBA,EAExBN,KAAKF,MAAQ,KACbE,KAAKD,OAAS,KAEd,IAAK,IAAIwM,EAAK,EAAGA,EAAKvM,KAAKD,OAJT,IAI6BwM,IAC9C,IAAK,IAAIC,EAAK,EAAGA,EAAKxM,KAAKF,MALV,IAK6B0M,IAC7CxM,KAAKqE,OAAO4C,KAAK,CAAErH,EANH,IAMM4M,EAAgB3M,EANtB,IAMyB0M,IAK3CvM,KAAK4E,QAAQqC,KAAK,IAAIvH,EAAQD,EAAYoF,MAAO,EAAG,EAAG7E,KAAKF,MAX1C,MAYlBE,KAAK4E,QAAQqC,KAAK,IAAIvH,EAAQD,EAAYoF,MAAO,EAAG7E,KAAKD,OAZvC,IAY2DC,KAAKF,MAZhE,MAalBE,KAAK4E,QAAQqC,KAAK,IAAIvH,EAAQD,EAAYoF,MAAO,EAb/B,QAawD7E,KAAKD,OAAS,MACxFC,KAAK4E,QAAQqC,KACZ,IAAIvH,EAAQD,EAAYoF,MAAO7E,KAAKF,MAfnB,YAe4DE,KAAKD,OAAS,MAI5FC,KAAK4E,QAAQqC,KAAK,IAAIvH,EAAQD,EAAYqF,eAnBxB,kBAoBlB9E,KAAK4E,QAAQqC,KAAK,IAAIvH,EAAQD,EAAYS,eAAgB,IApBxC,cAqBlBF,KAAK4E,QAAQqC,KAAK,IAAIvH,EAAQD,EAAYU,eAAgB,IAAe,IArBvD,UAsBlBH,KAAK4E,QAAQqC,KAAK,IAAIvH,EAAQD,EAAYW,eAtBxB,IAsBmD,IAtBnD,UAyBlBJ,KAAKmG,OAAOc,KAAK,IAAIwF,EAAK,IAAK,MAC/BzM,KAAKmG,OAAOc,KAAK,IAAIwF,EAAK,IAAK,MAG/B,IAAMvH,EAAO,IAAIwH,EAAK,IAAK,KAC3B1M,KAAKiF,MAAMgC,KAAK/B,GAChBlF,KAAKsL,yBAAyBrE,KAAK/B,GAEnC,IAAMyH,EAAQ,IAAID,EAAK,IAAK,KAC5B1M,KAAKiF,MAAMgC,KAAK0F,GAChB3M,KAAKsL,yBAAyBrE,KAAK0F,GAEnC,IAAMC,EAAQ,IAAIF,EAAK,IAAK,KAC5B1M,KAAKiF,MAAMgC,KAAK2F,GAChB5M,KAAKsL,yBAAyBrE,KAAK2F,GAKnC,IAAMtG,EAAO,IAAImF,EAAK,IAAK,KAC3BzL,KAAKqG,MAAMY,KAAKX,GAChBtG,KAAKsL,yBAAyBrE,KAAKX,GAGnCtG,KAAK0F,mBAAmBuB,KAAK,IAAI4F,EAAK,IAAK,IAAK,GAAI,MACpD7M,KAAK0F,mBAAmBuB,KAAK,IAAI4F,EAAK,IAAK,IAAK,IAAK,KACrD7M,KAAK0F,mBAAmBuB,KAAK,IAAI4F,EAAK,IAAK,IAAK,IAAK,OAjEvD,KCLA,WAaC,SAAAC,IAZQ9M,KAAA+M,eAA8B,GAC9B/M,KAAAgN,eAA8B,GAC9BhN,KAAAiN,eAA8B,GAC9BjN,KAAAkN,eAA8B,GA8EvC,OAnECJ,EAAAzN,UAAA0D,QAAA,SAAQpD,EAAcqD,GACrB,OAAQrD,GACP,IAAK,iBACJK,KAAK+M,eAAiB/J,EACtB,MACD,IAAK,iBACJhD,KAAKgN,eAAiBhK,EACtB,MACD,IAAK,iBACJhD,KAAKiN,eAAiBjK,EACtB,MACD,IAAK,iBACJhD,KAAKkN,eAAiBlK,EACtB,MACD,QACC,MAAM,IAAImK,MAAM,wBAKnBL,EAAAzN,UAAAsL,aAAA,SAAahL,EAAmBC,EAAWC,GAC1C,IACIuN,EADAC,GAAQ,EAEZ,OAAQ1N,GACP,KAAKF,EAAYqF,eAChBsI,EAAYpN,KAAK+M,eACjB,MACD,KAAKtN,EAAYS,eAChBkN,EAAYpN,KAAKgN,eACjB,MACD,KAAKvN,EAAYU,eAChBiN,EAAYpN,KAAKiN,eACjB,MACD,KAAKxN,EAAYW,eAChBgN,EAAYpN,KAAKkN,eACjB,MACD,QACC,MAAM,IAAIC,MAAM,sBAGlB,GAAIvN,EAAIwN,EAAU5I,QAAU3E,EAAIuN,EAAUxN,GAAG4E,OACxC4I,EAAUxN,GAAGC,KAAIwN,GAAQ,OAEzB,CAGJ,GAAyB,IAArBD,EAAU5I,OAIb,MAAM,IAAI2I,MAAM,8BAHhBE,GAAQ,EAMV,OAAOA,GAcTP,EAlFA,KCHA,WAOC,SAAAQ,EAAYC,EAAY3J,GACvB5D,KAAKM,iBAAmB,IAAIkN,EAC5BxN,KAAKyN,KAAO,IAAIC,EAAK1N,KAAKM,kBAC1BN,KAAK0D,IAAM,IAAIiK,EAAI3N,KAAKM,kBACxBN,KAAK2D,OAAS,IAAIiK,EAAO5N,KAAK0D,KAC9B1D,KAAKuN,KAAOA,EACZvN,KAAK4D,MAAQA,EACb5D,KAAK6N,WAsBP,OAnBSP,EAAAjO,UAAAwO,SAAR,eAAAtN,EAAAP,KAEC8N,sBAAsB,WACrBvN,EAAKsN,aAGN7N,KAAK2D,OAAOqG,WAAWhK,KAAKuN,KAAKQ,EAAG/N,KAAKuN,KAAKS,EAAGhO,KAAKuN,KAAK/N,EAAGQ,KAAKuN,KAAKxP,EAAGiC,KAAK4D,MAAMhE,EAAGI,KAAK4D,MAAM/D,GAEhGG,KAAK4D,MAAMsG,OACdlK,KAAK2D,OAAO2E,MACZtI,KAAK4D,MAAMsG,MAAO,GAGnBlK,KAAKyN,KAAKhK,KAAKzD,KAAK0D,IAAK1D,KAAK2D,OAAQ3D,KAAK4D,QAG5C0J,EAAAjO,UAAAqC,aAAA,WACC1B,KAAKyN,KAAK/L,gBAEZ4L,EApCA,ICWA,WAkBC,SAAAW,IAAA,IAAA1N,EAAAP,KAdQA,KAAAuN,KAAa,CACpBQ,GAAG,EACHC,GAAG,EACHxO,GAAG,EACHzB,GAAG,GAEIiC,KAAA4D,MAAe,CACtBhE,EAAG,EACHC,EAAG,EACHqK,MAAM,EACNgE,QAAQ,EACR9D,OAAO,GAIPpK,KAAKS,OAASC,SAASyN,qBAAqB,UAAU,GACtDnO,KAAKoO,MAAQ,IAAIC,EAAMrO,KAAKuN,KAAMvN,KAAK4D,OACvC5D,KAAKoO,MAAM1M,eACXC,OAAO2M,iBAAiB,SAAU,WACjC/N,EAAK6N,MAAM1M,eACX,IAAM6M,EAAQ,IAAIC,MAAM,aACxBjO,EAAKE,OAAOgO,cAAcF,KAE3BvO,KAAK0O,iBACL1O,KAAK2O,kBA+DP,OA5DQV,EAAAW,IAAP,WACC,GAAKX,EAAWY,SAIf,MAAM,IAAI1B,MAAM,wBAHhBc,EAAWY,SAAW,IAAIZ,GAOpBA,EAAA5O,UAAAsP,gBAAR,eAAApO,EAAAP,KACCA,KAAKS,OAAO6N,iBAAiB,YAAa,SAACxL,GAC/BgM,MAAPhM,EAAElD,GACLW,EAAKqD,MAAMhE,EAAIW,EAAKE,OAAOX,MAAQ,EACnCS,EAAKqD,MAAM/D,EAAIU,EAAKE,OAAOV,OAAS,IAGpCQ,EAAKqD,MAAMhE,EAAIkD,EAAElD,EACjBW,EAAKqD,MAAM/D,EAAIiD,EAAEjD,KAGnBG,KAAKS,OAAO6N,iBAAiB,QAAS,SAACxL,GACtCvC,EAAKqD,MAAMsG,MAAO,KAIZ+D,EAAA5O,UAAAqP,eAAR,eAAAnO,EAAAP,KACCU,SAAS4N,iBAAiB,UAAW,SAACxL,GACrC,OAAQA,EAAEiM,MACT,IAAK,OACJxO,EAAKgN,KAAKQ,GAAI,EACd,MACD,IAAK,OACJxN,EAAKgN,KAAKS,GAAI,EACd,MACD,IAAK,OACJzN,EAAKgN,KAAK/N,GAAI,EACd,MACD,IAAK,OACJe,EAAKgN,KAAKxP,GAAI,KAKjB2C,SAAS4N,iBAAiB,QAAS,SAACxL,GACnC,OAAQA,EAAEiM,MACT,IAAK,OACJxO,EAAKgN,KAAKQ,GAAI,EACd,MACD,IAAK,OACJxN,EAAKgN,KAAKS,GAAI,EACd,MACD,IAAK,OACJzN,EAAKgN,KAAK/N,GAAI,EACd,MACD,IAAK,OACJe,EAAKgN,KAAKxP,GAAI,MAKnBkQ,GA3FA,GChBWW","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export enum TerrainType {\r\n\tWater,\r\n\tWaterTriangle1,\r\n\tWaterTriangle2,\r\n\tWaterTriangle3,\r\n\tWaterTriangle4\r\n}\r\n\r\nexport class Terrain {\r\n\treadonly type: TerrainType;\r\n\treadonly x: number;\r\n\treadonly y: number;\r\n\treadonly width: number;\r\n\treadonly height: number;\r\n\treadonly angle: number = 0;\r\n\r\n\tconstructor(type: TerrainType, x: number, y: number, width: number, height: number) {\r\n\t\tthis.type = type;\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase TerrainType.WaterTriangle2:\r\n\t\t\t\tthis.angle = 90;\r\n\t\t\t\tbreak;\r\n\t\t\tcase TerrainType.WaterTriangle3:\r\n\t\t\t\tthis.angle = 180;\r\n\t\t\t\tbreak;\r\n\t\t\tcase TerrainType.WaterTriangle4:\r\n\t\t\t\tthis.angle = 270;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n","import Player from './Player';\r\nimport Map from './Map';\r\nimport { Mouse } from './Controller';\r\nimport WaterTerrainData from './WaterTerrainData';\r\nimport { TerrainType } from './Terrain';\r\n\r\nexport default class View {\r\n\tprivate canvas: HTMLCanvasElement;\r\n\tprivate helperCanvas: HTMLCanvasElement;\r\n\tprivate ctx: CanvasRenderingContext2D;\r\n\tprivate playerSVG: HTMLImageElement;\r\n\tprivate playerHandSVG: HTMLImageElement;\r\n\tprivate bushSVG: HTMLImageElement;\r\n\tprivate rockSVG: HTMLImageElement;\r\n\tprivate treeSVG: HTMLImageElement;\r\n\tprivate cursorSVG: HTMLImageElement;\r\n\tprivate waterTrianglePNG: HTMLImageElement;\r\n\tprivate waterTerrainData: WaterTerrainData;\r\n\tprivate resolutionAdjustment: number = 1;\r\n\r\n\tconstructor(waterTerrainData: WaterTerrainData) {\r\n\t\tthis.canvas = <HTMLCanvasElement>document.getElementById('gameScreen');\r\n\t\tthis.helperCanvas = <HTMLCanvasElement>document.getElementById('helper');\r\n\t\tthis.ctx = this.canvas.getContext('2d');\r\n\r\n\t\tthis.playerSVG = new Image();\r\n\t\tthis.playerSVG.src = 'img/player.svg';\r\n\r\n\t\tthis.playerHandSVG = new Image();\r\n\t\tthis.playerHandSVG.src = 'img/hand.svg';\r\n\r\n\t\tthis.bushSVG = new Image();\r\n\t\tthis.bushSVG.src = 'img/bush.svg';\r\n\r\n\t\tthis.rockSVG = new Image();\r\n\t\tthis.rockSVG.src = 'img/rock.svg';\r\n\r\n\t\tthis.treeSVG = new Image();\r\n\t\tthis.treeSVG.src = 'img/tree.svg';\r\n\r\n\t\tthis.cursorSVG = new Image();\r\n\t\tthis.cursorSVG.src = 'img/cursor.svg';\r\n\r\n\t\tthis.waterTrianglePNG = new Image();\r\n\t\tthis.waterTrianglePNG.src = 'img/waterTriangle.png';\r\n\r\n\t\tthis.waterTerrainData = waterTerrainData;\r\n\t\tthis.waterTrianglePNG.onload = () => {\r\n\t\t\tthis.saveWaterPixels('waterTriangle1');\r\n\t\t\tthis.saveWaterPixels('waterTriangle2');\r\n\t\t\tthis.saveWaterPixels('waterTriangle3');\r\n\t\t\tthis.saveWaterPixels('waterTriangle4');\r\n\t\t\t//this.waterTerrainData.write();\r\n\t\t};\r\n\t}\r\n\r\n\tscreenResize(): void {\r\n\t\tthis.canvas.width = window.innerWidth;\r\n\t\tthis.canvas.height = window.innerHeight;\r\n\t\t//console.log('Resize');\r\n\t\t//console.log('width: width ' + this.canvas.width + ' height: ' + this.canvas.height);\r\n\t\tthis.changeResolutionAdjustment();\r\n\t}\r\n\r\n\tprivate changeResolutionAdjustment(): void {\r\n\t\tconst defaultWidth = 1920;\r\n\t\tconst defaultHeight = 1050;\r\n\t\tconst width = this.canvas.width / defaultWidth;\r\n\t\tconst height = this.canvas.height / defaultHeight;\r\n\t\tconst finalAdjustment = (width + height) / 2;\r\n\t\tthis.resolutionAdjustment = finalAdjustment;\r\n\t\t//console.log('finalAdjustment:', finalAdjustment);\r\n\t}\r\n\r\n\tprivate saveWaterPixels(waterType: string): void {\r\n\t\tconst ctx = this.helperCanvas.getContext('2d');\r\n\t\tthis.helperCanvas.width = this.waterTrianglePNG.width;\r\n\t\tthis.helperCanvas.height = this.waterTrianglePNG.height;\r\n\t\t//white background\r\n\t\tctx.fillStyle = '#FFFFFF';\r\n\t\tctx.fillRect(0, 0, this.helperCanvas.width, this.helperCanvas.height);\r\n\t\tlet middleImage = this.waterTrianglePNG.width / 2;\r\n\t\tctx.save();\r\n\t\tctx.translate(middleImage, middleImage);\r\n\t\tswitch (waterType) {\r\n\t\t\tcase 'waterTriangle1':\r\n\t\t\t\tctx.rotate(0 * Math.PI / 180);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'waterTriangle2':\r\n\t\t\t\tctx.rotate(90 * Math.PI / 180);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'waterTriangle3':\r\n\t\t\t\tctx.rotate(180 * Math.PI / 180);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'waterTriangle4':\r\n\t\t\t\tctx.rotate(270 * Math.PI / 180);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tctx.drawImage(this.waterTrianglePNG, -middleImage, -middleImage);\r\n\t\tctx.restore();\r\n\r\n\t\t//worker\r\n\t\tif (typeof Worker !== 'undefined') {\r\n\t\t\tconst worker = new Worker('workerFindWater.js');\r\n\t\t\tworker.onmessage = (e) => {\r\n\t\t\t\t//console.log(new Date().getTime() - e.data.time, e.data);\r\n\t\t\t\tthis.waterTerrainData.setData(e.data.type, e.data.data);\r\n\t\t\t};\r\n\t\t\tconst data = ctx.getImageData(0, 0, this.waterTrianglePNG.width, this.waterTrianglePNG.height).data;\r\n\t\t\tworker.postMessage({\r\n\t\t\t\tdata,\r\n\t\t\t\tsize: this.waterTrianglePNG.width,\r\n\t\t\t\ttype: waterType,\r\n\t\t\t\ttime: new Date().getTime()\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"Your browser doesn't support web workers.\");\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\tlet waterData: boolean[][] = [];\r\n\t\tconsole.time('a');\r\n\t\tfor (let x = 0; x < this.waterTrianglePNG.width; x++) {\r\n\t\t\twaterData[x] = [];\r\n\t\t\tfor (let y = 0; y < this.waterTrianglePNG.height; y++) {\r\n\t\t\t\t//const r = ctx.getImageData(x, y, 1, 1).data[0];\r\n\t\t\t\t//const g = ctx.getImageData(x, y, 1, 1).data[1];\r\n\t\t\t\tconst b = ctx.getImageData(x, y, 1, 1).data[2];\r\n\t\t\t\tif (b === 255) {\r\n\t\t\t\t\twaterData[x][y] = false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\twaterData[x][y] = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.timeEnd('a');\r\n\t\tthis.waterTerrainData.setData(waterType, waterData);\r\n\t\t*/\r\n\t}\r\n\r\n\tdraw(map: Map, player: Player, mouse: Mouse): void {\r\n\t\tconst ctx = this.ctx;\r\n\t\t//clear canvas\r\n\t\tctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n\t\t//center player\r\n\t\tconst playerCenterX = player.getX() + player.size / 2;\r\n\t\tconst playerCenterY = player.getY() + player.size / 2;\r\n\r\n\t\t//center screen\r\n\t\tconst screenCenterX = this.canvas.width / 2;\r\n\t\tconst screenCenterY = this.canvas.height / 2;\r\n\r\n\t\t//water\r\n\t\tctx.fillStyle = '#69A2E0';\r\n\t\tctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n\t\tconst gridSize = map.blocks[1].x * this.resolutionAdjustment;\r\n\t\t//grass\r\n\t\tctx.fillStyle = '#A2CB69';\r\n\t\tfor (const block of map.blocks) {\r\n\t\t\tconst x = screenCenterX + (block.x - playerCenterX) * this.resolutionAdjustment;\r\n\t\t\tconst y = screenCenterY + (block.y - playerCenterY) * this.resolutionAdjustment;\r\n\t\t\tctx.fillRect(x, y, gridSize, gridSize);\r\n\t\t}\r\n\r\n\t\t//terrain\r\n\t\tctx.fillStyle = '#69A2E0';\r\n\t\tfor (const terrain of map.terrain) {\r\n\t\t\t//position on screen from center\r\n\t\t\tconst x = screenCenterX + (terrain.x - playerCenterX) * this.resolutionAdjustment;\r\n\t\t\tconst y = screenCenterY + (terrain.y - playerCenterY) * this.resolutionAdjustment;\r\n\t\t\tif (terrain.type === TerrainType.Water) {\r\n\t\t\t\tctx.fillRect(\r\n\t\t\t\t\tx,\r\n\t\t\t\t\ty,\r\n\t\t\t\t\tterrain.width * this.resolutionAdjustment,\r\n\t\t\t\t\tterrain.height * this.resolutionAdjustment\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (terrain.type === TerrainType.WaterTriangle1) {\r\n\t\t\t\tctx.drawImage(\r\n\t\t\t\t\tthis.waterTrianglePNG,\r\n\t\t\t\t\tx,\r\n\t\t\t\t\ty,\r\n\t\t\t\t\tthis.waterTrianglePNG.width * this.resolutionAdjustment,\r\n\t\t\t\t\tthis.waterTrianglePNG.height * this.resolutionAdjustment\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\tterrain.type === TerrainType.WaterTriangle2 ||\r\n\t\t\t\tterrain.type === TerrainType.WaterTriangle3 ||\r\n\t\t\t\tterrain.type === TerrainType.WaterTriangle4\r\n\t\t\t) {\r\n\t\t\t\tlet middleImage = terrain.width / 2 * this.resolutionAdjustment;\r\n\t\t\t\tthis.ctx.save();\r\n\t\t\t\tthis.ctx.translate(x + middleImage, y + middleImage);\r\n\t\t\t\tthis.ctx.rotate(terrain.angle * Math.PI / 180);\r\n\t\t\t\tthis.ctx.drawImage(\r\n\t\t\t\t\tthis.waterTrianglePNG,\r\n\t\t\t\t\t-middleImage,\r\n\t\t\t\t\t-middleImage,\r\n\t\t\t\t\tthis.waterTrianglePNG.width * this.resolutionAdjustment,\r\n\t\t\t\t\tthis.waterTrianglePNG.height * this.resolutionAdjustment\r\n\t\t\t\t);\r\n\t\t\t\tthis.ctx.restore();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//mapGrid\r\n\t\tctx.fillStyle = 'gray';\r\n\t\tfor (const block of map.blocks) {\r\n\t\t\tconst x = screenCenterX + (block.x - playerCenterX) * this.resolutionAdjustment;\r\n\t\t\tconst y = screenCenterY + (block.y - playerCenterY) * this.resolutionAdjustment;\r\n\t\t\t//top\r\n\t\t\tif (block.y === 0) ctx.fillRect(x, y, gridSize, 1);\r\n\t\t\t//bottom\r\n\t\t\tctx.fillRect(x, y + gridSize, gridSize, 1);\r\n\t\t\t//left\r\n\t\t\tif (block.x === 0) ctx.fillRect(x, y, 1, gridSize);\r\n\t\t\t//right\r\n\t\t\tctx.fillRect(x + gridSize, y, 1, gridSize);\r\n\t\t}\r\n\r\n\t\t//rocks\r\n\t\tfor (let i = 0; i < map.rocks.length; i++) {\r\n\t\t\tconst rock = map.rocks[i];\r\n\t\t\tctx.save();\r\n\t\t\tctx.globalAlpha = rock.getOpacity();\r\n\t\t\tlet rockAnimateX = 0;\r\n\t\t\tlet rockAnimateY = 0;\r\n\t\t\tconst animateTimer = rock.getAnimateTimer();\r\n\t\t\tswitch (animateTimer) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\trockAnimateX = rock.getHitAnimateShiftX();\r\n\t\t\t\t\trockAnimateY = rock.getHitAnimateShiftY();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\trockAnimateX = 2 * rock.getHitAnimateShiftX();\r\n\t\t\t\t\trockAnimateY = 2 * rock.getHitAnimateShiftY();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\trockAnimateX = 3 * rock.getHitAnimateShiftX();\r\n\t\t\t\t\trockAnimateY = 3 * rock.getHitAnimateShiftY();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\trockAnimateX = 4 * rock.getHitAnimateShiftX();\r\n\t\t\t\t\trockAnimateY = 4 * rock.getHitAnimateShiftY();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 5:\r\n\t\t\t\t\trockAnimateX = 5 * rock.getHitAnimateShiftX();\r\n\t\t\t\t\trockAnimateY = 5 * rock.getHitAnimateShiftY();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 6:\r\n\t\t\t\t\trockAnimateX = 4 * rock.getHitAnimateShiftX();\r\n\t\t\t\t\trockAnimateY = 4 * rock.getHitAnimateShiftY();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 7:\r\n\t\t\t\t\trockAnimateX = 3 * rock.getHitAnimateShiftX();\r\n\t\t\t\t\trockAnimateY = 3 * rock.getHitAnimateShiftY();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 8:\r\n\t\t\t\t\trockAnimateX = 2 * rock.getHitAnimateShiftX();\r\n\t\t\t\t\trockAnimateY = 2 * rock.getHitAnimateShiftY();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 9:\r\n\t\t\t\t\trockAnimateX = 1 * rock.getHitAnimateShiftX();\r\n\t\t\t\t\trockAnimateY = 1 * rock.getHitAnimateShiftY();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 10:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tctx.drawImage(\r\n\t\t\t\tthis.rockSVG,\r\n\t\t\t\tscreenCenterX + (rock.x + rockAnimateX - playerCenterX) * this.resolutionAdjustment,\r\n\t\t\t\tscreenCenterY + (rock.y + rockAnimateY - playerCenterY) * this.resolutionAdjustment,\r\n\t\t\t\trock.size * this.resolutionAdjustment,\r\n\t\t\t\trock.size * this.resolutionAdjustment\r\n\t\t\t);\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\r\n\t\t//walls\r\n\t\tctx.fillStyle = 'black';\r\n\t\tfor (let i = 0; i < map.rectangleObstacles.length; i++) {\r\n\t\t\tconst rectangleObstacle = map.rectangleObstacles[i];\r\n\r\n\t\t\tctx.save();\r\n\t\t\tctx.globalAlpha = rectangleObstacle.getOpacity();\r\n\t\t\tctx.fillRect(\r\n\t\t\t\tscreenCenterX + (rectangleObstacle.x - playerCenterX) * this.resolutionAdjustment,\r\n\t\t\t\tscreenCenterY + (rectangleObstacle.y - playerCenterY) * this.resolutionAdjustment,\r\n\t\t\t\trectangleObstacle.width * this.resolutionAdjustment,\r\n\t\t\t\trectangleObstacle.height * this.resolutionAdjustment\r\n\t\t\t);\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\r\n\t\t//player hands\r\n\t\tfor (let i = 0; i < player.hands.length; i++) {\r\n\t\t\tconst hand = player.hands[i];\r\n\t\t\tctx.drawImage(\r\n\t\t\t\tthis.playerHandSVG,\r\n\t\t\t\tscreenCenterX + (hand.getX() - playerCenterX) * this.resolutionAdjustment,\r\n\t\t\t\tscreenCenterY + (hand.getY() - playerCenterY) * this.resolutionAdjustment,\r\n\t\t\t\thand.size * this.resolutionAdjustment,\r\n\t\t\t\thand.size * this.resolutionAdjustment\r\n\t\t\t);\r\n\t\t\t//hands collisionPoints\r\n\t\t\tfor (let j = 0; j < player.hands[i].collisionPoints.length; j++) {\r\n\t\t\t\tconst point = player.hands[i].collisionPoints[j];\r\n\t\t\t\tconst x = screenCenterX + (hand.getCenterX() + point.x - playerCenterX) * this.resolutionAdjustment;\r\n\t\t\t\tconst y = screenCenterY + (hand.getCenterY() + point.y - playerCenterY) * this.resolutionAdjustment;\r\n\t\t\t\tctx.fillRect(x, y, 1, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//player\r\n\t\tctx.drawImage(\r\n\t\t\tthis.playerSVG,\r\n\t\t\tscreenCenterX - player.size * this.resolutionAdjustment / 2,\r\n\t\t\tscreenCenterY - player.size * this.resolutionAdjustment / 2,\r\n\t\t\tplayer.size * this.resolutionAdjustment,\r\n\t\t\tplayer.size * this.resolutionAdjustment\r\n\t\t);\r\n\r\n\t\t//collision points\r\n\t\tctx.fillStyle = 'blue';\r\n\t\tfor (let i = 0; i < player.collisionPoints.length; i++) {\r\n\t\t\tconst point = player.collisionPoints[i];\r\n\t\t\tconst x = screenCenterX + point.x * this.resolutionAdjustment;\r\n\t\t\tconst y = screenCenterY + point.y * this.resolutionAdjustment;\r\n\t\t\tctx.fillRect(x, y, 1, 1);\r\n\t\t}\r\n\r\n\t\t//bushes\r\n\t\tfor (let i = 0; i < map.bushes.length; i++) {\r\n\t\t\tconst bush = map.bushes[i];\r\n\t\t\tctx.save();\r\n\t\t\tctx.globalAlpha = bush.getOpacity();\r\n\t\t\tctx.drawImage(\r\n\t\t\t\tthis.bushSVG,\r\n\t\t\t\tscreenCenterX + (bush.x - playerCenterX) * this.resolutionAdjustment,\r\n\t\t\t\tscreenCenterY + (bush.y - playerCenterY) * this.resolutionAdjustment,\r\n\t\t\t\tbush.size * this.resolutionAdjustment,\r\n\t\t\t\tbush.size * this.resolutionAdjustment\r\n\t\t\t);\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\r\n\t\t//trees\r\n\t\tfor (let i = 0; i < map.trees.length; i++) {\r\n\t\t\tconst tree = map.trees[i];\r\n\t\t\tctx.save();\r\n\t\t\tctx.globalAlpha = tree.getOpacity();\r\n\t\t\tctx.drawImage(\r\n\t\t\t\tthis.treeSVG,\r\n\t\t\t\tscreenCenterX + (tree.x - playerCenterX) * this.resolutionAdjustment,\r\n\t\t\t\tscreenCenterY + (tree.y - playerCenterY) * this.resolutionAdjustment,\r\n\t\t\t\ttree.size * this.resolutionAdjustment,\r\n\t\t\t\ttree.size * this.resolutionAdjustment\r\n\t\t\t);\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\r\n\t\t//cursor\r\n\t\tconst mouseSize = 25;\r\n\t\tctx.drawImage(\r\n\t\t\tthis.cursorSVG,\r\n\t\t\tmouse.x - mouseSize * this.resolutionAdjustment / 2,\r\n\t\t\tmouse.y - mouseSize * this.resolutionAdjustment / 2,\r\n\t\t\tmouseSize * this.resolutionAdjustment,\r\n\t\t\tmouseSize * this.resolutionAdjustment\r\n\t\t);\r\n\t}\r\n}\r\n","export default class Point {\r\n\treadonly x: number;\r\n\treadonly y: number;\r\n\r\n\tconstructor(x: number, y: number) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n}\r\n","import Map from './Map';\r\nimport Point from './Point';\r\n\r\nexport default class Hand {\r\n\treadonly size: number = 40;\r\n\tprivate x: number = 0;\r\n\tprivate y: number = 0;\r\n\tprivate radius: number = this.size / 2;\r\n\tprivate playerRadius: number;\r\n\tprivate shiftAngle: number = 40;\r\n\tprivate hitTimer: number = 0;\r\n\tprivate inAction: boolean = false;\r\n\treadonly collisionPoints: Point[] = [];\r\n\r\n\tconstructor(playerSize: number) {\r\n\t\tthis.playerRadius = playerSize / 2;\r\n\t\tthis.calculateCollisionsPoints();\r\n\t}\r\n\r\n\tprivate calculateCollisionsPoints(): void {\r\n\t\tfor (let i = 0; i < 360; i += 20) {\r\n\t\t\t//triangle\r\n\t\t\tconst x = Math.sin(i * Math.PI / 180) * this.radius;\r\n\t\t\tconst y = Math.cos(i * Math.PI / 180) * this.radius;\r\n\t\t\tthis.collisionPoints.push(new Point(x, y));\r\n\t\t}\r\n\t}\r\n\r\n\tready(): boolean {\r\n\t\treturn this.hitTimer === 0;\r\n\t}\r\n\r\n\tgetCenterX(): number {\r\n\t\treturn this.x + this.radius;\r\n\t}\r\n\r\n\tgetCenterY(): number {\r\n\t\treturn this.y + this.radius;\r\n\t}\r\n\r\n\tgetX(): number {\r\n\t\treturn this.x;\r\n\t}\r\n\r\n\tgetY(): number {\r\n\t\treturn this.y;\r\n\t}\r\n\r\n\tmoveHand(\r\n\t\tplayerAngle: number,\r\n\t\tdirection: number,\r\n\t\tplayerSize: number,\r\n\t\tplayerX: number,\r\n\t\tplayerY: number,\r\n\t\tmap: Map\r\n\t): void {\r\n\t\tlet shiftAngle = this.shiftAngle;\r\n\t\tlet playerRadius = this.playerRadius;\r\n\t\t//hit move\r\n\t\tif (this.hitTimer > 0) {\r\n\t\t\tswitch (this.hitTimer) {\r\n\t\t\t\tcase 20:\r\n\t\t\t\t\tshiftAngle -= 4;\r\n\t\t\t\t\tplayerRadius += 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 19:\r\n\t\t\t\t\tshiftAngle -= 8;\r\n\t\t\t\t\tplayerRadius += 4;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 18:\r\n\t\t\t\t\tshiftAngle -= 12;\r\n\t\t\t\t\tplayerRadius += 6;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 17:\r\n\t\t\t\t\tshiftAngle -= 16;\r\n\t\t\t\t\tplayerRadius += 8;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 16:\r\n\t\t\t\t\tshiftAngle -= 20;\r\n\t\t\t\t\tplayerRadius += 10;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 15:\r\n\t\t\t\t\tshiftAngle -= 24;\r\n\t\t\t\t\tplayerRadius += 12;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 14:\r\n\t\t\t\t\tshiftAngle -= 28;\r\n\t\t\t\t\tplayerRadius += 14;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 13:\r\n\t\t\t\t\tshiftAngle -= 32;\r\n\t\t\t\t\tplayerRadius += 16;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 12:\r\n\t\t\t\t\tshiftAngle -= 36;\r\n\t\t\t\t\tplayerRadius += 18;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 11:\r\n\t\t\t\t\tshiftAngle -= 40;\r\n\t\t\t\t\tplayerRadius += 20;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 10:\r\n\t\t\t\t\tshiftAngle -= 36;\r\n\t\t\t\t\tplayerRadius += 18;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 9:\r\n\t\t\t\t\tshiftAngle -= 32;\r\n\t\t\t\t\tplayerRadius += 16;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 8:\r\n\t\t\t\t\tshiftAngle -= 28;\r\n\t\t\t\t\tplayerRadius += 14;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 7:\r\n\t\t\t\t\tshiftAngle -= 24;\r\n\t\t\t\t\tplayerRadius += 12;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 6:\r\n\t\t\t\t\tshiftAngle -= 20;\r\n\t\t\t\t\tplayerRadius += 10;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 5:\r\n\t\t\t\t\tshiftAngle -= 16;\r\n\t\t\t\t\tplayerRadius += 8;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\tshiftAngle -= 12;\r\n\t\t\t\t\tplayerRadius += 6;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tshiftAngle -= 8;\r\n\t\t\t\t\tplayerRadius += 4;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tshiftAngle -= 4;\r\n\t\t\t\t\tplayerRadius += 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tshiftAngle -= 0;\r\n\t\t\t\t\tplayerRadius += 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t//hit?\r\n\t\t\tif (this.inAction) {\r\n\t\t\t\tfor (let i = 0; i < map.bushes.length; i++) {\r\n\t\t\t\t\tconst obstacle = map.bushes[i];\r\n\t\t\t\t\tif (obstacle.isActive()) {\r\n\t\t\t\t\t\tconst obstacleAndHandRadius = obstacle.radius + this.radius;\r\n\t\t\t\t\t\tconst x = this.getCenterX() - obstacle.getCenterX();\r\n\t\t\t\t\t\tconst y = this.getCenterY() - obstacle.getCenterY();\r\n\t\t\t\t\t\tconst distance = Math.sqrt(x * x + y * y);\r\n\t\t\t\t\t\tif (distance < obstacleAndHandRadius) {\r\n\t\t\t\t\t\t\tobstacle.acceptHit(new Point(this.getCenterX(), this.getCenterY()));\r\n\t\t\t\t\t\t\tthis.inAction = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.inAction) {\r\n\t\t\t\tfor (let i = 0; i < map.rocks.length; i++) {\r\n\t\t\t\t\tconst obstacle = map.rocks[i];\r\n\t\t\t\t\tif (obstacle.isActive()) {\r\n\t\t\t\t\t\tconst obstacleAndHandRadius = obstacle.radius + this.radius;\r\n\t\t\t\t\t\tconst x = this.getCenterX() - obstacle.getCenterX();\r\n\t\t\t\t\t\tconst y = this.getCenterY() - obstacle.getCenterY();\r\n\t\t\t\t\t\tconst distance = Math.sqrt(x * x + y * y);\r\n\t\t\t\t\t\tif (distance < obstacleAndHandRadius) {\r\n\t\t\t\t\t\t\tobstacle.acceptHit(new Point(this.getCenterX(), this.getCenterY()));\r\n\t\t\t\t\t\t\tthis.inAction = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.inAction) {\r\n\t\t\t\tfor (let i = 0; i < map.trees.length; i++) {\r\n\t\t\t\t\tconst obstacle = map.trees[i];\r\n\t\t\t\t\tif (obstacle.isActive()) {\r\n\t\t\t\t\t\tconst obstacleAndHandRadius = obstacle.radius + this.radius;\r\n\t\t\t\t\t\tconst x = this.getCenterX() - obstacle.getCenterX();\r\n\t\t\t\t\t\tconst y = this.getCenterY() - obstacle.getCenterY();\r\n\t\t\t\t\t\tconst distance = Math.sqrt(x * x + y * y);\r\n\t\t\t\t\t\tif (distance < obstacleAndHandRadius) {\r\n\t\t\t\t\t\t\tobstacle.acceptHit(new Point(this.getCenterX(), this.getCenterY()));\r\n\t\t\t\t\t\t\tthis.inAction = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//walls\r\n\t\t\tif (this.inAction) {\r\n\t\t\t\tfor (let i = 0; i < map.rectangleObstacles.length; i++) {\r\n\t\t\t\t\tconst obstacle = map.rectangleObstacles[i];\r\n\t\t\t\t\tif (obstacle.isActive()) {\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tthis.x <= obstacle.x + obstacle.width &&\r\n\t\t\t\t\t\t\tthis.x + this.size >= obstacle.x &&\r\n\t\t\t\t\t\t\tthis.y <= obstacle.y + obstacle.height &&\r\n\t\t\t\t\t\t\tthis.y + this.size >= obstacle.y\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tfor (let j = 0; j < this.collisionPoints.length; j++) {\r\n\t\t\t\t\t\t\t\tconst point = this.collisionPoints[j];\r\n\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\tobstacle.isPointIn(\r\n\t\t\t\t\t\t\t\t\t\tnew Point(this.getCenterX() + point.x, this.getCenterY() + point.y)\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\tobstacle.acceptHit();\r\n\t\t\t\t\t\t\t\t\tthis.inAction = false;\r\n\t\t\t\t\t\t\t\t\tconsole.log('hit');\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.hitTimer--;\r\n\t\t}\r\n\r\n\t\tlet playerAngleForHand = playerAngle + shiftAngle * direction;\r\n\t\t//0 - 359...\r\n\t\tif (playerAngleForHand < 0) playerAngleForHand = 359 + playerAngleForHand;\r\n\t\tif (playerAngleForHand > 359) playerAngleForHand = playerAngleForHand - 359;\r\n\t\t//triangle\r\n\t\tconst x = Math.sin(playerAngleForHand * Math.PI / 180) * playerRadius;\r\n\t\tconst y = Math.cos(playerAngleForHand * Math.PI / 180) * playerRadius;\r\n\t\t//set final position from center\r\n\t\tthis.x = playerX + playerSize / 2 + x - this.size / 2;\r\n\t\tthis.y = playerY + playerSize / 2 - y - this.size / 2;\r\n\t}\r\n\r\n\thit(): void {\r\n\t\tthis.hitTimer = 20;\r\n\t\tthis.inAction = true;\r\n\t}\r\n}\r\n","import Point from './Point';\r\n\r\nexport default abstract class RoundObstacle {\r\n\treadonly x: number;\r\n\treadonly y: number;\r\n\tprotected opacity: number = 1;\r\n\treadonly size: number;\r\n\treadonly radius: number;\r\n\tprivate active: boolean = true;\r\n\tprivate hitAnimateTimer: number = 0;\r\n\tprivate hitAnimateShiftX: number;\r\n\tprivate hitAnimateShiftY: number;\r\n\r\n\tconstructor(x: number, y: number, size: number) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.size = size;\r\n\t\tthis.radius = size / 2;\r\n\t}\r\n\r\n\tgetHitAnimateShiftX(): number {\r\n\t\treturn this.hitAnimateShiftX;\r\n\t}\r\n\r\n\tgetHitAnimateShiftY(): number {\r\n\t\treturn this.hitAnimateShiftY;\r\n\t}\r\n\r\n\tgetAnimateTimer(): number {\r\n\t\tif (this.hitAnimateTimer > 0) this.hitAnimateTimer--;\r\n\t\treturn this.hitAnimateTimer;\r\n\t}\r\n\r\n\tisPointIn(point: Point): boolean {\r\n\t\t//triangle\r\n\t\tconst x = this.x + this.radius - point.x;\r\n\t\tconst y = this.y + this.radius - point.y;\r\n\t\tconst radius = Math.sqrt(x * x + y * y);\r\n\t\tif (radius <= this.radius) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgetCenterX(): number {\r\n\t\treturn this.x + this.size / 2;\r\n\t}\r\n\r\n\tgetCenterY(): number {\r\n\t\treturn this.y + this.size / 2;\r\n\t}\r\n\r\n\tgetOpacity(): number {\r\n\t\treturn this.opacity;\r\n\t}\r\n\r\n\tisActive(): boolean {\r\n\t\treturn this.active;\r\n\t}\r\n\r\n\tacceptHit(handCenter: Point): void {\r\n\t\tif (this.opacity > 0.1) this.opacity -= 0.1;\r\n\t\tthis.setAnimateHit(handCenter);\r\n\t\tif (this.opacity < 0.1) {\r\n\t\t\tthis.active = false;\r\n\t\t}\r\n\t}\r\n\r\n\tsetAnimateHit(handCenter: Point): void {\r\n\t\tconst x = handCenter.x - this.getCenterX();\r\n\t\tconst y = handCenter.y - this.getCenterY();\r\n\t\tlet hitAngle = Math.abs(Math.atan(x / y) * (180 / Math.PI));\r\n\t\t//1..2..3..4.. Q; 0 - 90, 90 - 180...\r\n\t\t//1\r\n\t\tif (handCenter.x >= this.getCenterX() && handCenter.y < this.getCenterY()) {\r\n\t\t\thitAngle = hitAngle;\r\n\t\t}\r\n\t\t//2\r\n\t\tif (handCenter.x >= this.getCenterX() && handCenter.y >= this.getCenterY()) {\r\n\t\t\thitAngle = 180 - hitAngle;\r\n\t\t}\r\n\t\t//3\r\n\t\tif (handCenter.x < this.getCenterX() && handCenter.y >= this.getCenterY()) {\r\n\t\t\thitAngle = 180 + hitAngle;\r\n\t\t}\r\n\t\t//4\r\n\t\tif (handCenter.x < this.getCenterX() && handCenter.y < this.getCenterY()) {\r\n\t\t\thitAngle = 360 - hitAngle;\r\n\t\t}\r\n\t\thitAngle = Math.round(hitAngle);\r\n\t\tif (hitAngle === 360) hitAngle = 0;\r\n\r\n\t\tthis.hitAnimateTimer = 10;\r\n\t\t//triangle\r\n\t\tconst hitShift = 3;\r\n\t\tthis.hitAnimateShiftX = Math.sin(hitAngle * Math.PI / 180) * hitShift * -1;\r\n\t\tthis.hitAnimateShiftY = Math.cos(hitAngle * Math.PI / 180) * hitShift;\r\n\t}\r\n}\r\n","import RoundObstacle from './RoundObstacle';\r\n\r\nexport default class Tree extends RoundObstacle {\r\n\treadonly treeTrankRadius: number;\r\n\r\n\tconstructor(x: number, y: number) {\r\n\t\tconst size = 200;\r\n\t\tsuper(x, y, size);\r\n\t\tthis.treeTrankRadius = 35;\r\n\t\tthis.opacity = 0.9;\r\n\t}\r\n}\r\n","import Hand from './Hand';\r\nimport Map from './Map';\r\nimport Point from './Point';\r\nimport Tree from './Tree';\r\nimport RoundObstacle from './RoundObstacle';\r\nimport RectangleObstacle from './RectangleObstacle';\r\nimport { TerrainType } from './Terrain';\r\n\r\nexport default class Player {\r\n\treadonly size: number = 80;\r\n\treadonly radius: number = this.size / 2;\r\n\treadonly speed: number = 6;\r\n\tprivate x: number;\r\n\tprivate y: number;\r\n\tprivate angle: number = 0;\r\n\tprivate map: Map;\r\n\thands: Hand[] = [];\r\n\tprivate canvas: HTMLCanvasElement;\r\n\treadonly collisionPoints: Point[] = [];\r\n\tprivate slowAroundObstacle: boolean = false;\r\n\tprivate denySlowAroundObstacle: boolean = false;\r\n\r\n\tconstructor(map: Map) {\r\n\t\tthis.x = 550;\r\n\t\tthis.y = 700;\r\n\t\tthis.canvas = <HTMLCanvasElement>document.getElementById('gameScreen');\r\n\t\tthis.hands.push(new Hand(this.size));\r\n\t\tthis.hands.push(new Hand(this.size));\r\n\t\tthis.map = map;\r\n\t\tthis.calculateCollisionsPoints();\r\n\t}\r\n\r\n\tprivate calculateCollisionsPoints(): void {\r\n\t\tfor (let i = 0; i < 360; i += 10) {\r\n\t\t\t//triangle\r\n\t\t\tconst x = Math.sin(i * Math.PI / 180) * this.radius;\r\n\t\t\tconst y = Math.cos(i * Math.PI / 180) * this.radius;\r\n\t\t\tthis.collisionPoints.push(new Point(x, y));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate getCenterX(): number {\r\n\t\treturn this.x + this.radius;\r\n\t}\r\n\r\n\tprivate getCenterY(): number {\r\n\t\treturn this.y + this.radius;\r\n\t}\r\n\r\n\tgetX(): number {\r\n\t\treturn this.x;\r\n\t}\r\n\r\n\tgetY(): number {\r\n\t\treturn this.y;\r\n\t}\r\n\r\n\tgetAngle(): number {\r\n\t\treturn this.angle;\r\n\t}\r\n\r\n\tsetAngle(angle: number): void {\r\n\t\tthis.angle = angle;\r\n\t}\r\n\r\n\thit(): void {\r\n\t\tif (this.hands[0].ready() && this.hands[1].ready()) {\r\n\t\t\tlet random = Math.round(Math.random());\r\n\t\t\tthis.hands[random].hit();\r\n\t\t}\r\n\t}\r\n\r\n\tplayerMove(up: boolean, left: boolean, down: boolean, right: boolean, mouseX: number, mouseY: number): void {\r\n\t\tif (up || down || left || right) {\r\n\t\t\t//standart shift (speed)\r\n\t\t\tlet shift = this.speed;\r\n\r\n\t\t\t//diagonal shift and slow around obstacle\r\n\t\t\tif ((up && left) || (up && right) || (down && left) || (down && right) || this.slowAroundObstacle) {\r\n\t\t\t\tshift = shift / Math.sqrt(2);\r\n\t\t\t\tthis.slowAroundObstacle = false;\r\n\t\t\t}\r\n\r\n\t\t\t//shift in water\r\n\t\t\tfor (let i = 0; i < this.map.terrain.length; i++) {\r\n\t\t\t\t//terrain block is under my center\r\n\t\t\t\tif (\r\n\t\t\t\t\tthis.getCenterX() < this.map.terrain[i].x + this.map.terrain[i].width &&\r\n\t\t\t\t\tthis.getCenterX() >= this.map.terrain[i].x &&\r\n\t\t\t\t\tthis.getCenterY() < this.map.terrain[i].y + this.map.terrain[i].height &&\r\n\t\t\t\t\tthis.getCenterY() >= this.map.terrain[i].y\r\n\t\t\t\t) {\r\n\t\t\t\t\tif (this.map.terrain[i].type === TerrainType.Water) {\r\n\t\t\t\t\t\tshift = shift / 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.map.terrain[i].type === TerrainType.WaterTriangle1 ||\r\n\t\t\t\t\t\tthis.map.terrain[i].type === TerrainType.WaterTriangle2 ||\r\n\t\t\t\t\t\tthis.map.terrain[i].type === TerrainType.WaterTriangle3 ||\r\n\t\t\t\t\t\tthis.map.terrain[i].type === TerrainType.WaterTriangle4\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\t//Math.floor!!!\r\n\t\t\t\t\t\tconst myXPositionOnTerrain = Math.floor(this.getCenterX() - this.map.terrain[i].x);\r\n\t\t\t\t\t\tconst myYPositionOnTerrain = Math.floor(this.getCenterY() - this.map.terrain[i].y);\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tthis.map.waterTerrainData.includeWater(\r\n\t\t\t\t\t\t\t\tthis.map.terrain[i].type,\r\n\t\t\t\t\t\t\t\tmyXPositionOnTerrain,\r\n\t\t\t\t\t\t\t\tmyYPositionOnTerrain\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tshift = shift / 2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//player shift\r\n\t\t\tlet shiftX = 0;\r\n\t\t\tlet shiftY = 0;\r\n\t\t\tif (up) shiftY += -shift;\r\n\t\t\tif (down) shiftY += shift;\r\n\t\t\tif (left) shiftX += -shift;\r\n\t\t\tif (right) shiftX += shift;\r\n\t\t\t//i want to go this way...\r\n\t\t\tthis.shiftOnPosition(shiftX, shiftY);\r\n\t\t}\r\n\t\tthis.rotatePlayer(mouseX, mouseY);\r\n\t\tthis.changeHandsPosition();\r\n\t}\r\n\r\n\tprivate changeHandsPosition(): void {\r\n\t\tthis.hands[0].moveHand(this.angle, -1, this.size, this.x, this.y, this.map);\r\n\t\tthis.hands[1].moveHand(this.angle, 1, this.size, this.x, this.y, this.map);\r\n\t}\r\n\r\n\tprivate shiftOnPosition(shiftX: number, shiftY: number): void {\r\n\t\t//one or two shifts?\r\n\t\tlet countShifts = 0;\r\n\t\tif (shiftX !== 0) countShifts++;\r\n\t\tif (shiftY !== 0) countShifts++;\r\n\r\n\t\t//y shift\r\n\t\tlet shiftDirection = 1;\r\n\t\tif (shiftY < 0) shiftDirection = -1;\r\n\t\tfor (let i = 0; i < Math.abs(shiftY); i++) {\r\n\t\t\tif (this.canIshift(0, shiftY - i * shiftDirection, countShifts)) {\r\n\t\t\t\tthis.y += shiftY - i * shiftDirection;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//x shift\r\n\t\tshiftDirection = 1;\r\n\t\tif (shiftX < 0) shiftDirection = -1;\r\n\t\tfor (let i = 0; i < Math.abs(shiftX); i++) {\r\n\t\t\tif (this.canIshift(shiftX - i * shiftDirection, 0, countShifts)) {\r\n\t\t\t\tthis.x += shiftX - i * shiftDirection;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//move only on map area\r\n\t\tif (this.x + this.size > this.map.width) this.x = this.map.width - this.size;\r\n\t\tif (this.x < 0) this.x = 0;\r\n\t\tif (this.y + this.size > this.map.height) this.y = this.map.height - this.size;\r\n\t\tif (this.y < 0) this.y = 0;\r\n\t}\r\n\r\n\tprivate canIshift(shiftX: number, shiftY: number, countShifts: number): boolean {\r\n\t\t//rectangles\r\n\t\tfor (let i = 0; i < this.map.rectangleObstacles.length; i++) {\r\n\t\t\tconst rectangleObstacle = this.map.rectangleObstacles[i];\r\n\t\t\tif (rectangleObstacle.isActive()) {\r\n\t\t\t\t//collision rectangle - rectangle\r\n\t\t\t\tif (\r\n\t\t\t\t\tthis.x + shiftX + this.size >= rectangleObstacle.x &&\r\n\t\t\t\t\tthis.x + shiftX <= rectangleObstacle.x + rectangleObstacle.width &&\r\n\t\t\t\t\tthis.y + shiftY <= rectangleObstacle.y + rectangleObstacle.height &&\r\n\t\t\t\t\tthis.y + shiftY + this.size >= rectangleObstacle.y\r\n\t\t\t\t) {\r\n\t\t\t\t\tfor (let j = 0; j < this.collisionPoints.length; j++) {\r\n\t\t\t\t\t\tconst point = this.collisionPoints[j];\r\n\t\t\t\t\t\tconst pointOnMyPosition = new Point(\r\n\t\t\t\t\t\t\tthis.getCenterX() + shiftX + point.x,\r\n\t\t\t\t\t\t\tthis.getCenterY() + shiftY + point.y\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t//point collisions\r\n\t\t\t\t\t\tif (rectangleObstacle.isPointIn(pointOnMyPosition)) {\r\n\t\t\t\t\t\t\tthis.goAroundRectangleObstacle(shiftX, shiftY, countShifts, rectangleObstacle);\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//rounds\r\n\t\tfor (let i = 0; i < this.map.impassableRoundObstacles.length; i++) {\r\n\t\t\tconst roundObstacle = this.map.impassableRoundObstacles[i];\r\n\t\t\tif (roundObstacle.isActive()) {\r\n\t\t\t\tlet obstacleRadius = roundObstacle.radius;\r\n\t\t\t\tif (roundObstacle instanceof Tree) obstacleRadius = roundObstacle.treeTrankRadius;\r\n\t\t\t\tconst obstacleAndPlayerRadius = obstacleRadius + this.radius;\r\n\t\t\t\tconst x = this.getCenterX() + shiftX - roundObstacle.getCenterX();\r\n\t\t\t\tconst y = this.getCenterY() + shiftY - roundObstacle.getCenterY();\r\n\t\t\t\tconst distance = Math.sqrt(x * x + y * y);\r\n\t\t\t\tif (distance < obstacleAndPlayerRadius) {\r\n\t\t\t\t\tthis.goAroundRoundObstacle(shiftX, shiftY, countShifts, roundObstacle);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprivate goAroundRectangleObstacle(\r\n\t\tshiftX: number,\r\n\t\tshiftY: number,\r\n\t\tcountShifts: number,\r\n\t\trectangleObstacle: RectangleObstacle\r\n\t): void {\r\n\t\tthis.slowAroundObstacle = true;\r\n\t\tconst maxObstacleOverlap = this.size * 0.75;\r\n\t\tif (countShifts === 1) {\r\n\t\t\tif (shiftX !== 0) {\r\n\t\t\t\t//up or down?\r\n\t\t\t\t//go up\r\n\t\t\t\tif (this.getCenterY() <= rectangleObstacle.y + rectangleObstacle.height / 2) {\r\n\t\t\t\t\tif (this.y + this.size - rectangleObstacle.y < maxObstacleOverlap) this.shiftOnPosition(0, -1);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//go down\r\n\t\t\t\t\tif (rectangleObstacle.y + rectangleObstacle.height - this.y < maxObstacleOverlap)\r\n\t\t\t\t\t\tthis.shiftOnPosition(0, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (shiftY !== 0) {\r\n\t\t\t\t//left or right?\r\n\t\t\t\t//go left\r\n\t\t\t\tif (this.getCenterX() <= rectangleObstacle.x + rectangleObstacle.width / 2) {\r\n\t\t\t\t\tif (this.x + this.size - rectangleObstacle.x < maxObstacleOverlap) this.shiftOnPosition(-1, 0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//go right\r\n\t\t\t\t\tif (rectangleObstacle.x + rectangleObstacle.width - this.x < maxObstacleOverlap)\r\n\t\t\t\t\t\tthis.shiftOnPosition(1, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (countShifts === 2) {\r\n\t\t\tthis.slowAroundObstacle = false;\r\n\t\t\t//chose way\r\n\t\t\t//obstacle is up and right\r\n\t\t\tif (\r\n\t\t\t\tthis.getCenterX() < rectangleObstacle.x + rectangleObstacle.width / 2 &&\r\n\t\t\t\tthis.getCenterY() > rectangleObstacle.y + rectangleObstacle.height / 2\r\n\t\t\t) {\r\n\t\t\t\tconst xDistanceFromCorner = Math.abs(this.getCenterX() - rectangleObstacle.x);\r\n\t\t\t\tconst yDistanceFromCorner = Math.abs(\r\n\t\t\t\t\tthis.getCenterY() - (rectangleObstacle.y + rectangleObstacle.height)\r\n\t\t\t\t);\r\n\t\t\t\t//x shift right\r\n\t\t\t\tif (xDistanceFromCorner <= yDistanceFromCorner) {\r\n\t\t\t\t\tthis.shiftOnPosition(0.1, 0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//y shift up\r\n\t\t\t\t\tthis.shiftOnPosition(0, -0.1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (\r\n\t\t\t\tthis.getCenterX() > rectangleObstacle.x + rectangleObstacle.width / 2 &&\r\n\t\t\t\tthis.getCenterY() > rectangleObstacle.y + rectangleObstacle.height / 2\r\n\t\t\t) {\r\n\t\t\t\t//obstacle is up and left\r\n\t\t\t\tconst xDistanceFromCorner = Math.abs(\r\n\t\t\t\t\tthis.getCenterX() - (rectangleObstacle.x + rectangleObstacle.width)\r\n\t\t\t\t);\r\n\t\t\t\tconst yDistanceFromCorner = Math.abs(\r\n\t\t\t\t\tthis.getCenterY() - (rectangleObstacle.y + rectangleObstacle.height)\r\n\t\t\t\t);\r\n\t\t\t\t//x shift left\r\n\t\t\t\tif (xDistanceFromCorner <= yDistanceFromCorner) {\r\n\t\t\t\t\tthis.shiftOnPosition(-0.1, 0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//y shift up\r\n\t\t\t\t\tthis.shiftOnPosition(0, -0.1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (\r\n\t\t\t\tthis.getCenterX() > rectangleObstacle.x + rectangleObstacle.width / 2 &&\r\n\t\t\t\tthis.getCenterY() < rectangleObstacle.y + rectangleObstacle.height / 2\r\n\t\t\t) {\r\n\t\t\t\t//obstacle is down and left\r\n\t\t\t\tconst xDistanceFromCorner = Math.abs(\r\n\t\t\t\t\tthis.getCenterX() - (rectangleObstacle.x + rectangleObstacle.width)\r\n\t\t\t\t);\r\n\t\t\t\tconst yDistanceFromCorner = Math.abs(this.getCenterY() - rectangleObstacle.y);\r\n\t\t\t\t//x shift left\r\n\t\t\t\tif (xDistanceFromCorner <= yDistanceFromCorner) {\r\n\t\t\t\t\tthis.shiftOnPosition(-0.1, 0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//y shift down\r\n\t\t\t\t\tthis.shiftOnPosition(0, 0.1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (\r\n\t\t\t\tthis.getCenterX() < rectangleObstacle.x + rectangleObstacle.width / 2 &&\r\n\t\t\t\tthis.getCenterY() < rectangleObstacle.y + rectangleObstacle.height / 2\r\n\t\t\t) {\r\n\t\t\t\t//obstacle is down and right\r\n\t\t\t\tconst xDistanceFromCorner = Math.abs(this.getCenterX() - rectangleObstacle.x);\r\n\t\t\t\tconst yDistanceFromCorner = Math.abs(this.getCenterY() - rectangleObstacle.y);\r\n\t\t\t\t//x shift right\r\n\t\t\t\tif (xDistanceFromCorner <= yDistanceFromCorner) {\r\n\t\t\t\t\tthis.shiftOnPosition(0.1, 0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//y shift down\r\n\t\t\t\t\tthis.shiftOnPosition(0, 0.1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate goAroundRoundObstacle(\r\n\t\tshiftX: number,\r\n\t\tshiftY: number,\r\n\t\tcountShifts: number,\r\n\t\troundObstacle: RoundObstacle\r\n\t): void {\r\n\t\tthis.slowAroundObstacle = true;\r\n\t\tif (countShifts === 1) {\r\n\t\t\tif (shiftX !== 0) {\r\n\t\t\t\t//obstacle above\r\n\t\t\t\tif (this.getCenterY() >= roundObstacle.getCenterY()) {\r\n\t\t\t\t\t//go down\r\n\t\t\t\t\tthis.shiftOnPosition(0, 1);\r\n\t\t\t\t}\r\n\t\t\t\t//obstacle below\r\n\t\t\t\tif (this.getCenterY() < roundObstacle.getCenterY()) {\r\n\t\t\t\t\t//go up\r\n\t\t\t\t\tthis.shiftOnPosition(0, -1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (shiftY !== 0) {\r\n\t\t\t\t//obstacle on left\r\n\t\t\t\tif (this.getCenterX() >= roundObstacle.getCenterX()) {\r\n\t\t\t\t\t//go right\r\n\t\t\t\t\tthis.shiftOnPosition(1, 0);\r\n\t\t\t\t}\r\n\t\t\t\t//obstacle on right\r\n\t\t\t\tif (this.getCenterX() < roundObstacle.getCenterX()) {\r\n\t\t\t\t\t//go left\r\n\t\t\t\t\tthis.shiftOnPosition(-1, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (countShifts === 2) {\r\n\t\t\t//choose shorter way\r\n\t\t\tconst xDistance = Math.abs(this.getCenterX() - roundObstacle.getCenterX());\r\n\t\t\tconst yDistance = Math.abs(this.getCenterY() - roundObstacle.getCenterY());\r\n\r\n\t\t\t//x shift\r\n\t\t\tif (xDistance <= yDistance) {\r\n\t\t\t\t//obstacle on right\r\n\t\t\t\tif (this.getCenterX() <= roundObstacle.getCenterX()) {\r\n\t\t\t\t\t//go right\r\n\t\t\t\t\tthis.shiftOnPosition(0.5, 0);\r\n\t\t\t\t}\r\n\t\t\t\t//obstacle on left\r\n\t\t\t\tif (this.getCenterX() > roundObstacle.getCenterX()) {\r\n\t\t\t\t\t//go left\r\n\t\t\t\t\tthis.shiftOnPosition(-0.5, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//y shift\r\n\t\t\t\t//obstacle below\r\n\t\t\t\tif (this.getCenterY() <= roundObstacle.getCenterY()) {\r\n\t\t\t\t\t//go down\r\n\t\t\t\t\tthis.shiftOnPosition(0, 0.5);\r\n\t\t\t\t}\r\n\t\t\t\t//obstacle above\r\n\t\t\t\tif (this.getCenterY() > roundObstacle.getCenterY()) {\r\n\t\t\t\t\t//go up\r\n\t\t\t\t\tthis.shiftOnPosition(0, -0.5);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate rotatePlayer(mouseX: number, mouseY: number): void {\r\n\t\t//triangular sides\r\n\t\tconst centerX = this.canvas.width / 2;\r\n\t\tconst centerY = this.canvas.height / 2;\r\n\t\tlet x = centerX - mouseX;\r\n\t\tlet y = centerY - mouseY;\r\n\t\t//can not set x and y to 0 because angle\r\n\t\tif (x === 0) x = 0.1;\r\n\t\t//atangens\r\n\t\tlet angle = Math.abs(Math.atan(x / y) * 180 / Math.PI);\r\n\t\t//1..2..3..4.. Q; 0 - 90, 90 - 180...\r\n\t\t//1\r\n\t\tif (mouseX >= centerX && mouseY < centerY) {\r\n\t\t\tthis.angle = angle;\r\n\t\t}\r\n\t\t//2\r\n\t\tif (mouseX >= centerX && mouseY >= centerY) {\r\n\t\t\tthis.angle = 90 + 90 - angle;\r\n\t\t}\r\n\t\t//3\r\n\t\tif (mouseX < centerX && mouseY >= centerY) {\r\n\t\t\tthis.angle = 180 + angle;\r\n\t\t}\r\n\t\t//4\r\n\t\tif (mouseX < centerX && mouseY < centerY) {\r\n\t\t\tthis.angle = 270 + 90 - angle;\r\n\t\t}\r\n\t\tthis.angle = Math.round(this.angle);\r\n\t\tif (this.angle === 360) this.angle = 0;\r\n\t}\r\n}\r\n","import RoundObstacle from './RoundObstacle';\r\n\r\nexport default class Bush extends RoundObstacle {\r\n\tconstructor(x: number, y: number) {\r\n\t\tconst size = 100;\r\n\t\tsuper(x, y, size);\r\n\t\tthis.opacity = 0.9;\r\n\t}\r\n}\r\n","import RoundObstacle from './RoundObstacle';\r\n\r\nexport default class Rock extends RoundObstacle {\r\n\tconstructor(x: number, y: number) {\r\n\t\tconst size = 100;\r\n\t\tsuper(x, y, size);\r\n\t\tthis.opacity = 1;\r\n\t}\r\n}\r\n","import Point from './Point';\r\n\r\nexport default abstract class RectangleObstacle {\r\n\treadonly x: number;\r\n\treadonly y: number;\r\n\tprotected opacity: number = 1;\r\n\treadonly width: number;\r\n\treadonly height: number;\r\n\tprivate active: boolean = true;\r\n\r\n\tconstructor(x: number, y: number, width: number, height: number) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t}\r\n\r\n\tisPointIn(point: Point): boolean {\r\n\t\tconst { x, y } = point;\r\n\t\tif (x < this.x + this.width && x >= this.x && y >= this.y && y < this.y + this.height) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgetOpacity(): number {\r\n\t\treturn this.opacity;\r\n\t}\r\n\r\n\tisActive(): boolean {\r\n\t\treturn this.active;\r\n\t}\r\n\r\n\tacceptHit(): void {\r\n\t\tif (this.opacity > 0.1) this.opacity -= 0.1;\r\n\t\tif (this.opacity < 0.1) {\r\n\t\t\tthis.active = false;\r\n\t\t}\r\n\t}\r\n}\r\n","import RectangleObstacle from './RectangleObstacle';\r\n\r\nexport default class Wall extends RectangleObstacle {\r\n\tconstructor(x: number, y: number, width: number, height: number) {\r\n\t\tsuper(x, y, width, height);\r\n\t}\r\n}\r\n","import { Terrain, TerrainType } from './Terrain';\r\nimport Bush from './Bush';\r\nimport Tree from './Tree';\r\nimport Rock from './Rock';\r\nimport Wall from './Wall';\r\nimport WaterTerrainData from './WaterTerrainData';\r\nimport RoundObstacle from './RoundObstacle';\r\nimport RectangleObstacle from './RectangleObstacle';\r\n\r\ntype Block = {\r\n\tx: number;\r\n\ty: number;\r\n};\r\n\r\nexport default class Map {\r\n\treadonly width: number;\r\n\treadonly height: number;\r\n\treadonly blocks: Block[] = [];\r\n\treadonly terrain: Terrain[] = [];\r\n\treadonly impassableRoundObstacles: RoundObstacle[] = [];\r\n\treadonly bushes: Bush[] = [];\r\n\treadonly trees: Tree[] = [];\r\n\treadonly rocks: Rock[] = [];\r\n\treadonly rectangleObstacles: RectangleObstacle[] = [];\r\n\treadonly waterTerrainData: WaterTerrainData;\r\n\r\n\tconstructor(waterTerrainData: WaterTerrainData) {\r\n\t\tthis.waterTerrainData = waterTerrainData;\r\n\t\tconst blockSize = 300;\r\n\t\tthis.width = 5 * blockSize;\r\n\t\tthis.height = 5 * blockSize;\r\n\t\t//Create blocks\r\n\t\tfor (let yy = 0; yy < this.height / blockSize; yy++) {\r\n\t\t\tfor (let xx = 0; xx < this.width / blockSize; xx++) {\r\n\t\t\t\tthis.blocks.push({ x: xx * blockSize, y: yy * blockSize });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//terrain\r\n\t\tthis.terrain.push(new Terrain(TerrainType.Water, 0, 0, this.width, blockSize));\r\n\t\tthis.terrain.push(new Terrain(TerrainType.Water, 0, this.height - blockSize, this.width, blockSize));\r\n\t\tthis.terrain.push(new Terrain(TerrainType.Water, 0, blockSize, blockSize, this.height - 2 * blockSize));\r\n\t\tthis.terrain.push(\r\n\t\t\tnew Terrain(TerrainType.Water, this.width - blockSize, blockSize, blockSize, this.height - 2 * blockSize)\r\n\t\t);\r\n\r\n\t\t//water trangle\r\n\t\tthis.terrain.push(new Terrain(TerrainType.WaterTriangle1, blockSize, blockSize, blockSize, blockSize));\r\n\t\tthis.terrain.push(new Terrain(TerrainType.WaterTriangle2, 3 * blockSize, blockSize, blockSize, blockSize));\r\n\t\tthis.terrain.push(new Terrain(TerrainType.WaterTriangle3, 3 * blockSize, 3 * blockSize, blockSize, blockSize));\r\n\t\tthis.terrain.push(new Terrain(TerrainType.WaterTriangle4, blockSize, 3 * blockSize, blockSize, blockSize));\r\n\r\n\t\t//bushes\r\n\t\tthis.bushes.push(new Bush(600, 600));\r\n\t\tthis.bushes.push(new Bush(300, 400));\r\n\r\n\t\t//rocks\r\n\t\tconst rock = new Rock(100, 100);\r\n\t\tthis.rocks.push(rock);\r\n\t\tthis.impassableRoundObstacles.push(rock);\r\n\r\n\t\tconst rock2 = new Rock(550, 550);\r\n\t\tthis.rocks.push(rock2);\r\n\t\tthis.impassableRoundObstacles.push(rock2);\r\n\r\n\t\tconst rock3 = new Rock(700, 550);\r\n\t\tthis.rocks.push(rock3);\r\n\t\tthis.impassableRoundObstacles.push(rock3);\r\n\r\n\t\t//this.rocks[0].isPointIn(new Point(120, 120));\r\n\r\n\t\t//trees\r\n\t\tconst tree = new Tree(800, 800);\r\n\t\tthis.trees.push(tree);\r\n\t\tthis.impassableRoundObstacles.push(tree);\r\n\r\n\t\t//walls\r\n\t\tthis.rectangleObstacles.push(new Wall(600, 800, 20, 200));\r\n\t\tthis.rectangleObstacles.push(new Wall(500, 900, 200, 20));\r\n\t\tthis.rectangleObstacles.push(new Wall(500, 350, 300, 100));\r\n\t}\r\n}\r\n","import { TerrainType } from './Terrain';\r\n\r\n/*\r\nimport { triangel1 } from './triangel1Data';\r\nimport { triangel2 } from './triangel2Data';\r\nimport { triangel3 } from './triangel3Data';\r\nimport { triangel4 } from './triangel4Data';\r\n*/\r\n\r\nexport default class WaterTerrainData {\r\n\tprivate waterTriangle1: boolean[][] = [];\r\n\tprivate waterTriangle2: boolean[][] = [];\r\n\tprivate waterTriangle3: boolean[][] = [];\r\n\tprivate waterTriangle4: boolean[][] = [];\r\n\r\n\t/*\r\n\tprivate waterTriangle1: number[][] = triangel1;\r\n\tprivate waterTriangle2: number[][] = triangel2;\r\n\tprivate waterTriangle3: number[][] = triangel3;\r\n\tprivate waterTriangle4: number[][] = triangel4;\r\n\t*/\r\n\r\n\tconstructor() {}\r\n\r\n\tsetData(type: string, data: boolean[][]): void {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'waterTriangle1':\r\n\t\t\t\tthis.waterTriangle1 = data;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'waterTriangle2':\r\n\t\t\t\tthis.waterTriangle2 = data;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'waterTriangle3':\r\n\t\t\t\tthis.waterTriangle3 = data;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'waterTriangle4':\r\n\t\t\t\tthis.waterTriangle4 = data;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error('Unknown water type');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tincludeWater(type: TerrainType, x: number, y: number): boolean {\r\n\t\tlet state = false;\r\n\t\tlet waterData;\r\n\t\tswitch (type) {\r\n\t\t\tcase TerrainType.WaterTriangle1:\r\n\t\t\t\twaterData = this.waterTriangle1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase TerrainType.WaterTriangle2:\r\n\t\t\t\twaterData = this.waterTriangle2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase TerrainType.WaterTriangle3:\r\n\t\t\t\twaterData = this.waterTriangle3;\r\n\t\t\t\tbreak;\r\n\t\t\tcase TerrainType.WaterTriangle4:\r\n\t\t\t\twaterData = this.waterTriangle4;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error('Unknown water type');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tif (x < waterData.length && y < waterData[x].length) {\r\n\t\t\tif (waterData[x][y]) state = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//no water data yet\r\n\t\t\t//no water data == we are in water\r\n\t\t\tif (waterData.length === 0) {\r\n\t\t\t\tstate = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthrow new Error('Out of range on water type');\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn state;\r\n\t}\r\n\r\n\t/*\r\n\twrite(): void {\r\n\t\tconst el = document.createElement('p');\r\n\t\tel.style.position = 'absolute';\r\n\t\tel.style.top = '0';\r\n\t\tel.style.left = '0';\r\n\r\n\t\tel.textContent = JSON.stringify(this.waterTriangle4);\r\n\t\tdocument.body.appendChild(el);\r\n\t}\r\n\t*/\r\n}\r\n","import { Keys, Mouse } from './Controller';\r\nimport View from './View';\r\nimport Player from './Player';\r\nimport Map from './Map';\r\nimport WaterTerrainData from './WaterTerrainData';\r\n\r\nexport default class Model {\r\n\tprivate view: View;\r\n\tprivate player: Player;\r\n\tprivate waterTerrainData: WaterTerrainData;\r\n\tprivate keys: Keys;\r\n\tprivate mouse: Mouse;\r\n\tprivate map: Map;\r\n\tconstructor(keys: Keys, mouse: Mouse) {\r\n\t\tthis.waterTerrainData = new WaterTerrainData();\r\n\t\tthis.view = new View(this.waterTerrainData);\r\n\t\tthis.map = new Map(this.waterTerrainData);\r\n\t\tthis.player = new Player(this.map);\r\n\t\tthis.keys = keys;\r\n\t\tthis.mouse = mouse;\r\n\t\tthis.gameLoop();\r\n\t}\r\n\r\n\tprivate gameLoop(): void {\r\n\t\t//repeat\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tthis.gameLoop();\r\n\t\t});\r\n\r\n\t\tthis.player.playerMove(this.keys.w, this.keys.a, this.keys.s, this.keys.d, this.mouse.x, this.mouse.y);\r\n\t\t//hit\r\n\t\tif (this.mouse.left) {\r\n\t\t\tthis.player.hit();\r\n\t\t\tthis.mouse.left = false;\r\n\t\t}\r\n\r\n\t\tthis.view.draw(this.map, this.player, this.mouse);\r\n\t}\r\n\r\n\tscreenResize(): void {\r\n\t\tthis.view.screenResize();\r\n\t}\r\n}\r\n","import Model from './Model';\r\n\r\nexport type Keys = {\r\n\tw: boolean;\r\n\ta: boolean;\r\n\ts: boolean;\r\n\td: boolean;\r\n};\r\n\r\nexport type Mouse = {\r\n\tx: number;\r\n\ty: number;\r\n\tleft: boolean;\r\n\tmiddle: boolean;\r\n\tright: boolean;\r\n};\r\n\r\nexport class Controller {\r\n\tprivate static instance: Controller;\r\n\tprivate model: Model;\r\n\tprivate canvas: HTMLCanvasElement;\r\n\tprivate keys: Keys = {\r\n\t\tw: false,\r\n\t\ta: false,\r\n\t\ts: false,\r\n\t\td: false\r\n\t};\r\n\tprivate mouse: Mouse = {\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t\tleft: false,\r\n\t\tmiddle: false,\r\n\t\tright: false\r\n\t};\r\n\r\n\tprivate constructor() {\r\n\t\tthis.canvas = document.getElementsByTagName('canvas')[0];\r\n\t\tthis.model = new Model(this.keys, this.mouse);\r\n\t\tthis.model.screenResize();\r\n\t\twindow.addEventListener('resize', () => {\r\n\t\t\tthis.model.screenResize();\r\n\t\t\tconst event = new Event('mousemove');\r\n\t\t\tthis.canvas.dispatchEvent(event);\r\n\t\t});\r\n\t\tthis.keysController();\r\n\t\tthis.mouseController();\r\n\t}\r\n\r\n\tstatic run(): void {\r\n\t\tif (!Controller.instance) {\r\n\t\t\tController.instance = new Controller();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error('Only one controller!');\r\n\t\t}\r\n\t}\r\n\r\n\tprivate mouseController(): void {\r\n\t\tthis.canvas.addEventListener('mousemove', (e: MouseEvent) => {\r\n\t\t\tif (e.x == undefined) {\r\n\t\t\t\tthis.mouse.x = this.canvas.width / 2;\r\n\t\t\t\tthis.mouse.y = this.canvas.height / 2;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.mouse.x = e.x;\r\n\t\t\t\tthis.mouse.y = e.y;\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.canvas.addEventListener('click', (e: MouseEvent) => {\r\n\t\t\tthis.mouse.left = true;\r\n\t\t});\r\n\t}\r\n\r\n\tprivate keysController(): void {\r\n\t\tdocument.addEventListener('keydown', (e: KeyboardEvent) => {\r\n\t\t\tswitch (e.code) {\r\n\t\t\t\tcase 'KeyW':\r\n\t\t\t\t\tthis.keys.w = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'KeyA':\r\n\t\t\t\t\tthis.keys.a = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'KeyS':\r\n\t\t\t\t\tthis.keys.s = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'KeyD':\r\n\t\t\t\t\tthis.keys.d = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener('keyup', (e: KeyboardEvent) => {\r\n\t\t\tswitch (e.code) {\r\n\t\t\t\tcase 'KeyW':\r\n\t\t\t\t\tthis.keys.w = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'KeyA':\r\n\t\t\t\t\tthis.keys.a = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'KeyS':\r\n\t\t\t\t\tthis.keys.s = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'KeyD':\r\n\t\t\t\t\tthis.keys.d = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","import { Controller } from './Controller';\r\nController.run();\r\n"],"sourceRoot":""}