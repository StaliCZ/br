{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Terrain.ts","webpack:///./src/Point.ts","webpack:///./src/RoundObstacle.ts","webpack:///./src/View.ts","webpack:///./src/Hand.ts","webpack:///./src/Gun.ts","webpack:///./src/Tree.ts","webpack:///./src/Player.ts","webpack:///./src/Bush.ts","webpack:///./src/Rock.ts","webpack:///./src/RectangleObstacle.ts","webpack:///./src/Wall.ts","webpack:///./src/Map.ts","webpack:///./src/WaterTerrainData.ts","webpack:///./src/Model.ts","webpack:///./src/ServerClientSync.ts","webpack:///./src/Controller.ts","webpack:///./src/app.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TerrainType","Terrain","type","x","y","width","height","this","angle","WaterTriangle2","WaterTriangle3","WaterTriangle4","RoundObstacle","id","size","changed","opacity","active","hitAnimateTimer","hitAnimateShiftX","hitAnimateShiftY","radius","getChanged","nullChanged","update","isPointIn","point","Math","sqrt","getCenterX","getCenterY","getOpacity","isActive","acceptHit","handCenter","createAnimateHit","hitAngle","abs","atan","PI","round","sin","cos","animate","animateX","animateY","src_Point","View","map","player","playersTicks","bullets","mouse","waterTerrainData","serverClientSync","_this","resolutionAdjustment","myPlayerCenterX","myPlayerCenterY","startDraw","canvas","document","getElementById","helperCanvas","ctx","getContext","playerSVG","Image","src","playerHandSVG","bushSVG","rockSVG","treeSVG","cursorSVG","loadingProgresSVG","loadingCircleSVG","pistolSVG","waterTrianglePNG","onload","saveWaterPixels","WaterTriangle1","screenResize","window","innerWidth","innerHeight","screenCenterX","screenCenterY","changeResolutionAdjustment","finalAdjustment","waterType","fillStyle","fillRect","middleImage","save","translate","rotate","drawImage","restore","Worker","worker","onmessage","e","setData","data","getImageData","postMessage","time","Date","getTime","console","log","draw","clearRect","length","sort","a","b","ready","wantedFrameTime","getServerTime","getDrawDelay","olderFrame","_i","_a","frame","newerFrame","sumaNewer","timeDistance","distanceOlderFromWantedFrameTime","percentShift","xDiference","yDiference","directionX","directionY","calculatedX","calculatedY","blockSize","blocks","_b","_c","block","_d","howToDraw","x_1","isOnScreen","_e","_f","terrain","_g","x_2","Water","_h","_j","_k","x_3","_l","x_4","_m","x_5","_o","x_6","_p","_q","rocks","rock","_r","x_7","globalAlpha","_s","_t","rectangleObstacles","rectangleObstacle","_u","x_8","_v","_w","changeDrawDelay","fillText","reset","newer","older","_x","x_9","_y","_z","collisionPoints","_0","x_10","y_1","size_1","i_1","h","_1","x_11","y_2","size_2","_2","_3","hands","_4","x_12","y_3","size_3","_5","_6","bushes","bush","_7","x_13","_8","_9","trees","tree","_10","x_14","_11","_12","bullet","_13","x_15","_14","loading","max","passedViewLoadingSteps","loadingSVGSize","x_16","timeToEnd","fontSize","floor","font","toString","rowMultiple","getPing","getTimeDiference","gameObject","animateShiftX","animateShiftY","src_RoundObstacle","animateShift","Hand","playerSize","shiftAngle","hitTimer","inAction","playerRadius","calculateCollisionsPoints","push","getX","getY","moveHand","playerAngle","direction","playerX","playerY","obstacle","obstacleAndHandRadius","j","playerAngleForHand","hit","Gun","range","move","playerCenterX","playerCenterY","getAngle","_super","Tree","treeTrankRadius","__extends","Player","speed","slowAroundObstacle","loadingTime","loadingMaxTime","src_Hand","gun","src_Gun","setAngle","random","playerMove","up","left","down","right","mouseX","mouseY","shift","myXPositionOnTerrain","myYPositionOnTerrain","includeWater","shiftX","shiftY","shiftOnPosition","rotatePlayer","changeHandsPosition","countShifts","shiftDirection","canIshift","pointOnMyPosition","goAroundRectangleObstacle","impassableRoundObstacles","roundObstacle","obstacleRadius","src_Tree","obstacleAndPlayerRadius","goAroundRoundObstacle","maxObstacleOverlap","centerX","centerY","Bush","Bush_extends","Rock","Rock_extends","RectangleObstacle","getChangedData","Wall","Wall_extends","src_RectangleObstacle","yy","xx","src_Bush","src_Rock","rock2","rock3","tree2","src_Wall","WaterTerrainData","waterTriangle1","waterTriangle2","waterTriangle3","waterTriangle4","Error","waterData","state","Model","keys","socket","game","src_WaterTerrainData","src_Map","src_Player","view","src_View","setTimeout","gameLoop","setID","setName","getID","getName","getGame","requestAnimationFrame","emit","now","ServerClientSync","ping","pings","timeDiference","timeDiferences","attempts","defaultDrawDelay","drawDelay","addData","pingsSuma","timeDiferenceSuma","change","serverTime","Controller","w","middle","getElementsByTagName","io","connect","src_ServerClientSync","model","src_Model","addEventListener","event","Event","dispatchEvent","keysController","mouseController","socketController","run","instance","on","clientDateNow","serverDateNow","timeNow","timeDiferenceClientServer","tick","splice","mapObject","wall","undefined","previousPlayerAngle","code"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export enum TerrainType {\r\n\tWater,\r\n\tWaterTriangle1,\r\n\tWaterTriangle2,\r\n\tWaterTriangle3,\r\n\tWaterTriangle4\r\n}\r\n\r\nexport class Terrain {\r\n\treadonly type: TerrainType;\r\n\treadonly x: number;\r\n\treadonly y: number;\r\n\treadonly width: number;\r\n\treadonly height: number;\r\n\treadonly angle: number = 0;\r\n\r\n\tconstructor(type: TerrainType, x: number, y: number, width: number, height: number) {\r\n\t\tthis.type = type;\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase TerrainType.WaterTriangle2:\r\n\t\t\t\tthis.angle = 90;\r\n\t\t\t\tbreak;\r\n\t\t\tcase TerrainType.WaterTriangle3:\r\n\t\t\t\tthis.angle = 180;\r\n\t\t\t\tbreak;\r\n\t\t\tcase TerrainType.WaterTriangle4:\r\n\t\t\t\tthis.angle = 270;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n","export default class Point {\r\n\treadonly x: number;\r\n\treadonly y: number;\r\n\r\n\tconstructor(x: number, y: number) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n}\r\n","import Point from './Point';\r\n\r\nexport default abstract class RoundObstacle {\r\n\treadonly id: number;\r\n\tprotected changed: boolean = false;\r\n\treadonly x: number;\r\n\treadonly y: number;\r\n\tprotected opacity: number = 1;\r\n\treadonly size: number;\r\n\treadonly radius: number;\r\n\tprivate active: boolean = true;\r\n\tprivate hitAnimateTimer: number = 0;\r\n\tprivate hitAnimateShiftX: number = 0;\r\n\tprivate hitAnimateShiftY: number = 0;\r\n\r\n\tconstructor(id: number, x: number, y: number, size: number) {\r\n\t\tthis.id = id;\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.size = size;\r\n\t\tthis.radius = size / 2;\r\n\t}\r\n\r\n\tgetChanged(): boolean {\r\n\t\treturn this.changed;\r\n\t}\r\n\r\n\tnullChanged(): void {\r\n\t\tthis.changed = false;\r\n\t}\r\n\r\n\tupdate(opacity: number): void {\r\n\t\tthis.opacity = opacity;\r\n\t}\r\n\r\n\tisPointIn(point: Point): boolean {\r\n\t\t//triangle\r\n\t\tconst x = this.x + this.radius - point.x;\r\n\t\tconst y = this.y + this.radius - point.y;\r\n\t\tconst radius = Math.sqrt(x * x + y * y);\r\n\t\tif (radius <= this.radius) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgetCenterX(): number {\r\n\t\treturn this.x + this.size / 2;\r\n\t}\r\n\r\n\tgetCenterY(): number {\r\n\t\treturn this.y + this.size / 2;\r\n\t}\r\n\r\n\tgetOpacity(): number {\r\n\t\treturn this.opacity;\r\n\t}\r\n\r\n\tisActive(): boolean {\r\n\t\treturn this.active;\r\n\t}\r\n\r\n\tacceptHit(handCenter: Point): void {\r\n\t\tif (this.opacity > 0.1) this.opacity -= 0.1;\r\n\t\tthis.createAnimateHit(handCenter);\r\n\t\tif (this.opacity < 0.1) {\r\n\t\t\tthis.active = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate createAnimateHit(handCenter: Point): void {\r\n\t\tconst x = handCenter.x - this.getCenterX();\r\n\t\tconst y = handCenter.y - this.getCenterY();\r\n\t\tlet hitAngle = Math.abs(Math.atan(x / y) * (180 / Math.PI));\r\n\t\t//1..2..3..4.. Q; 0 - 90, 90 - 180...\r\n\t\t//1\r\n\t\tif (handCenter.x >= this.getCenterX() && handCenter.y < this.getCenterY()) {\r\n\t\t\thitAngle = hitAngle;\r\n\t\t}\r\n\t\t//2\r\n\t\tif (handCenter.x >= this.getCenterX() && handCenter.y >= this.getCenterY()) {\r\n\t\t\thitAngle = 180 - hitAngle;\r\n\t\t}\r\n\t\t//3\r\n\t\tif (handCenter.x < this.getCenterX() && handCenter.y >= this.getCenterY()) {\r\n\t\t\thitAngle = 180 + hitAngle;\r\n\t\t}\r\n\t\t//4\r\n\t\tif (handCenter.x < this.getCenterX() && handCenter.y < this.getCenterY()) {\r\n\t\t\thitAngle = 360 - hitAngle;\r\n\t\t}\r\n\t\thitAngle = Math.round(hitAngle);\r\n\t\tif (hitAngle === 360) hitAngle = 0;\r\n\r\n\t\tthis.hitAnimateTimer = 10;\r\n\t\t//triangle\r\n\t\tconst hitShift = 3;\r\n\t\tthis.hitAnimateShiftX = Math.sin(hitAngle * Math.PI / 180) * hitShift * -1;\r\n\t\tthis.hitAnimateShiftY = Math.cos(hitAngle * Math.PI / 180) * hitShift;\r\n\t}\r\n\r\n\tanimate(): Point {\r\n\t\tlet animateX = 0;\r\n\t\tlet animateY = 0;\r\n\t\tif (this.hitAnimateTimer > 0) this.hitAnimateTimer--;\r\n\t\tswitch (this.hitAnimateTimer) {\r\n\t\t\tcase 1:\r\n\t\t\t\tanimateX = this.hitAnimateShiftX;\r\n\t\t\t\tanimateY = this.hitAnimateShiftY;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tanimateX = 2 * this.hitAnimateShiftX;\r\n\t\t\t\tanimateY = 2 * this.hitAnimateShiftY;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tanimateX = 3 * this.hitAnimateShiftX;\r\n\t\t\t\tanimateY = 3 * this.hitAnimateShiftY;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tanimateX = 4 * this.hitAnimateShiftX;\r\n\t\t\t\tanimateY = 4 * this.hitAnimateShiftY;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\tanimateX = 5 * this.hitAnimateShiftX;\r\n\t\t\t\tanimateY = 5 * this.hitAnimateShiftY;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 6:\r\n\t\t\t\tanimateX = 4 * this.hitAnimateShiftX;\r\n\t\t\t\tanimateY = 4 * this.hitAnimateShiftY;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 7:\r\n\t\t\t\tanimateX = 3 * this.hitAnimateShiftX;\r\n\t\t\t\tanimateY = 3 * this.hitAnimateShiftY;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8:\r\n\t\t\t\tanimateX = 2 * this.hitAnimateShiftX;\r\n\t\t\t\tanimateY = 2 * this.hitAnimateShiftY;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 9:\r\n\t\t\t\tanimateX = 1 * this.hitAnimateShiftX;\r\n\t\t\t\tanimateY = 1 * this.hitAnimateShiftY;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 10:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn new Point(animateX, animateY);\r\n\t}\r\n}\r\n","import Player from './Player';\r\nimport Map from './Map';\r\nimport { Mouse } from './Controller';\r\nimport WaterTerrainData from './WaterTerrainData';\r\nimport { TerrainType } from './Terrain';\r\nimport Bullet from './Bullet';\r\nimport RoundObstacle from './RoundObstacle';\r\nimport RectangleObstacle from './RectangleObstacle';\r\nimport Tree from './Tree';\r\nimport ServerClientSync from './ServerClientSync';\r\nimport PlayerPackage from './PlayerPackage';\r\nimport { PlayersTick } from './PlayersTick';\r\n\r\ntype DrawData = {\r\n\tx: number;\r\n\ty: number;\r\n\tsize: number;\r\n\twidth: number;\r\n\theight: number;\r\n\tisOnScreen: boolean;\r\n};\r\n\r\ninterface RoundObject {\r\n\tx: number;\r\n\ty: number;\r\n\tsize: number;\r\n}\r\n\r\ninterface RectObject {\r\n\tx: number;\r\n\ty: number;\r\n\twidth: number;\r\n\theight: number;\r\n}\r\n\r\nexport default class View {\r\n\tprivate canvas: HTMLCanvasElement;\r\n\tprivate helperCanvas: HTMLCanvasElement;\r\n\tprivate ctx: CanvasRenderingContext2D;\r\n\tprivate playerSVG: HTMLImageElement;\r\n\tprivate playerHandSVG: HTMLImageElement;\r\n\tprivate bushSVG: HTMLImageElement;\r\n\tprivate rockSVG: HTMLImageElement;\r\n\tprivate treeSVG: HTMLImageElement;\r\n\tprivate pistolSVG: HTMLImageElement;\r\n\tprivate cursorSVG: HTMLImageElement;\r\n\tprivate loadingProgresSVG: HTMLImageElement;\r\n\tprivate loadingCircleSVG: HTMLImageElement;\r\n\tprivate waterTrianglePNG: HTMLImageElement;\r\n\tprivate waterTerrainData: WaterTerrainData;\r\n\tprivate resolutionAdjustment: number = 1;\r\n\tprivate screenCenterX: number;\r\n\tprivate screenCenterY: number;\r\n\tprivate map: Map;\r\n\tprivate player: Player;\r\n\tprivate players: PlayerPackage[];\r\n\tprivate bullets: Bullet[];\r\n\tprivate mouse: Mouse;\r\n\r\n\tprivate myPlayerCenterX: number = 0;\r\n\tprivate myPlayerCenterY: number = 0;\r\n\r\n\tprivate startDraw = false;\r\n\tprivate lastDrawFrameTS: number;\r\n\tprivate lastDrawFrame: number;\r\n\tprivate lastDraw: any;\r\n\r\n\tprivate serverClientSync: ServerClientSync;\r\n\tprivate playersTicks: PlayersTick[] = [];\r\n\r\n\tconstructor(\r\n\t\tmap: Map,\r\n\t\tplayer: Player,\r\n\t\tplayersTicks: PlayersTick[],\r\n\t\tbullets: Bullet[],\r\n\t\tmouse: Mouse,\r\n\t\twaterTerrainData: WaterTerrainData,\r\n\t\tserverClientSync: ServerClientSync\r\n\t) {\r\n\t\tthis.serverClientSync = serverClientSync;\r\n\t\tthis.map = map;\r\n\t\tthis.player = player;\r\n\t\tthis.playersTicks = playersTicks;\r\n\t\tthis.bullets = bullets;\r\n\t\tthis.mouse = mouse;\r\n\t\tthis.canvas = <HTMLCanvasElement>document.getElementById('gameScreen');\r\n\t\tthis.helperCanvas = <HTMLCanvasElement>document.getElementById('helper');\r\n\t\tthis.ctx = this.canvas.getContext('2d');\r\n\r\n\t\tthis.playerSVG = new Image();\r\n\t\tthis.playerSVG.src = 'img/player.svg';\r\n\r\n\t\tthis.playerHandSVG = new Image();\r\n\t\tthis.playerHandSVG.src = 'img/hand.svg';\r\n\r\n\t\tthis.bushSVG = new Image();\r\n\t\tthis.bushSVG.src = 'img/bush.svg';\r\n\r\n\t\tthis.rockSVG = new Image();\r\n\t\tthis.rockSVG.src = 'img/rock.svg';\r\n\r\n\t\tthis.treeSVG = new Image();\r\n\t\tthis.treeSVG.src = 'img/tree.svg';\r\n\r\n\t\tthis.cursorSVG = new Image();\r\n\t\tthis.cursorSVG.src = 'img/cursor.svg';\r\n\r\n\t\tthis.loadingProgresSVG = new Image();\r\n\t\tthis.loadingProgresSVG.src = 'img/loadingProgres.svg';\r\n\r\n\t\tthis.loadingCircleSVG = new Image();\r\n\t\tthis.loadingCircleSVG.src = 'img/loadingCircle.svg';\r\n\r\n\t\tthis.pistolSVG = new Image();\r\n\t\tthis.pistolSVG.src = 'img/pistol.svg';\r\n\r\n\t\tthis.waterTrianglePNG = new Image();\r\n\t\tthis.waterTrianglePNG.src = 'img/waterTriangle.png';\r\n\r\n\t\tthis.waterTerrainData = waterTerrainData;\r\n\t\tthis.waterTrianglePNG.onload = () => {\r\n\t\t\tthis.saveWaterPixels(TerrainType.WaterTriangle1);\r\n\t\t\tthis.saveWaterPixels(TerrainType.WaterTriangle2);\r\n\t\t\tthis.saveWaterPixels(TerrainType.WaterTriangle3);\r\n\t\t\tthis.saveWaterPixels(TerrainType.WaterTriangle4);\r\n\t\t\t//this.waterTerrainData.write();\r\n\t\t};\r\n\t\tthis.screenResize();\r\n\t}\r\n\r\n\tscreenResize(): void {\r\n\t\tthis.canvas.width = window.innerWidth;\r\n\t\tthis.canvas.height = window.innerHeight;\r\n\t\tthis.screenCenterX = window.innerWidth / 2;\r\n\t\tthis.screenCenterY = window.innerHeight / 2;\r\n\t\tthis.changeResolutionAdjustment();\r\n\t}\r\n\r\n\tprivate changeResolutionAdjustment(): void {\r\n\t\tconst defaultWidth = 1920;\r\n\t\tconst defaultHeight = 1050;\r\n\t\tconst width = this.canvas.width / defaultWidth;\r\n\t\tconst height = this.canvas.height / defaultHeight;\r\n\t\tconst finalAdjustment = (width + height) / 2;\r\n\t\tthis.resolutionAdjustment = finalAdjustment;\r\n\t\t//console.log('finalAdjustment:', finalAdjustment);\r\n\t}\r\n\r\n\tprivate saveWaterPixels(waterType: TerrainType): void {\r\n\t\tconst ctx = this.helperCanvas.getContext('2d');\r\n\t\tthis.helperCanvas.width = this.waterTrianglePNG.width;\r\n\t\tthis.helperCanvas.height = this.waterTrianglePNG.height;\r\n\t\t//white background\r\n\t\tctx.fillStyle = '#FFFFFF';\r\n\t\tctx.fillRect(0, 0, this.helperCanvas.width, this.helperCanvas.height);\r\n\t\tlet middleImage = this.waterTrianglePNG.width / 2;\r\n\t\tctx.save();\r\n\t\tctx.translate(middleImage, middleImage);\r\n\t\tswitch (waterType) {\r\n\t\t\tcase TerrainType.WaterTriangle1:\r\n\t\t\t\tctx.rotate(0 * Math.PI / 180);\r\n\t\t\t\tbreak;\r\n\t\t\tcase TerrainType.WaterTriangle2:\r\n\t\t\t\tctx.rotate(90 * Math.PI / 180);\r\n\t\t\t\tbreak;\r\n\t\t\tcase TerrainType.WaterTriangle3:\r\n\t\t\t\tctx.rotate(180 * Math.PI / 180);\r\n\t\t\t\tbreak;\r\n\t\t\tcase TerrainType.WaterTriangle4:\r\n\t\t\t\tctx.rotate(270 * Math.PI / 180);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tctx.drawImage(this.waterTrianglePNG, -middleImage, -middleImage);\r\n\t\tctx.restore();\r\n\r\n\t\t//worker\r\n\t\tif (typeof Worker !== 'undefined') {\r\n\t\t\tconst worker = new Worker('workerFindWater.js');\r\n\t\t\tworker.onmessage = (e) => {\r\n\t\t\t\t//console.log(new Date().getTime() - e.data.time, e.data);\r\n\t\t\t\tthis.waterTerrainData.setData(e.data.type, e.data.data);\r\n\t\t\t};\r\n\t\t\tconst data = ctx.getImageData(0, 0, this.waterTrianglePNG.width, this.waterTrianglePNG.height).data;\r\n\t\t\tworker.postMessage({\r\n\t\t\t\tdata,\r\n\t\t\t\tsize: this.waterTrianglePNG.width,\r\n\t\t\t\ttype: waterType,\r\n\t\t\t\ttime: new Date().getTime()\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(\"Your browser doesn't support web workers.\");\r\n\t\t}\r\n\t}\r\n\r\n\tdraw(): void {\r\n\t\tconst ctx = this.ctx;\r\n\t\t//clear canvas\r\n\t\tctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n\t\t//water\r\n\t\tctx.fillStyle = '#69A2E0';\r\n\t\tctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n\t\t//xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\r\n\t\t//my player center\r\n\r\n\t\tif (this.playersTicks.length > 0) {\r\n\t\t\t//sort - zatim nutne pro simulaci pingu...\r\n\t\t\tthis.playersTicks.sort((a: PlayersTick, b: PlayersTick) => {\r\n\t\t\t\treturn a.t - b.t;\r\n\t\t\t});\r\n\r\n\t\t\tif (this.serverClientSync.ready()) {\r\n\t\t\t\tconst timeNowOnServer = this.serverClientSync.getServerTime();\r\n\r\n\t\t\t\tconst wantedFrameTime = timeNowOnServer - this.serverClientSync.getDrawDelay();\r\n\r\n\t\t\t\t//find last older (or same <=) frame\r\n\t\t\t\tlet olderFrame;\r\n\t\t\t\tfor (const frame of this.playersTicks) {\r\n\t\t\t\t\tif (frame.t <= wantedFrameTime) olderFrame = frame;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//find newer (or same >=) frame\r\n\t\t\t\tlet newerFrame;\r\n\t\t\t\tlet sumaNewer = 0;\r\n\t\t\t\tfor (let i = this.playersTicks.length - 1; i >= 0; i--) {\r\n\t\t\t\t\tconst frame = this.playersTicks[i];\r\n\t\t\t\t\tif (frame.t >= wantedFrameTime) {\r\n\t\t\t\t\t\tnewerFrame = frame;\r\n\t\t\t\t\t\tsumaNewer++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//count position\r\n\t\t\t\tif (olderFrame && newerFrame) {\r\n\t\t\t\t\tconst timeDistance = newerFrame.t - olderFrame.t;\r\n\t\t\t\t\tconst distanceOlderFromWantedFrameTime = wantedFrameTime - olderFrame.t;\r\n\t\t\t\t\tlet percentShift = 0;\r\n\t\t\t\t\tif (timeDistance) {\r\n\t\t\t\t\t\tpercentShift = distanceOlderFromWantedFrameTime / timeDistance;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst xDiference = Math.abs(newerFrame.p[0].x - olderFrame.p[0].x);\r\n\t\t\t\t\tconst yDiference = Math.abs(newerFrame.p[0].y - olderFrame.p[0].y);\r\n\t\t\t\t\tlet directionX = 1;\r\n\t\t\t\t\tlet directionY = 1;\r\n\t\t\t\t\tif (newerFrame.p[0].x < olderFrame.p[0].x) directionX = -1;\r\n\t\t\t\t\tif (newerFrame.p[0].y < olderFrame.p[0].y) directionY = -1;\r\n\t\t\t\t\tlet calculatedX = olderFrame.p[0].x + xDiference * percentShift * directionX;\r\n\t\t\t\t\tlet calculatedY = olderFrame.p[0].y + yDiference * percentShift * directionY;\r\n\r\n\t\t\t\t\tthis.myPlayerCenterX = calculatedX + this.player.size / 2;\r\n\t\t\t\t\tthis.myPlayerCenterY = calculatedY + this.player.size / 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\r\n\r\n\t\t//grass blocks\r\n\t\tctx.fillStyle = '#A2CB69';\r\n\t\tconst blockSize = this.map.blocks[1].x;\r\n\t\tfor (const block of this.map.blocks) {\r\n\t\t\tconst { x, y, size, isOnScreen } = this.howToDraw({ x: block.x, y: block.y, size: blockSize });\r\n\t\t\tif (isOnScreen) {\r\n\t\t\t\tctx.fillRect(x, y, size, size);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//water terrain blocks\r\n\t\tctx.fillStyle = '#69A2E0';\r\n\t\tfor (const terrain of this.map.terrain) {\r\n\t\t\tconst { x, y, width, height, isOnScreen } = this.howToDraw({\r\n\t\t\t\tx: terrain.x,\r\n\t\t\t\ty: terrain.y,\r\n\t\t\t\twidth: terrain.width,\r\n\t\t\t\theight: terrain.height\r\n\t\t\t});\r\n\t\t\tif (isOnScreen) {\r\n\t\t\t\tif (terrain.type === TerrainType.Water) {\r\n\t\t\t\t\tctx.fillRect(x, y, width, height);\r\n\t\t\t\t}\r\n\t\t\t\telse if (terrain.type === TerrainType.WaterTriangle1) {\r\n\t\t\t\t\tctx.drawImage(this.waterTrianglePNG, x, y, width, height);\r\n\t\t\t\t}\r\n\t\t\t\telse if (\r\n\t\t\t\t\tterrain.type === TerrainType.WaterTriangle2 ||\r\n\t\t\t\t\tterrain.type === TerrainType.WaterTriangle3 ||\r\n\t\t\t\t\tterrain.type === TerrainType.WaterTriangle4\r\n\t\t\t\t) {\r\n\t\t\t\t\tlet middleImage = width / 2;\r\n\t\t\t\t\tthis.ctx.save();\r\n\t\t\t\t\tthis.ctx.translate(x + middleImage, y + middleImage);\r\n\t\t\t\t\tthis.ctx.rotate(terrain.angle * Math.PI / 180);\r\n\t\t\t\t\tthis.ctx.drawImage(this.waterTrianglePNG, -middleImage, -middleImage, width, height);\r\n\t\t\t\t\tthis.ctx.restore();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//mapGrid\r\n\t\tctx.fillStyle = 'gray';\r\n\t\tfor (const block of this.map.blocks) {\r\n\t\t\t//top\r\n\t\t\tif (block.y === 0) {\r\n\t\t\t\tconst { x, y, size, isOnScreen } = this.howToDraw({\r\n\t\t\t\t\tx: block.x,\r\n\t\t\t\t\ty: block.y,\r\n\t\t\t\t\tsize: blockSize\r\n\t\t\t\t});\r\n\t\t\t\tif (isOnScreen) ctx.fillRect(x, y, size, 1);\r\n\t\t\t}\r\n\t\t\t//bottom\r\n\t\t\t{\r\n\t\t\t\tconst { x, y, size, isOnScreen } = this.howToDraw({\r\n\t\t\t\t\tx: block.x,\r\n\t\t\t\t\ty: block.y + blockSize,\r\n\t\t\t\t\tsize: blockSize\r\n\t\t\t\t});\r\n\t\t\t\tif (isOnScreen) ctx.fillRect(x, y, size, 1);\r\n\t\t\t}\r\n\t\t\t//left\r\n\t\t\tif (block.x === 0) {\r\n\t\t\t\tconst { x, y, size, isOnScreen } = this.howToDraw({\r\n\t\t\t\t\tx: block.x,\r\n\t\t\t\t\ty: block.y,\r\n\t\t\t\t\tsize: blockSize\r\n\t\t\t\t});\r\n\t\t\t\tif (isOnScreen) ctx.fillRect(x, y, 1, size);\r\n\t\t\t}\r\n\t\t\t//right\r\n\t\t\t{\r\n\t\t\t\tconst { x, y, size, isOnScreen } = this.howToDraw({\r\n\t\t\t\t\tx: block.x + blockSize,\r\n\t\t\t\t\ty: block.y,\r\n\t\t\t\t\tsize: blockSize\r\n\t\t\t\t});\r\n\t\t\t\tif (isOnScreen) ctx.fillRect(x, y, 1, size);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//rocks\r\n\t\tfor (const rock of this.map.rocks) {\r\n\t\t\tif (rock.isActive()) {\r\n\t\t\t\tconst { x, y, size, isOnScreen } = this.howToDraw(rock);\r\n\t\t\t\tif (isOnScreen) {\r\n\t\t\t\t\tctx.save();\r\n\t\t\t\t\tctx.globalAlpha = rock.getOpacity();\r\n\t\t\t\t\tctx.drawImage(this.rockSVG, x, y, size, size);\r\n\t\t\t\t\tctx.restore();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//walls\r\n\t\tctx.fillStyle = 'black';\r\n\t\tfor (const rectangleObstacle of this.map.rectangleObstacles) {\r\n\t\t\tif (rectangleObstacle.isActive()) {\r\n\t\t\t\tconst { x, y, width, height, isOnScreen } = this.howToDraw(rectangleObstacle);\r\n\t\t\t\tif (isOnScreen) {\r\n\t\t\t\t\tctx.save();\r\n\t\t\t\t\tctx.globalAlpha = rectangleObstacle.getOpacity();\r\n\t\t\t\t\tctx.fillRect(x, y, width, height);\r\n\t\t\t\t\tctx.restore();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//pistol\r\n\t\t/*\r\n\t\t{\r\n\t\t\tconst { x, y, size } = this.howToDraw({\r\n\t\t\t\tx: this.player.gun.getX(),\r\n\t\t\t\ty: this.player.gun.getY(),\r\n\t\t\t\tsize: this.player.gun.size\r\n\t\t\t});\r\n\t\t\tconst middleImage = size / 2;\r\n\t\t\tthis.ctx.save();\r\n\t\t\tthis.ctx.translate(x + middleImage, y + middleImage);\r\n\t\t\tthis.ctx.rotate(this.player.gun.getAngle() * Math.PI / 180);\r\n\t\t\tctx.drawImage(this.pistolSVG, -middleImage, -middleImage, size, size);\r\n\t\t\tthis.ctx.restore();\r\n\t\t}\r\n\t\t*/\r\n\r\n\t\t//player\r\n\t\t{\r\n\t\t\t//1. urcime si cas pred nejakou dobou a budeme hledat snimky hry pred timto a za timto bodem\r\n\t\t\t//2. nemuzeme se spolehnout jen na cas klienta a musime nejperve synchronizovat\r\n\t\t\t//3. dopocitame priblizny stav mezi snimky\r\n\t\t\t//4. vykreslime\r\n\r\n\t\t\tif (this.playersTicks.length > 0) {\r\n\t\t\t\t//const myPlayer = this.players[0];\r\n\t\t\t\t//const myPlayerTicks = myPlayer.ticks;\r\n\r\n\t\t\t\t//sort - zatim nutne pro simulaci pingu...\r\n\t\t\t\tthis.playersTicks.sort((a: PlayersTick, b: PlayersTick) => {\r\n\t\t\t\t\treturn a.t - b.t;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (this.serverClientSync.ready()) {\r\n\t\t\t\t\tconst timeNowOnServer = this.serverClientSync.getServerTime();\r\n\t\t\t\t\tconst wantedFrameTime = timeNowOnServer - this.serverClientSync.getDrawDelay();\r\n\r\n\t\t\t\t\t//find last older (or same <=) frame\r\n\t\t\t\t\tlet olderFrame;\r\n\t\t\t\t\tfor (const frame of this.playersTicks) {\r\n\t\t\t\t\t\tif (frame.t <= wantedFrameTime) olderFrame = frame;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//find newer (or same >=) frame\r\n\t\t\t\t\tlet newerFrame;\r\n\t\t\t\t\tlet sumaNewer = 0;\r\n\t\t\t\t\tfor (let i = this.playersTicks.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\tconst frame = this.playersTicks[i];\r\n\t\t\t\t\t\tif (frame.t >= wantedFrameTime) {\r\n\t\t\t\t\t\t\tnewerFrame = frame;\r\n\t\t\t\t\t\t\tsumaNewer++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//change delay\r\n\t\t\t\t\tif (sumaNewer > 3) this.serverClientSync.changeDrawDelay(-0.1);\r\n\t\t\t\t\tif (sumaNewer < 3) this.serverClientSync.changeDrawDelay(0.1);\r\n\r\n\t\t\t\t\t//err\r\n\t\t\t\t\tctx.fillStyle = 'white';\r\n\t\t\t\t\tif (!olderFrame) {\r\n\t\t\t\t\t\tconsole.log('olderFrame is missing');\r\n\t\t\t\t\t\tctx.fillText('olderframe missing', 20, 300);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!newerFrame) {\r\n\t\t\t\t\t\tconsole.log('newerFrame is missing');\r\n\t\t\t\t\t\tctx.fillText('newerframe missing', 20, 350);\r\n\t\t\t\t\t\tthis.serverClientSync.reset();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//count position\r\n\t\t\t\t\tif (olderFrame && newerFrame) {\r\n\t\t\t\t\t\tconst timeDistance = newerFrame.t - olderFrame.t;\r\n\t\t\t\t\t\tconst distanceOlderFromWantedFrameTime = wantedFrameTime - olderFrame.t;\r\n\t\t\t\t\t\tlet percentShift = 0;\r\n\t\t\t\t\t\tif (timeDistance) {\r\n\t\t\t\t\t\t\tpercentShift = distanceOlderFromWantedFrameTime / timeDistance;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//all players from server\r\n\t\t\t\t\t\tfor (let i = 0; i < newerFrame.p.length; i++) {\r\n\t\t\t\t\t\t\tif (newerFrame.p[i] && olderFrame.p[i]) {\r\n\t\t\t\t\t\t\t\tconst newer = newerFrame.p[i];\r\n\t\t\t\t\t\t\t\tconst older = olderFrame.p[i];\r\n\r\n\t\t\t\t\t\t\t\tlet xDiference = Math.abs(newer.x - older.x);\r\n\t\t\t\t\t\t\t\tlet yDiference = Math.abs(newer.y - older.y);\r\n\t\t\t\t\t\t\t\tlet directionX = 1;\r\n\t\t\t\t\t\t\t\tlet directionY = 1;\r\n\t\t\t\t\t\t\t\tif (newer.x < older.x) directionX = -1;\r\n\t\t\t\t\t\t\t\tif (newer.y < older.y) directionY = -1;\r\n\t\t\t\t\t\t\t\tlet calculatedX = older.x + xDiference * percentShift * directionX;\r\n\t\t\t\t\t\t\t\tlet calculatedY = older.y + yDiference * percentShift * directionY;\r\n\r\n\t\t\t\t\t\t\t\tconst { x, y, size } = this.howToDraw({\r\n\t\t\t\t\t\t\t\t\tx: calculatedX,\r\n\t\t\t\t\t\t\t\t\ty: calculatedY,\r\n\t\t\t\t\t\t\t\t\tsize: this.player.size\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\tctx.drawImage(this.playerSVG, x, y, size, size);\r\n\r\n\t\t\t\t\t\t\t\t//player collision points\r\n\t\t\t\t\t\t\t\tctx.fillStyle = 'blue';\r\n\t\t\t\t\t\t\t\tfor (const point of this.player.collisionPoints) {\r\n\t\t\t\t\t\t\t\t\tconst { x, y, size } = this.howToDraw({\r\n\t\t\t\t\t\t\t\t\t\tx: calculatedX + this.player.size / 2 + point.x,\r\n\t\t\t\t\t\t\t\t\t\ty: calculatedY + this.player.size / 2 + point.y,\r\n\t\t\t\t\t\t\t\t\t\tsize: 1\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tctx.fillRect(x, y, size, size);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t//player hands\r\n\t\t\t\t\t\t\t\tfor (let i = 0; i < 2; i++) {\r\n\t\t\t\t\t\t\t\t\txDiference = Math.abs(newer.h[i].x - older.h[i].x);\r\n\t\t\t\t\t\t\t\t\tyDiference = Math.abs(newer.h[i].y - older.h[i].y);\r\n\t\t\t\t\t\t\t\t\tdirectionX = 1;\r\n\t\t\t\t\t\t\t\t\tdirectionY = 1;\r\n\t\t\t\t\t\t\t\t\tif (newer.h[i].x < older.h[i].x) directionX = -1;\r\n\t\t\t\t\t\t\t\t\tif (newer.h[i].y < older.h[i].y) directionY = -1;\r\n\t\t\t\t\t\t\t\t\tcalculatedX = older.h[i].x + xDiference * percentShift * directionX;\r\n\t\t\t\t\t\t\t\t\tcalculatedY = older.h[i].y + yDiference * percentShift * directionY;\r\n\r\n\t\t\t\t\t\t\t\t\tconst { x, y, size } = this.howToDraw({\r\n\t\t\t\t\t\t\t\t\t\tx: calculatedX,\r\n\t\t\t\t\t\t\t\t\t\ty: calculatedY,\r\n\t\t\t\t\t\t\t\t\t\tsize: this.player.hands[i].size\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tctx.drawImage(this.playerHandSVG, x, y, size, size);\r\n\r\n\t\t\t\t\t\t\t\t\t//hand collisionPoints\r\n\t\t\t\t\t\t\t\t\tfor (const point of this.player.hands[0].collisionPoints) {\r\n\t\t\t\t\t\t\t\t\t\tconst { x, y, size } = this.howToDraw({\r\n\t\t\t\t\t\t\t\t\t\t\tx: calculatedX + this.player.hands[0].size / 2 + point.x,\r\n\t\t\t\t\t\t\t\t\t\t\ty: calculatedY + this.player.hands[0].size / 2 + point.y,\r\n\t\t\t\t\t\t\t\t\t\t\tsize: 1\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\tctx.fillRect(x, y, size, size);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//bushes\r\n\t\tfor (const bush of this.map.bushes) {\r\n\t\t\tif (bush.isActive()) {\r\n\t\t\t\tconst { x, y, size, isOnScreen } = this.howToDraw(bush);\r\n\t\t\t\tif (isOnScreen) {\r\n\t\t\t\t\tctx.save();\r\n\t\t\t\t\tctx.globalAlpha = bush.getOpacity();\r\n\t\t\t\t\tctx.drawImage(this.bushSVG, x, y, size, size);\r\n\t\t\t\t\tctx.restore();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//trees\r\n\t\tfor (const tree of this.map.trees) {\r\n\t\t\tif (tree.isActive()) {\r\n\t\t\t\tconst { x, y, size, isOnScreen } = this.howToDraw(tree);\r\n\t\t\t\tif (isOnScreen) {\r\n\t\t\t\t\tctx.save();\r\n\t\t\t\t\tctx.globalAlpha = tree.getOpacity();\r\n\t\t\t\t\tctx.drawImage(this.treeSVG, x, y, size, size);\r\n\t\t\t\t\tctx.restore();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//bullets\r\n\t\tctx.fillStyle = 'red';\r\n\t\tfor (const bullet of this.bullets) {\r\n\t\t\tconst { x, y, size, isOnScreen } = this.howToDraw({\r\n\t\t\t\tx: bullet.getX(),\r\n\t\t\t\ty: bullet.getY(),\r\n\t\t\t\tsize: bullet.size\r\n\t\t\t});\r\n\t\t\tif (isOnScreen) ctx.fillRect(x, y, size, size);\r\n\t\t}\r\n\r\n\t\t//loading\r\n\t\tconst { time, max } = this.player.loading();\r\n\t\tif (time < max) {\r\n\t\t\tconst maxViewLoadingSteps = 360;\r\n\t\t\tconst passedViewLoadingSteps = maxViewLoadingSteps / (max / time);\r\n\t\t\tconst loadingSVGSize = 100 * this.resolutionAdjustment;\r\n\t\t\tconst middleImage = loadingSVGSize / 2;\r\n\t\t\tconst x = this.screenCenterX - middleImage;\r\n\t\t\tconst y = this.screenCenterY - middleImage - 150 * this.resolutionAdjustment;\r\n\t\t\tconst timeToEnd = Math.round((max - time) / 60 * 10) / 10;\r\n\t\t\t//background\r\n\t\t\tctx.save();\r\n\t\t\tctx.globalAlpha = 0.2;\r\n\t\t\tctx.drawImage(this.loadingCircleSVG, x, y, loadingSVGSize, loadingSVGSize);\r\n\r\n\t\t\tctx.restore();\r\n\t\t\tfor (let i = 0; i < passedViewLoadingSteps; i += 10) {\r\n\t\t\t\tthis.ctx.save();\r\n\t\t\t\tthis.ctx.translate(x + middleImage, y + middleImage);\r\n\t\t\t\tthis.ctx.rotate(i * Math.PI / 180);\r\n\t\t\t\tctx.drawImage(this.loadingProgresSVG, -middleImage, -middleImage, loadingSVGSize, loadingSVGSize);\r\n\t\t\t\tthis.ctx.restore();\r\n\t\t\t}\r\n\t\t\tconst fontSize = Math.floor(31 * this.resolutionAdjustment);\r\n\t\t\tctx.font = fontSize + 'px Arial';\r\n\t\t\tctx.fillStyle = 'white';\r\n\t\t\tctx.fillText(timeToEnd.toString(), x + 28 * this.resolutionAdjustment, y + 59 * this.resolutionAdjustment);\r\n\t\t}\r\n\r\n\t\t//info\r\n\t\tctx.font = '20px Arial';\r\n\t\tctx.fillStyle = 'white';\r\n\t\tconst x = 15;\r\n\t\tlet row = 30;\r\n\t\tlet rowMultiple = 0;\r\n\t\tctx.fillText('snapshots: ' + this.playersTicks.length, x, row * ++rowMultiple);\r\n\t\tctx.fillText('ping: ' + this.serverClientSync.getPing(), x, row * ++rowMultiple);\r\n\t\tctx.fillText('timeDiference: ' + this.serverClientSync.getTimeDiference(), x, row * ++rowMultiple);\r\n\t\tctx.fillText('drawDelay: ' + this.serverClientSync.getDrawDelay(), x, row * ++rowMultiple);\r\n\r\n\t\t//cursor\r\n\t\tconst mouseSize = 25;\r\n\t\tctx.drawImage(\r\n\t\t\tthis.cursorSVG,\r\n\t\t\tthis.mouse.x - mouseSize * this.resolutionAdjustment / 2,\r\n\t\t\tthis.mouse.y - mouseSize * this.resolutionAdjustment / 2,\r\n\t\t\tmouseSize * this.resolutionAdjustment,\r\n\t\t\tmouseSize * this.resolutionAdjustment\r\n\t\t);\r\n\t}\r\n\r\n\tprivate howToDraw(gameObject: RoundObject | RectObject | RectangleObstacle | RoundObstacle): DrawData {\r\n\t\t//size\r\n\t\tlet size = 0;\r\n\t\tlet width = 0;\r\n\t\tlet height = 0;\r\n\t\t//round or square\r\n\t\tif ((<RoundObject>gameObject).size) {\r\n\t\t\tsize = (<RoundObject>gameObject).size * this.resolutionAdjustment;\r\n\t\t\twidth = size;\r\n\t\t\theight = size;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//rect\r\n\t\t\twidth = (<RectObject>gameObject).width * this.resolutionAdjustment;\r\n\t\t\theight = (<RectObject>gameObject).height * this.resolutionAdjustment;\r\n\t\t}\r\n\t\t//animate shift\r\n\t\tlet animateShiftX = 0;\r\n\t\tlet animateShiftY = 0;\r\n\t\tif (gameObject instanceof RoundObstacle) {\r\n\t\t\tconst animateShift = gameObject.animate();\r\n\t\t\tanimateShiftX = animateShift.x;\r\n\t\t\tanimateShiftY = animateShift.y;\r\n\t\t}\r\n\t\t//positions on screen\r\n\t\tconst x =\r\n\t\t\tthis.screenCenterX + (gameObject.x + animateShiftX - this.myPlayerCenterX) * this.resolutionAdjustment;\r\n\t\tconst y =\r\n\t\t\tthis.screenCenterY + (gameObject.y + animateShiftY - this.myPlayerCenterY) * this.resolutionAdjustment;\r\n\t\t//Is is on the screen?\r\n\t\tlet isOnScreen = true;\r\n\t\tif (x > this.canvas.width || x < -width || y > this.canvas.height || y < -height) {\r\n\t\t\tisOnScreen = false;\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tx,\r\n\t\t\ty,\r\n\t\t\tsize,\r\n\t\t\twidth,\r\n\t\t\theight,\r\n\t\t\tisOnScreen\r\n\t\t};\r\n\t}\r\n}\r\n","import Map from './Map';\r\nimport Point from './Point';\r\n\r\nexport default class Hand {\r\n\treadonly size: number = 40;\r\n\tprivate x: number = 0;\r\n\tprivate y: number = 0;\r\n\tprivate radius: number = this.size / 2;\r\n\tprivate playerRadius: number;\r\n\tprivate shiftAngle: number = 40;\r\n\tprivate hitTimer: number = 0;\r\n\tprivate inAction: boolean = false;\r\n\treadonly collisionPoints: Point[] = [];\r\n\r\n\tconstructor(playerSize: number) {\r\n\t\tthis.playerRadius = playerSize / 2;\r\n\t\tthis.calculateCollisionsPoints();\r\n\t}\r\n\r\n\tprivate calculateCollisionsPoints(): void {\r\n\t\tfor (let i = 0; i < 360; i += 20) {\r\n\t\t\t//triangle\r\n\t\t\tconst x = Math.sin(i * Math.PI / 180) * this.radius;\r\n\t\t\tconst y = Math.cos(i * Math.PI / 180) * this.radius;\r\n\t\t\tthis.collisionPoints.push(new Point(x, y));\r\n\t\t}\r\n\t}\r\n\r\n\tready(): boolean {\r\n\t\treturn this.hitTimer === 0;\r\n\t}\r\n\r\n\tgetCenterX(): number {\r\n\t\treturn this.x + this.radius;\r\n\t}\r\n\r\n\tgetCenterY(): number {\r\n\t\treturn this.y + this.radius;\r\n\t}\r\n\r\n\tgetX(): number {\r\n\t\treturn this.x;\r\n\t}\r\n\r\n\tgetY(): number {\r\n\t\treturn this.y;\r\n\t}\r\n\r\n\tmoveHand(\r\n\t\tplayerAngle: number,\r\n\t\tdirection: number,\r\n\t\tplayerSize: number,\r\n\t\tplayerX: number,\r\n\t\tplayerY: number,\r\n\t\tmap: Map\r\n\t): void {\r\n\t\tlet shiftAngle = this.shiftAngle;\r\n\t\tlet playerRadius = this.playerRadius;\r\n\t\t//hit move\r\n\t\tif (this.hitTimer > 0) {\r\n\t\t\tswitch (this.hitTimer) {\r\n\t\t\t\tcase 20:\r\n\t\t\t\t\tshiftAngle -= 4;\r\n\t\t\t\t\tplayerRadius += 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 19:\r\n\t\t\t\t\tshiftAngle -= 8;\r\n\t\t\t\t\tplayerRadius += 4;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 18:\r\n\t\t\t\t\tshiftAngle -= 12;\r\n\t\t\t\t\tplayerRadius += 6;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 17:\r\n\t\t\t\t\tshiftAngle -= 16;\r\n\t\t\t\t\tplayerRadius += 8;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 16:\r\n\t\t\t\t\tshiftAngle -= 20;\r\n\t\t\t\t\tplayerRadius += 10;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 15:\r\n\t\t\t\t\tshiftAngle -= 24;\r\n\t\t\t\t\tplayerRadius += 12;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 14:\r\n\t\t\t\t\tshiftAngle -= 28;\r\n\t\t\t\t\tplayerRadius += 14;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 13:\r\n\t\t\t\t\tshiftAngle -= 32;\r\n\t\t\t\t\tplayerRadius += 16;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 12:\r\n\t\t\t\t\tshiftAngle -= 36;\r\n\t\t\t\t\tplayerRadius += 18;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 11:\r\n\t\t\t\t\tshiftAngle -= 40;\r\n\t\t\t\t\tplayerRadius += 20;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 10:\r\n\t\t\t\t\tshiftAngle -= 36;\r\n\t\t\t\t\tplayerRadius += 18;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 9:\r\n\t\t\t\t\tshiftAngle -= 32;\r\n\t\t\t\t\tplayerRadius += 16;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 8:\r\n\t\t\t\t\tshiftAngle -= 28;\r\n\t\t\t\t\tplayerRadius += 14;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 7:\r\n\t\t\t\t\tshiftAngle -= 24;\r\n\t\t\t\t\tplayerRadius += 12;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 6:\r\n\t\t\t\t\tshiftAngle -= 20;\r\n\t\t\t\t\tplayerRadius += 10;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 5:\r\n\t\t\t\t\tshiftAngle -= 16;\r\n\t\t\t\t\tplayerRadius += 8;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\tshiftAngle -= 12;\r\n\t\t\t\t\tplayerRadius += 6;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tshiftAngle -= 8;\r\n\t\t\t\t\tplayerRadius += 4;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tshiftAngle -= 4;\r\n\t\t\t\t\tplayerRadius += 2;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tshiftAngle -= 0;\r\n\t\t\t\t\tplayerRadius += 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t//hit?\r\n\t\t\tif (this.inAction) {\r\n\t\t\t\tfor (let i = 0; i < map.bushes.length; i++) {\r\n\t\t\t\t\tconst obstacle = map.bushes[i];\r\n\t\t\t\t\tif (obstacle.isActive()) {\r\n\t\t\t\t\t\tconst obstacleAndHandRadius = obstacle.radius + this.radius;\r\n\t\t\t\t\t\tconst x = this.getCenterX() - obstacle.getCenterX();\r\n\t\t\t\t\t\tconst y = this.getCenterY() - obstacle.getCenterY();\r\n\t\t\t\t\t\tconst distance = Math.sqrt(x * x + y * y);\r\n\t\t\t\t\t\tif (distance < obstacleAndHandRadius) {\r\n\t\t\t\t\t\t\tobstacle.acceptHit(new Point(this.getCenterX(), this.getCenterY()));\r\n\t\t\t\t\t\t\tthis.inAction = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.inAction) {\r\n\t\t\t\tfor (let i = 0; i < map.rocks.length; i++) {\r\n\t\t\t\t\tconst obstacle = map.rocks[i];\r\n\t\t\t\t\tif (obstacle.isActive()) {\r\n\t\t\t\t\t\tconst obstacleAndHandRadius = obstacle.radius + this.radius;\r\n\t\t\t\t\t\tconst x = this.getCenterX() - obstacle.getCenterX();\r\n\t\t\t\t\t\tconst y = this.getCenterY() - obstacle.getCenterY();\r\n\t\t\t\t\t\tconst distance = Math.sqrt(x * x + y * y);\r\n\t\t\t\t\t\tif (distance < obstacleAndHandRadius) {\r\n\t\t\t\t\t\t\tobstacle.acceptHit(new Point(this.getCenterX(), this.getCenterY()));\r\n\t\t\t\t\t\t\tthis.inAction = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.inAction) {\r\n\t\t\t\tfor (let i = 0; i < map.trees.length; i++) {\r\n\t\t\t\t\tconst obstacle = map.trees[i];\r\n\t\t\t\t\tif (obstacle.isActive()) {\r\n\t\t\t\t\t\tconst obstacleAndHandRadius = obstacle.radius + this.radius;\r\n\t\t\t\t\t\tconst x = this.getCenterX() - obstacle.getCenterX();\r\n\t\t\t\t\t\tconst y = this.getCenterY() - obstacle.getCenterY();\r\n\t\t\t\t\t\tconst distance = Math.sqrt(x * x + y * y);\r\n\t\t\t\t\t\tif (distance < obstacleAndHandRadius) {\r\n\t\t\t\t\t\t\tobstacle.acceptHit(new Point(this.getCenterX(), this.getCenterY()));\r\n\t\t\t\t\t\t\tthis.inAction = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//walls\r\n\t\t\tif (this.inAction) {\r\n\t\t\t\tfor (let i = 0; i < map.rectangleObstacles.length; i++) {\r\n\t\t\t\t\tconst obstacle = map.rectangleObstacles[i];\r\n\t\t\t\t\tif (obstacle.isActive()) {\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tthis.x <= obstacle.x + obstacle.width &&\r\n\t\t\t\t\t\t\tthis.x + this.size >= obstacle.x &&\r\n\t\t\t\t\t\t\tthis.y <= obstacle.y + obstacle.height &&\r\n\t\t\t\t\t\t\tthis.y + this.size >= obstacle.y\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tfor (let j = 0; j < this.collisionPoints.length; j++) {\r\n\t\t\t\t\t\t\t\tconst point = this.collisionPoints[j];\r\n\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\tobstacle.isPointIn(\r\n\t\t\t\t\t\t\t\t\t\tnew Point(this.getCenterX() + point.x, this.getCenterY() + point.y)\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\tobstacle.acceptHit();\r\n\t\t\t\t\t\t\t\t\tthis.inAction = false;\r\n\t\t\t\t\t\t\t\t\tconsole.log('hit');\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.hitTimer--;\r\n\t\t}\r\n\r\n\t\tlet playerAngleForHand = playerAngle + shiftAngle * direction;\r\n\t\t//0 - 359...\r\n\t\tif (playerAngleForHand < 0) playerAngleForHand = 359 + playerAngleForHand;\r\n\t\tif (playerAngleForHand > 359) playerAngleForHand = playerAngleForHand - 359;\r\n\t\t//triangle\r\n\t\tconst x = Math.sin(playerAngleForHand * Math.PI / 180) * playerRadius;\r\n\t\tconst y = Math.cos(playerAngleForHand * Math.PI / 180) * playerRadius;\r\n\t\t//set final position from center\r\n\t\tthis.x = playerX + playerSize / 2 + x - this.size / 2;\r\n\t\tthis.y = playerY + playerSize / 2 - y - this.size / 2;\r\n\t}\r\n\r\n\thit(): void {\r\n\t\tthis.hitTimer = 20;\r\n\t\tthis.inAction = true;\r\n\t}\r\n}\r\n","export default class Gun {\r\n    readonly size: number = 70;\r\n    readonly range: number;\r\n\treadonly playerRadius: number;\r\n\tprivate x: number = 0;\r\n\tprivate y: number = 0;\r\n\tprivate angle: number = 0;\r\n\r\n\tconstructor(playerSize: number, range: number) {\r\n        this.playerRadius = playerSize / 2;\r\n        this.range = range;\r\n\t}\r\n\r\n\tmove(playerAngle: number, playerCenterX: number, playerCenterY: number): void {\r\n\t\tthis.angle = playerAngle;\r\n\t\t//triangle\r\n\t\tconst x = Math.sin(this.angle * Math.PI / 180) * this.playerRadius;\r\n\t\tconst y = Math.cos(this.angle * Math.PI / 180) * this.playerRadius;\r\n\t\t//set final position from center\r\n\t\tthis.x = playerCenterX + x - this.size / 2;\r\n\t\tthis.y = playerCenterY - y - this.size / 2;\r\n\t}\r\n\r\n\tgetX(): number {\r\n\t\treturn this.x;\r\n\t}\r\n\r\n\tgetY(): number {\r\n\t\treturn this.y;\r\n\t}\r\n\r\n\tgetAngle(): number {\r\n\t\treturn this.angle;\r\n\t}\r\n\r\n\tready(): boolean {\r\n\t\treturn true;\r\n\t}\r\n}\r\n","import RoundObstacle from './RoundObstacle';\r\n\r\nexport default class Tree extends RoundObstacle {\r\n\treadonly treeTrankRadius: number;\r\n\r\n\tconstructor(id: number, x: number, y: number) {\r\n\t\tconst size = 200;\r\n\t\tsuper(id, x, y, size);\r\n\t\tthis.treeTrankRadius = 35;\r\n\t\tthis.opacity = 0.9;\r\n\t}\r\n}\r\n","import Hand from './Hand';\r\nimport Gun from './Gun';\r\nimport Map from './Map';\r\nimport Point from './Point';\r\nimport Tree from './Tree';\r\nimport RoundObstacle from './RoundObstacle';\r\nimport RectangleObstacle from './RectangleObstacle';\r\nimport { TerrainType } from './Terrain';\r\n\r\ntype Loading = {\r\n\ttime: number;\r\n\tmax: number;\r\n};\r\n\r\nexport default class Player {\r\n\treadonly size: number = 80;\r\n\treadonly radius: number = this.size / 2;\r\n\treadonly speed: number = 6;\r\n\tprivate x: number;\r\n\tprivate y: number;\r\n\tprivate angle: number = 0;\r\n\tprivate map: Map;\r\n\thands: Hand[] = [];\r\n\tgun: Gun;\r\n\tprivate canvas: HTMLCanvasElement;\r\n\treadonly collisionPoints: Point[] = [];\r\n\tprivate slowAroundObstacle: boolean = false;\r\n\tprivate loadingTime: number = 0;\r\n\tprivate loadingMaxTime: number = 3 * 60;\r\n\r\n\tconstructor(map: Map) {\r\n\t\tthis.x = 550;\r\n\t\tthis.y = 700;\r\n\t\tthis.canvas = <HTMLCanvasElement>document.getElementById('gameScreen');\r\n\t\tthis.hands.push(new Hand(this.size));\r\n\t\tthis.hands.push(new Hand(this.size));\r\n\t\tthis.gun = new Gun(this.size, 20);\r\n\t\tthis.map = map;\r\n\t\tthis.calculateCollisionsPoints();\r\n\t}\r\n\r\n\tprivate calculateCollisionsPoints(): void {\r\n\t\tfor (let i = 0; i < 360; i += 10) {\r\n\t\t\t//triangle\r\n\t\t\tconst x = Math.sin(i * Math.PI / 180) * this.radius;\r\n\t\t\tconst y = Math.cos(i * Math.PI / 180) * this.radius;\r\n\t\t\tthis.collisionPoints.push(new Point(x, y));\r\n\t\t}\r\n\t}\r\n\r\n\tloading(): Loading {\r\n\t\tif (this.loadingTime < this.loadingMaxTime) this.loadingTime++;\r\n\t\treturn { time: this.loadingTime, max: this.loadingMaxTime };\r\n\t}\r\n\r\n\tgetCenterX(): number {\r\n\t\treturn this.x + this.radius;\r\n\t}\r\n\r\n\tgetCenterY(): number {\r\n\t\treturn this.y + this.radius;\r\n\t}\r\n\r\n\tgetX(): number {\r\n\t\treturn this.x;\r\n\t}\r\n\r\n\tgetY(): number {\r\n\t\treturn this.y;\r\n\t}\r\n\r\n\tgetAngle(): number {\r\n\t\treturn this.angle;\r\n\t}\r\n\r\n\tsetAngle(angle: number): void {\r\n\t\tthis.angle = angle;\r\n\t}\r\n\r\n\thit(): void {\r\n\t\tif (this.hands[0].ready() && this.hands[1].ready()) {\r\n\t\t\tlet random = Math.round(Math.random());\r\n\t\t\tthis.hands[random].hit();\r\n\t\t}\r\n\t}\r\n\r\n\tplayerMove(up: boolean, left: boolean, down: boolean, right: boolean, mouseX: number, mouseY: number): void {\r\n\t\tif (up || down || left || right) {\r\n\t\t\t//standart shift (speed)\r\n\t\t\tlet shift = this.speed;\r\n\r\n\t\t\t//diagonal shift and slow around obstacle\r\n\t\t\tif ((up && left) || (up && right) || (down && left) || (down && right) || this.slowAroundObstacle) {\r\n\t\t\t\tshift = shift / Math.sqrt(2);\r\n\t\t\t\tthis.slowAroundObstacle = false;\r\n\t\t\t}\r\n\r\n\t\t\t//shift in water\r\n\t\t\tfor (let i = 0; i < this.map.terrain.length; i++) {\r\n\t\t\t\t//terrain block is under my center\r\n\t\t\t\tif (\r\n\t\t\t\t\tthis.getCenterX() < this.map.terrain[i].x + this.map.terrain[i].width &&\r\n\t\t\t\t\tthis.getCenterX() >= this.map.terrain[i].x &&\r\n\t\t\t\t\tthis.getCenterY() < this.map.terrain[i].y + this.map.terrain[i].height &&\r\n\t\t\t\t\tthis.getCenterY() >= this.map.terrain[i].y\r\n\t\t\t\t) {\r\n\t\t\t\t\tif (this.map.terrain[i].type === TerrainType.Water) {\r\n\t\t\t\t\t\tshift = shift / 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tthis.map.terrain[i].type === TerrainType.WaterTriangle1 ||\r\n\t\t\t\t\t\tthis.map.terrain[i].type === TerrainType.WaterTriangle2 ||\r\n\t\t\t\t\t\tthis.map.terrain[i].type === TerrainType.WaterTriangle3 ||\r\n\t\t\t\t\t\tthis.map.terrain[i].type === TerrainType.WaterTriangle4\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\t//Math.floor!!!\r\n\t\t\t\t\t\tconst myXPositionOnTerrain = Math.floor(this.getCenterX() - this.map.terrain[i].x);\r\n\t\t\t\t\t\tconst myYPositionOnTerrain = Math.floor(this.getCenterY() - this.map.terrain[i].y);\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tthis.map.waterTerrainData.includeWater(\r\n\t\t\t\t\t\t\t\tthis.map.terrain[i].type,\r\n\t\t\t\t\t\t\t\tmyXPositionOnTerrain,\r\n\t\t\t\t\t\t\t\tmyYPositionOnTerrain\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tshift = shift / 2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//player shift\r\n\t\t\tlet shiftX = 0;\r\n\t\t\tlet shiftY = 0;\r\n\t\t\tif (up) shiftY += -shift;\r\n\t\t\tif (down) shiftY += shift;\r\n\t\t\tif (left) shiftX += -shift;\r\n\t\t\tif (right) shiftX += shift;\r\n\t\t\t//i want to go this way...\r\n\t\t\tthis.shiftOnPosition(shiftX, shiftY);\r\n\t\t}\r\n\t\tthis.rotatePlayer(mouseX, mouseY);\r\n\t\tthis.gun.move(this.angle, this.getCenterX(), this.getCenterY());\r\n\t\tthis.changeHandsPosition();\r\n\t}\r\n\r\n\tprivate changeHandsPosition(): void {\r\n\t\tthis.hands[0].moveHand(this.angle, -1, this.size, this.x, this.y, this.map);\r\n\t\tthis.hands[1].moveHand(this.angle, 1, this.size, this.x, this.y, this.map);\r\n\t}\r\n\r\n\tprivate shiftOnPosition(shiftX: number, shiftY: number): void {\r\n\t\t//one or two shifts?\r\n\t\tlet countShifts = 0;\r\n\t\tif (shiftX !== 0) countShifts++;\r\n\t\tif (shiftY !== 0) countShifts++;\r\n\r\n\t\t//y shift\r\n\t\tlet shiftDirection = 1;\r\n\t\tif (shiftY < 0) shiftDirection = -1;\r\n\t\tfor (let i = 0; i < Math.abs(shiftY); i++) {\r\n\t\t\tif (this.canIshift(0, shiftY - i * shiftDirection, countShifts)) {\r\n\t\t\t\tthis.y += shiftY - i * shiftDirection;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//x shift\r\n\t\tshiftDirection = 1;\r\n\t\tif (shiftX < 0) shiftDirection = -1;\r\n\t\tfor (let i = 0; i < Math.abs(shiftX); i++) {\r\n\t\t\tif (this.canIshift(shiftX - i * shiftDirection, 0, countShifts)) {\r\n\t\t\t\tthis.x += shiftX - i * shiftDirection;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//move only on map area\r\n\t\tif (this.x + this.size > this.map.width) this.x = this.map.width - this.size;\r\n\t\tif (this.x < 0) this.x = 0;\r\n\t\tif (this.y + this.size > this.map.height) this.y = this.map.height - this.size;\r\n\t\tif (this.y < 0) this.y = 0;\r\n\t}\r\n\r\n\tprivate canIshift(shiftX: number, shiftY: number, countShifts: number): boolean {\r\n\t\t//rectangles\r\n\t\tfor (let i = 0; i < this.map.rectangleObstacles.length; i++) {\r\n\t\t\tconst rectangleObstacle = this.map.rectangleObstacles[i];\r\n\t\t\tif (rectangleObstacle.isActive()) {\r\n\t\t\t\t//collision rectangle - rectangle\r\n\t\t\t\tif (\r\n\t\t\t\t\tthis.x + shiftX + this.size >= rectangleObstacle.x &&\r\n\t\t\t\t\tthis.x + shiftX <= rectangleObstacle.x + rectangleObstacle.width &&\r\n\t\t\t\t\tthis.y + shiftY <= rectangleObstacle.y + rectangleObstacle.height &&\r\n\t\t\t\t\tthis.y + shiftY + this.size >= rectangleObstacle.y\r\n\t\t\t\t) {\r\n\t\t\t\t\tfor (let j = 0; j < this.collisionPoints.length; j++) {\r\n\t\t\t\t\t\tconst point = this.collisionPoints[j];\r\n\t\t\t\t\t\tconst pointOnMyPosition = new Point(\r\n\t\t\t\t\t\t\tthis.getCenterX() + shiftX + point.x,\r\n\t\t\t\t\t\t\tthis.getCenterY() + shiftY + point.y\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t//point collisions\r\n\t\t\t\t\t\tif (rectangleObstacle.isPointIn(pointOnMyPosition)) {\r\n\t\t\t\t\t\t\tthis.goAroundRectangleObstacle(shiftX, shiftY, countShifts, rectangleObstacle);\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//rounds\r\n\t\tfor (let i = 0; i < this.map.impassableRoundObstacles.length; i++) {\r\n\t\t\tconst roundObstacle = this.map.impassableRoundObstacles[i];\r\n\t\t\tif (roundObstacle.isActive()) {\r\n\t\t\t\tlet obstacleRadius = roundObstacle.radius;\r\n\t\t\t\tif (roundObstacle instanceof Tree) obstacleRadius = roundObstacle.treeTrankRadius;\r\n\t\t\t\tconst obstacleAndPlayerRadius = obstacleRadius + this.radius;\r\n\t\t\t\tconst x = this.getCenterX() + shiftX - roundObstacle.getCenterX();\r\n\t\t\t\tconst y = this.getCenterY() + shiftY - roundObstacle.getCenterY();\r\n\t\t\t\tconst distance = Math.sqrt(x * x + y * y);\r\n\t\t\t\tif (distance < obstacleAndPlayerRadius) {\r\n\t\t\t\t\tthis.goAroundRoundObstacle(shiftX, shiftY, countShifts, roundObstacle);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprivate goAroundRectangleObstacle(\r\n\t\tshiftX: number,\r\n\t\tshiftY: number,\r\n\t\tcountShifts: number,\r\n\t\trectangleObstacle: RectangleObstacle\r\n\t): void {\r\n\t\tthis.slowAroundObstacle = true;\r\n\t\tconst maxObstacleOverlap = this.size * 0.75;\r\n\t\tif (countShifts === 1) {\r\n\t\t\tif (shiftX !== 0) {\r\n\t\t\t\t//up or down?\r\n\t\t\t\t//go up\r\n\t\t\t\tif (this.getCenterY() <= rectangleObstacle.y + rectangleObstacle.height / 2) {\r\n\t\t\t\t\tif (this.y + this.size - rectangleObstacle.y < maxObstacleOverlap) this.shiftOnPosition(0, -1);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//go down\r\n\t\t\t\t\tif (rectangleObstacle.y + rectangleObstacle.height - this.y < maxObstacleOverlap)\r\n\t\t\t\t\t\tthis.shiftOnPosition(0, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (shiftY !== 0) {\r\n\t\t\t\t//left or right?\r\n\t\t\t\t//go left\r\n\t\t\t\tif (this.getCenterX() <= rectangleObstacle.x + rectangleObstacle.width / 2) {\r\n\t\t\t\t\tif (this.x + this.size - rectangleObstacle.x < maxObstacleOverlap) this.shiftOnPosition(-1, 0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//go right\r\n\t\t\t\t\tif (rectangleObstacle.x + rectangleObstacle.width - this.x < maxObstacleOverlap)\r\n\t\t\t\t\t\tthis.shiftOnPosition(1, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (countShifts === 2) {\r\n\t\t\tthis.slowAroundObstacle = false;\r\n\t\t\t//chose way\r\n\t\t\t//obstacle is up and right\r\n\t\t\tif (\r\n\t\t\t\tthis.getCenterX() < rectangleObstacle.x + rectangleObstacle.width / 2 &&\r\n\t\t\t\tthis.getCenterY() > rectangleObstacle.y + rectangleObstacle.height / 2\r\n\t\t\t) {\r\n\t\t\t\tconst xDistanceFromCorner = Math.abs(this.getCenterX() - rectangleObstacle.x);\r\n\t\t\t\tconst yDistanceFromCorner = Math.abs(\r\n\t\t\t\t\tthis.getCenterY() - (rectangleObstacle.y + rectangleObstacle.height)\r\n\t\t\t\t);\r\n\t\t\t\t//x shift right\r\n\t\t\t\tif (xDistanceFromCorner <= yDistanceFromCorner) {\r\n\t\t\t\t\tthis.shiftOnPosition(0.1, 0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//y shift up\r\n\t\t\t\t\tthis.shiftOnPosition(0, -0.1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (\r\n\t\t\t\tthis.getCenterX() > rectangleObstacle.x + rectangleObstacle.width / 2 &&\r\n\t\t\t\tthis.getCenterY() > rectangleObstacle.y + rectangleObstacle.height / 2\r\n\t\t\t) {\r\n\t\t\t\t//obstacle is up and left\r\n\t\t\t\tconst xDistanceFromCorner = Math.abs(\r\n\t\t\t\t\tthis.getCenterX() - (rectangleObstacle.x + rectangleObstacle.width)\r\n\t\t\t\t);\r\n\t\t\t\tconst yDistanceFromCorner = Math.abs(\r\n\t\t\t\t\tthis.getCenterY() - (rectangleObstacle.y + rectangleObstacle.height)\r\n\t\t\t\t);\r\n\t\t\t\t//x shift left\r\n\t\t\t\tif (xDistanceFromCorner <= yDistanceFromCorner) {\r\n\t\t\t\t\tthis.shiftOnPosition(-0.1, 0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//y shift up\r\n\t\t\t\t\tthis.shiftOnPosition(0, -0.1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (\r\n\t\t\t\tthis.getCenterX() > rectangleObstacle.x + rectangleObstacle.width / 2 &&\r\n\t\t\t\tthis.getCenterY() < rectangleObstacle.y + rectangleObstacle.height / 2\r\n\t\t\t) {\r\n\t\t\t\t//obstacle is down and left\r\n\t\t\t\tconst xDistanceFromCorner = Math.abs(\r\n\t\t\t\t\tthis.getCenterX() - (rectangleObstacle.x + rectangleObstacle.width)\r\n\t\t\t\t);\r\n\t\t\t\tconst yDistanceFromCorner = Math.abs(this.getCenterY() - rectangleObstacle.y);\r\n\t\t\t\t//x shift left\r\n\t\t\t\tif (xDistanceFromCorner <= yDistanceFromCorner) {\r\n\t\t\t\t\tthis.shiftOnPosition(-0.1, 0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//y shift down\r\n\t\t\t\t\tthis.shiftOnPosition(0, 0.1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (\r\n\t\t\t\tthis.getCenterX() < rectangleObstacle.x + rectangleObstacle.width / 2 &&\r\n\t\t\t\tthis.getCenterY() < rectangleObstacle.y + rectangleObstacle.height / 2\r\n\t\t\t) {\r\n\t\t\t\t//obstacle is down and right\r\n\t\t\t\tconst xDistanceFromCorner = Math.abs(this.getCenterX() - rectangleObstacle.x);\r\n\t\t\t\tconst yDistanceFromCorner = Math.abs(this.getCenterY() - rectangleObstacle.y);\r\n\t\t\t\t//x shift right\r\n\t\t\t\tif (xDistanceFromCorner <= yDistanceFromCorner) {\r\n\t\t\t\t\tthis.shiftOnPosition(0.1, 0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//y shift down\r\n\t\t\t\t\tthis.shiftOnPosition(0, 0.1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate goAroundRoundObstacle(\r\n\t\tshiftX: number,\r\n\t\tshiftY: number,\r\n\t\tcountShifts: number,\r\n\t\troundObstacle: RoundObstacle\r\n\t): void {\r\n\t\tthis.slowAroundObstacle = true;\r\n\t\tif (countShifts === 1) {\r\n\t\t\tif (shiftX !== 0) {\r\n\t\t\t\t//obstacle above\r\n\t\t\t\tif (this.getCenterY() >= roundObstacle.getCenterY()) {\r\n\t\t\t\t\t//go down\r\n\t\t\t\t\tthis.shiftOnPosition(0, 1);\r\n\t\t\t\t}\r\n\t\t\t\t//obstacle below\r\n\t\t\t\tif (this.getCenterY() < roundObstacle.getCenterY()) {\r\n\t\t\t\t\t//go up\r\n\t\t\t\t\tthis.shiftOnPosition(0, -1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (shiftY !== 0) {\r\n\t\t\t\t//obstacle on left\r\n\t\t\t\tif (this.getCenterX() >= roundObstacle.getCenterX()) {\r\n\t\t\t\t\t//go right\r\n\t\t\t\t\tthis.shiftOnPosition(1, 0);\r\n\t\t\t\t}\r\n\t\t\t\t//obstacle on right\r\n\t\t\t\tif (this.getCenterX() < roundObstacle.getCenterX()) {\r\n\t\t\t\t\t//go left\r\n\t\t\t\t\tthis.shiftOnPosition(-1, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (countShifts === 2) {\r\n\t\t\t//choose shorter way\r\n\t\t\tconst xDistance = Math.abs(this.getCenterX() - roundObstacle.getCenterX());\r\n\t\t\tconst yDistance = Math.abs(this.getCenterY() - roundObstacle.getCenterY());\r\n\r\n\t\t\t//x shift\r\n\t\t\tif (xDistance <= yDistance) {\r\n\t\t\t\t//obstacle on right\r\n\t\t\t\tif (this.getCenterX() <= roundObstacle.getCenterX()) {\r\n\t\t\t\t\t//go right\r\n\t\t\t\t\tthis.shiftOnPosition(0.5, 0);\r\n\t\t\t\t}\r\n\t\t\t\t//obstacle on left\r\n\t\t\t\tif (this.getCenterX() > roundObstacle.getCenterX()) {\r\n\t\t\t\t\t//go left\r\n\t\t\t\t\tthis.shiftOnPosition(-0.5, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//y shift\r\n\t\t\t\t//obstacle below\r\n\t\t\t\tif (this.getCenterY() <= roundObstacle.getCenterY()) {\r\n\t\t\t\t\t//go down\r\n\t\t\t\t\tthis.shiftOnPosition(0, 0.5);\r\n\t\t\t\t}\r\n\t\t\t\t//obstacle above\r\n\t\t\t\tif (this.getCenterY() > roundObstacle.getCenterY()) {\r\n\t\t\t\t\t//go up\r\n\t\t\t\t\tthis.shiftOnPosition(0, -0.5);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate rotatePlayer(mouseX: number, mouseY: number): void {\r\n\t\t//triangular sides\r\n\t\tconst centerX = this.canvas.width / 2;\r\n\t\tconst centerY = this.canvas.height / 2;\r\n\t\tlet x = centerX - mouseX;\r\n\t\tlet y = centerY - mouseY;\r\n\t\t//can not set x and y to 0 because angle\r\n\t\tif (x === 0) x = 0.1;\r\n\t\t//atangens\r\n\t\tlet angle = Math.abs(Math.atan(x / y) * 180 / Math.PI);\r\n\t\t//1..2..3..4.. Q; 0 - 90, 90 - 180...\r\n\t\t//1\r\n\t\tif (mouseX >= centerX && mouseY < centerY) {\r\n\t\t\tthis.angle = angle;\r\n\t\t}\r\n\t\t//2\r\n\t\tif (mouseX >= centerX && mouseY >= centerY) {\r\n\t\t\tthis.angle = 90 + 90 - angle;\r\n\t\t}\r\n\t\t//3\r\n\t\tif (mouseX < centerX && mouseY >= centerY) {\r\n\t\t\tthis.angle = 180 + angle;\r\n\t\t}\r\n\t\t//4\r\n\t\tif (mouseX < centerX && mouseY < centerY) {\r\n\t\t\tthis.angle = 270 + 90 - angle;\r\n\t\t}\r\n\t\tthis.angle = Math.round(this.angle);\r\n\t\tif (this.angle === 360) this.angle = 0;\r\n\t}\r\n}\r\n","import RoundObstacle from './RoundObstacle';\r\n\r\nexport default class Bush extends RoundObstacle {\r\n\tconstructor(id: number, x: number, y: number) {\r\n\t\tconst size = 100;\r\n\t\tsuper(id, x, y, size);\r\n\t\tthis.opacity = 0.9;\r\n\t}\r\n}\r\n","import RoundObstacle from './RoundObstacle';\r\n\r\nexport default class Rock extends RoundObstacle {\r\n\tconstructor(id: number,x: number, y: number) {\r\n\t\tconst size = 100;\r\n\t\tsuper(id, x, y, size);\r\n\t\tthis.opacity = 1;\r\n\t}\r\n}\r\n","import Point from './Point';\r\n\r\nexport default abstract class RectangleObstacle {\r\n\treadonly id: number;\r\n\tprotected changed: boolean = false;\r\n\treadonly x: number;\r\n\treadonly y: number;\r\n\tprotected opacity: number = 1;\r\n\treadonly width: number;\r\n\treadonly height: number;\r\n\tprivate active: boolean = true;\r\n\r\n\tconstructor(id: number, x: number, y: number, width: number, height: number) {\r\n\t\tthis.id = id;\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t}\r\n\r\n\tgetChanged(): boolean {\r\n\t\treturn this.changed;\r\n\t}\r\n\r\n\tnullChanged(): void {\r\n\t\tthis.changed = false;\r\n\t}\r\n\r\n\tgetChangedData(): any {\r\n\t\treturn { id: this.id, opacity: this.opacity };\r\n\t}\r\n\r\n\tupdate(opacity: number): void {\r\n\t\tthis.opacity = opacity;\r\n\t}\r\n\r\n\tisPointIn(point: Point): boolean {\r\n\t\tconst { x, y } = point;\r\n\t\tif (x < this.x + this.width && x >= this.x && y >= this.y && y < this.y + this.height) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tgetOpacity(): number {\r\n\t\treturn this.opacity;\r\n\t}\r\n\r\n\tisActive(): boolean {\r\n\t\treturn this.active;\r\n\t}\r\n\r\n\tacceptHit(): void {\r\n\t\tif (this.active) {\r\n\t\t\tif (this.opacity > 0.1) this.opacity -= 0.1;\r\n\t\t\tif (this.opacity < 0.1) {\r\n\t\t\t\tthis.active = false;\r\n\t\t\t}\r\n\t\t\tthis.changed = true;\r\n\t\t}\r\n\t}\r\n}\r\n","import RectangleObstacle from './RectangleObstacle';\r\n\r\nexport default class Wall extends RectangleObstacle {\r\n\tconstructor(id: number, x: number, y: number, width: number, height: number) {\r\n\t\tsuper(id, x, y, width, height);\r\n\t}\r\n}\r\n","import { Terrain, TerrainType } from './Terrain';\r\nimport Bush from './Bush';\r\nimport Tree from './Tree';\r\nimport Rock from './Rock';\r\nimport Wall from './Wall';\r\nimport WaterTerrainData from './WaterTerrainData';\r\nimport RoundObstacle from './RoundObstacle';\r\nimport RectangleObstacle from './RectangleObstacle';\r\n\r\ntype Block = {\r\n\tx: number;\r\n\ty: number;\r\n};\r\n\r\nexport default class Map {\r\n\treadonly width: number;\r\n\treadonly height: number;\r\n\treadonly blocks: Block[] = [];\r\n\treadonly terrain: Terrain[] = [];\r\n\treadonly impassableRoundObstacles: RoundObstacle[] = [];\r\n\treadonly bushes: Bush[] = [];\r\n\treadonly trees: Tree[] = [];\r\n\treadonly rocks: Rock[] = [];\r\n\treadonly rectangleObstacles: RectangleObstacle[] = [];\r\n\treadonly waterTerrainData: WaterTerrainData;\r\n\r\n\tconstructor(waterTerrainData: WaterTerrainData) {\r\n\t\tthis.waterTerrainData = waterTerrainData;\r\n\t\tconst blockSize = 300;\r\n\t\tthis.width = 5 * blockSize;\r\n\t\tthis.height = 5 * blockSize;\r\n\t\t//Create blocks\r\n\t\tfor (let yy = 0; yy < this.height / blockSize; yy++) {\r\n\t\t\tfor (let xx = 0; xx < this.width / blockSize; xx++) {\r\n\t\t\t\tthis.blocks.push({ x: xx * blockSize, y: yy * blockSize });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//terrain\r\n\t\tthis.terrain.push(new Terrain(TerrainType.Water, 0, 0, this.width, blockSize));\r\n\t\tthis.terrain.push(new Terrain(TerrainType.Water, 0, this.height - blockSize, this.width, blockSize));\r\n\t\tthis.terrain.push(new Terrain(TerrainType.Water, 0, blockSize, blockSize, this.height - 2 * blockSize));\r\n\t\tthis.terrain.push(\r\n\t\t\tnew Terrain(TerrainType.Water, this.width - blockSize, blockSize, blockSize, this.height - 2 * blockSize)\r\n\t\t);\r\n\r\n\t\t//water trangle\r\n\t\tthis.terrain.push(new Terrain(TerrainType.WaterTriangle1, blockSize, blockSize, blockSize, blockSize));\r\n\t\tthis.terrain.push(new Terrain(TerrainType.WaterTriangle2, 3 * blockSize, blockSize, blockSize, blockSize));\r\n\t\tthis.terrain.push(new Terrain(TerrainType.WaterTriangle3, 3 * blockSize, 3 * blockSize, blockSize, blockSize));\r\n\t\tthis.terrain.push(new Terrain(TerrainType.WaterTriangle4, blockSize, 3 * blockSize, blockSize, blockSize));\r\n\r\n\t\tlet id = 0;\r\n\t\t//bushes\r\n\t\tthis.bushes.push(new Bush(++id, 600, 600));\r\n\t\tthis.bushes.push(new Bush(++id, 300, 400));\r\n\r\n\t\t//rocks\r\n\t\tconst rock = new Rock(++id, 100, 100);\r\n\t\tthis.rocks.push(rock);\r\n\t\tthis.impassableRoundObstacles.push(rock);\r\n\r\n\t\tconst rock2 = new Rock(++id, 550, 550);\r\n\t\tthis.rocks.push(rock2);\r\n\t\tthis.impassableRoundObstacles.push(rock2);\r\n\r\n\t\tconst rock3 = new Rock(++id, 700, 550);\r\n\t\tthis.rocks.push(rock3);\r\n\t\tthis.impassableRoundObstacles.push(rock3);\r\n\r\n\t\t//this.rocks[0].isPointIn(new Point(120, 120));\r\n\r\n\t\t//trees\r\n\t\tconst tree = new Tree(++id, 800, 800);\r\n\t\tthis.trees.push(tree);\r\n\t\tthis.impassableRoundObstacles.push(tree);\r\n\r\n\t\tconst tree2 = new Tree(++id, 0, 0);\r\n\t\tthis.trees.push(tree2);\r\n\t\tthis.impassableRoundObstacles.push(tree2);\r\n\r\n\t\t//walls\r\n\t\tthis.rectangleObstacles.push(new Wall(++id, 600, 800, 20, 200));\r\n\t\tthis.rectangleObstacles.push(new Wall(++id, 500, 900, 200, 20));\r\n\t\tthis.rectangleObstacles.push(new Wall(++id, 500, 350, 300, 100));\r\n\t}\r\n}\r\n","import { TerrainType } from './Terrain';\r\n\r\n/*\r\nimport { triangel1 } from './triangel1Data';\r\nimport { triangel2 } from './triangel2Data';\r\nimport { triangel3 } from './triangel3Data';\r\nimport { triangel4 } from './triangel4Data';\r\n*/\r\n\r\nexport default class WaterTerrainData {\r\n\tprivate waterTriangle1: boolean[][] = [];\r\n\tprivate waterTriangle2: boolean[][] = [];\r\n\tprivate waterTriangle3: boolean[][] = [];\r\n\tprivate waterTriangle4: boolean[][] = [];\r\n\r\n\t/*\r\n\tprivate waterTriangle1: number[][] = triangel1;\r\n\tprivate waterTriangle2: number[][] = triangel2;\r\n\tprivate waterTriangle3: number[][] = triangel3;\r\n\tprivate waterTriangle4: number[][] = triangel4;\r\n\t*/\r\n\r\n\tconstructor() {}\r\n\r\n\tsetData(type: TerrainType, data: boolean[][]): void {\r\n\t\tswitch (type) {\r\n\t\t\tcase TerrainType.WaterTriangle1:\r\n\t\t\t\tthis.waterTriangle1 = data;\r\n\t\t\t\tbreak;\r\n\t\t\tcase TerrainType.WaterTriangle2:\r\n\t\t\t\tthis.waterTriangle2 = data;\r\n\t\t\t\tbreak;\r\n\t\t\tcase TerrainType.WaterTriangle3:\r\n\t\t\t\tthis.waterTriangle3 = data;\r\n\t\t\t\tbreak;\r\n\t\t\tcase TerrainType.WaterTriangle4:\r\n\t\t\t\tthis.waterTriangle4 = data;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error('Unknown water type');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tincludeWater(type: TerrainType, x: number, y: number): boolean {\r\n\t\tlet state = false;\r\n\t\tlet waterData;\r\n\t\tswitch (type) {\r\n\t\t\tcase TerrainType.WaterTriangle1:\r\n\t\t\t\twaterData = this.waterTriangle1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase TerrainType.WaterTriangle2:\r\n\t\t\t\twaterData = this.waterTriangle2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase TerrainType.WaterTriangle3:\r\n\t\t\t\twaterData = this.waterTriangle3;\r\n\t\t\t\tbreak;\r\n\t\t\tcase TerrainType.WaterTriangle4:\r\n\t\t\t\twaterData = this.waterTriangle4;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error('Unknown water type');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tif (x < waterData.length && y < waterData[x].length) {\r\n\t\t\tif (waterData[x][y]) state = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//no water data yet\r\n\t\t\t//no water data == we are in water\r\n\t\t\tif (waterData.length === 0) {\r\n\t\t\t\tstate = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthrow new Error('Out of range on water type');\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn state;\r\n\t}\r\n\r\n\t/*\r\n\twrite(): void {\r\n\t\tconst el = document.createElement('p');\r\n\t\tel.style.position = 'absolute';\r\n\t\tel.style.top = '0';\r\n\t\tel.style.left = '0';\r\n\r\n\t\tel.textContent = JSON.stringify(this.waterTriangle4);\r\n\t\tdocument.body.appendChild(el);\r\n\t}\r\n\t*/\r\n}\r\n","import { Keys, Mouse } from './Controller';\r\nimport Socket from './Socket';\r\nimport View from './View';\r\nimport Player from './Player';\r\nimport Map from './Map';\r\nimport WaterTerrainData from './WaterTerrainData';\r\nimport Bullet from './Bullet';\r\nimport ServerClientSync from './ServerClientSync';\r\nimport PlayerPackage from './PlayerPackage';\r\nimport {PlayersTick} from './PlayersTick';\r\n\r\nexport default class Model {\r\n\tprivate game: number = 0;\r\n\tprivate name: string;\r\n\tprivate id: string;\r\n\tprivate view: View;\r\n\tprivate player: Player;\r\n\tplayersTicks: PlayersTick[] = [];\r\n\tprivate socket: Socket;\r\n\tprivate waterTerrainData: WaterTerrainData;\r\n\tprivate keys: Keys;\r\n\tprivate mouse: Mouse;\r\n\tmap: Map;\r\n\tprivate bullets: Bullet[] = [];\r\n\tprivate serverClientSync: ServerClientSync;\r\n\r\n\tconstructor(keys: Keys, mouse: Mouse, socket: Socket, serverClientSync: ServerClientSync) {\r\n\t\tthis.socket = socket;\r\n\t\tthis.serverClientSync = serverClientSync;\r\n\t\tthis.waterTerrainData = new WaterTerrainData();\r\n\t\tthis.map = new Map(this.waterTerrainData);\r\n\t\tthis.player = new Player(this.map);\r\n\t\tthis.keys = keys;\r\n\t\tthis.mouse = mouse;\r\n\t\tthis.view = new View(\r\n\t\t\tthis.map,\r\n\t\t\tthis.player,\r\n\t\t\tthis.playersTicks,\r\n\t\t\tthis.bullets,\r\n\t\t\tthis.mouse,\r\n\t\t\tthis.waterTerrainData,\r\n\t\t\tthis.serverClientSync\r\n\t\t);\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.gameLoop();\r\n\t\t}, 200);\r\n\t}\r\n\r\n\tsetID(id: string): void {\r\n\t\tthis.id = id;\r\n\t}\r\n\r\n\tsetName(name: string): void {\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\tgetID(): string {\r\n\t\treturn this.id;\r\n\t}\r\n\r\n\tgetName(): string {\r\n\t\treturn this.name;\r\n\t}\r\n\r\n\tgetGame(): number {\r\n\t\treturn this.game;\r\n\t}\r\n\r\n\tprivate gameLoop(): void {\r\n\t\t//repeat\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tthis.gameLoop();\r\n\t\t});\r\n\r\n\t\t//sync\r\n\t\tif (!this.serverClientSync.ready()) {\r\n\t\t\tthis.socket.emit('serverClientSync', Date.now());\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\tthis.player.playerMove(this.keys.w, this.keys.a, this.keys.s, this.keys.d, this.mouse.x, this.mouse.y);\r\n\r\n\t\t//move and delete bullets\r\n\t\tfor (let i = this.bullets.length - 1; i >= 0; i--) {\r\n\t\t\tconst bullet = this.bullets[i];\r\n\t\t\tif (bullet.flying()) {\r\n\t\t\t\tbullet.move(this.map);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.bullets.splice(i, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\t//hit\r\n\t\tif (this.mouse.left) {\r\n\t\t\tthis.player.hit();\r\n\t\t\tif (this.player.gun.ready()) {\r\n\t\t\t\tthis.bullets.push(\r\n\t\t\t\t\tnew Bullet(\r\n\t\t\t\t\t\tthis.player.getCenterX(),\r\n\t\t\t\t\t\tthis.player.getCenterY(),\r\n\t\t\t\t\t\tthis.player.getAngle(),\r\n\t\t\t\t\t\tthis.player.gun.range\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tthis.mouse.left = false;\r\n\t\t}\r\n\t\t*/\r\n\r\n\t\tthis.view.draw();\r\n\t}\r\n\r\n\tscreenResize(): void {\r\n\t\tthis.view.screenResize();\r\n\t}\r\n}\r\n","export default class ServerClientSync {\r\n\tprivate ping: number | null = null;\r\n\tprivate pings: number[] = [];\r\n\tprivate timeDiference: number | null = null;\r\n\tprivate timeDiferences: number[] = [];\r\n\tprivate readonly attempts: number = 5;\r\n\tprivate readonly defaultDrawDelay: number = 100;\r\n\tprivate drawDelay: number = this.defaultDrawDelay;\r\n\r\n\tconstructor() {}\r\n\r\n\tgetPing(): number {\r\n\t\treturn this.ping;\r\n\t}\r\n\r\n\tgetTimeDiference(): number {\r\n\t\treturn this.timeDiference;\r\n\t}\r\n\r\n\tready(): boolean {\r\n\t\treturn this.ping != null && this.timeDiference != null;\r\n\t}\r\n\r\n\treset(): void {\r\n\t\tthis.ping = null;\r\n\t\tthis.pings = [];\r\n\t\tthis.timeDiference = null;\r\n\t\tthis.timeDiferences = [];\r\n\t}\r\n\r\n\taddData(ping: number, timeDiference: number): void {\r\n\t\tif (!this.ready()) {\r\n\t\t\tthis.pings.push(ping);\r\n\t\t\tthis.timeDiferences.push(timeDiference);\r\n\t\t}\r\n\t\t//count average\r\n\t\tif (this.pings.length === this.attempts) {\r\n\t\t\tlet pingsSuma = 0;\r\n\t\t\tfor (const ping of this.pings) {\r\n\t\t\t\tpingsSuma += ping;\r\n\t\t\t}\r\n\t\t\tthis.ping = pingsSuma / this.attempts;\r\n\t\t\tlet timeDiferenceSuma = 0;\r\n\t\t\tfor (const timeDiference of this.timeDiferences) {\r\n\t\t\t\ttimeDiferenceSuma += timeDiference;\r\n\t\t\t}\r\n\t\t\tthis.timeDiference = timeDiferenceSuma / this.attempts;\r\n\t\t}\r\n\t}\r\n\r\n\tchangeDrawDelay(change: number): void {\r\n\t\tthis.drawDelay += change;\r\n\t\tif (this.drawDelay < 0) this.drawDelay = 0;\r\n\t}\r\n\r\n\tgetDrawDelay(): number {\r\n\t\treturn this.drawDelay;\r\n\t}\r\n\r\n\tgetServerTime(): number {\r\n\t\tlet serverTime = 0;\r\n\t\tif (this.ready()) {\r\n\t\t\tserverTime = Date.now() + this.getTimeDiference();\r\n\t\t}\r\n\t\treturn serverTime;\r\n\t}\r\n}\r\n","import Model from './Model';\r\nimport Socket from './Socket';\r\nimport ServerClientSync from './ServerClientSync';\r\nimport { PlayersTick } from './PlayersTick';\r\nimport Map from './Map';\r\n\r\ndeclare const io: {\r\n\tconnect(url: string): Socket;\r\n};\r\n\r\nexport type Keys = {\r\n\tw: boolean;\r\n\ta: boolean;\r\n\ts: boolean;\r\n\td: boolean;\r\n};\r\n\r\nexport type Mouse = {\r\n\tx: number;\r\n\ty: number;\r\n\tleft: boolean;\r\n\tmiddle: boolean;\r\n\tright: boolean;\r\n};\r\n\r\nexport class Controller {\r\n\tprivate static instance: Controller;\r\n\tprivate model: Model;\r\n\tprivate socket: Socket;\r\n\tprivate serverClientSync: ServerClientSync;\r\n\tprivate canvas: HTMLCanvasElement;\r\n\tprivate keys: Keys = {\r\n\t\tw: false,\r\n\t\ta: false,\r\n\t\ts: false,\r\n\t\td: false\r\n\t};\r\n\tprivate mouse: Mouse = {\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t\tleft: false,\r\n\t\tmiddle: false,\r\n\t\tright: false\r\n\t};\r\n\r\n\tprivate playerAngle: number = 0;\r\n\r\n\tprivate constructor() {\r\n\t\tthis.canvas = document.getElementsByTagName('canvas')[0];\r\n\t\tthis.socket = io.connect('http://192.168.0.2:8888');\r\n\t\tthis.serverClientSync = new ServerClientSync();\r\n\t\tthis.model = new Model(this.keys, this.mouse, this.socket, this.serverClientSync);\r\n\t\twindow.addEventListener('resize', () => {\r\n\t\t\tthis.model.screenResize();\r\n\t\t\tconst event = new Event('mousemove');\r\n\t\t\tthis.canvas.dispatchEvent(event);\r\n\t\t});\r\n\t\tthis.keysController();\r\n\t\tthis.mouseController();\r\n\t\tthis.socketController();\r\n\t}\r\n\r\n\tstatic run(): void {\r\n\t\tif (!Controller.instance) {\r\n\t\t\tController.instance = new Controller();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error('Only one controller!');\r\n\t\t}\r\n\t}\r\n\r\n\tprivate socketController(): void {\r\n\t\tthis.socket.emit('createPlayer', 'playerName', this.model.getGame());\r\n\r\n\t\tthis.socket.on('createPlayer', (id: string, name: string) => {\r\n\t\t\tif (id && name) {\r\n\t\t\t\tthis.model.setID(id);\r\n\t\t\t\tthis.model.setName(name);\r\n\r\n\t\t\t\t//this.model.players.push(new PlayerFromServer(id, name));\r\n\t\t\t\tconsole.log('player created', id);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconsole.log('error created player', id, name);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t//sync\r\n\t\tthis.socket.on('serverClientSync', (clientDateNow, serverDateNow) => {\r\n\t\t\tconst timeNow = Date.now();\r\n\t\t\tconst ping = timeNow - clientDateNow;\r\n\t\t\tconst timeDiferenceClientServer = serverDateNow - (timeNow - ping / 2);\r\n\t\t\tthis.serverClientSync.addData(ping, timeDiferenceClientServer);\r\n\t\t});\r\n\r\n\t\t//u === update positions\r\n\t\tthis.socket.on('u', (tick: PlayersTick) => {\r\n\t\t\tconst ping = Math.round(Math.random() * 50);\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.model.playersTicks.push(tick);\r\n\t\t\t\t//delete old snapshots\r\n\t\t\t\tif (this.model.playersTicks.length > 50) {\r\n\t\t\t\t\tthis.model.playersTicks.splice(0, 1);\r\n\t\t\t\t}\r\n\t\t\t}, ping);\r\n\t\t});\r\n\r\n\t\t//update map\r\n\t\tthis.socket.on('u', (mapObject, data) => {\r\n\t\t\t//walls\r\n\t\t\tif (mapObject === 'w') {\r\n\t\t\t\tfor (const wall of this.model.map.rectangleObstacles) {\r\n\t\t\t\t\tif (wall.id === data.id) {\r\n\t\t\t\t\t\twall.update(data.opacity);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//rounds\r\n\t\t\tif (mapObject === 'r') {\r\n\t\t\t\tfor (const round of this.model.map.impassableRoundObstacles) {\r\n\t\t\t\t\tif (round.id === data.id) {\r\n\t\t\t\t\t\tround.update(data.opacity);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//bushes\r\n\t\t\tif (mapObject === 'b') {\r\n\t\t\t\tfor (const round of this.model.map.bushes) {\r\n\t\t\t\t\tif (round.id === data.id) {\r\n\t\t\t\t\t\tround.update(data.opacity);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprivate mouseController(): void {\r\n\t\tthis.canvas.addEventListener('mousemove', (e: MouseEvent) => {\r\n\t\t\tif (e.x == undefined) {\r\n\t\t\t\tthis.mouse.x = this.canvas.width / 2;\r\n\t\t\t\tthis.mouse.y = this.canvas.height / 2;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.mouse.x = e.x;\r\n\t\t\t\tthis.mouse.y = e.y;\r\n\t\t\t}\r\n\r\n\t\t\tconst previousPlayerAngle = this.playerAngle;\r\n\t\t\tthis.rotatePlayer(this.mouse.x, this.mouse.y);\r\n\t\t\t//change\r\n\t\t\tif (this.playerAngle !== previousPlayerAngle) {\r\n\t\t\t\tthis.socket.emit('a', this.model.getGame(), this.model.getID(), this.playerAngle);\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.canvas.addEventListener('click', (e: MouseEvent) => {\r\n\t\t\tthis.mouse.left = true;\r\n\t\t\tthis.socket.emit('m', this.model.getGame(), this.model.getID(), 'l');\r\n\t\t});\r\n\t}\r\n\r\n\tprivate rotatePlayer(mouseX: number, mouseY: number): void {\r\n\t\t//triangular sides\r\n\t\tconst centerX = this.canvas.width / 2;\r\n\t\tconst centerY = this.canvas.height / 2;\r\n\t\tlet x = centerX - mouseX;\r\n\t\tlet y = centerY - mouseY;\r\n\t\t//can not set x and y to 0 because angle\r\n\t\tif (x === 0) x = 0.1;\r\n\t\t//atangens\r\n\t\tlet angle = Math.abs(Math.atan(x / y) * 180 / Math.PI);\r\n\t\t//1..2..3..4.. Q; 0 - 90, 90 - 180...\r\n\t\t//1\r\n\t\tif (mouseX >= centerX && mouseY < centerY) {\r\n\t\t\tthis.playerAngle = angle;\r\n\t\t}\r\n\t\t//2\r\n\t\tif (mouseX >= centerX && mouseY >= centerY) {\r\n\t\t\tthis.playerAngle = 90 + 90 - angle;\r\n\t\t}\r\n\t\t//3\r\n\t\tif (mouseX < centerX && mouseY >= centerY) {\r\n\t\t\tthis.playerAngle = 180 + angle;\r\n\t\t}\r\n\t\t//4\r\n\t\tif (mouseX < centerX && mouseY < centerY) {\r\n\t\t\tthis.playerAngle = 270 + 90 - angle;\r\n\t\t}\r\n\t\tthis.playerAngle = Math.round(this.playerAngle);\r\n\t\tif (this.playerAngle === 360) this.playerAngle = 0;\r\n\t}\r\n\r\n\tprivate keysController(): void {\r\n\t\tdocument.addEventListener('keydown', (e: KeyboardEvent) => {\r\n\t\t\tswitch (e.code) {\r\n\t\t\t\tcase 'KeyW':\r\n\t\t\t\t\tif (!this.keys.w) this.socket.emit('c', this.model.getGame(), this.model.getID(), 'u');\r\n\t\t\t\t\tthis.keys.w = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'KeyA':\r\n\t\t\t\t\tif (!this.keys.a) this.socket.emit('c', this.model.getGame(), this.model.getID(), 'l');\r\n\t\t\t\t\tthis.keys.a = true;\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'KeyS':\r\n\t\t\t\t\tif (!this.keys.s) this.socket.emit('c', this.model.getGame(), this.model.getID(), 'd');\r\n\t\t\t\t\tthis.keys.s = true;\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'KeyD':\r\n\t\t\t\t\tif (!this.keys.d) this.socket.emit('c', this.model.getGame(), this.model.getID(), 'r');\r\n\t\t\t\t\tthis.keys.d = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener('keyup', (e: KeyboardEvent) => {\r\n\t\t\tswitch (e.code) {\r\n\t\t\t\tcase 'KeyW':\r\n\t\t\t\t\tif (this.keys.w) this.socket.emit('c', this.model.getGame(), this.model.getID(), '-u');\r\n\t\t\t\t\tthis.keys.w = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'KeyA':\r\n\t\t\t\t\tif (this.keys.a) this.socket.emit('c', this.model.getGame(), this.model.getID(), '-l');\r\n\t\t\t\t\tthis.keys.a = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'KeyS':\r\n\t\t\t\t\tif (this.keys.s) this.socket.emit('c', this.model.getGame(), this.model.getID(), '-d');\r\n\t\t\t\t\tthis.keys.s = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'KeyD':\r\n\t\t\t\t\tif (this.keys.d) this.socket.emit('c', this.model.getGame(), this.model.getID(), '-r');\r\n\t\t\t\t\tthis.keys.d = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","import { Controller } from './Controller';\r\nController.run();\r\n"],"sourceRoot":""}